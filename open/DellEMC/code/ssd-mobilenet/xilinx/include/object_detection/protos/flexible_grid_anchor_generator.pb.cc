// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/flexible_grid_anchor_generator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "object_detection/protos/flexible_grid_anchor_generator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace object_detection {
namespace protos {
class FlexibleGridAnchorGeneratorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FlexibleGridAnchorGenerator>
     _instance;
} _FlexibleGridAnchorGenerator_default_instance_;
class AnchorGridDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorGrid>
     _instance;
} _AnchorGrid_default_instance_;

namespace protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlexibleGridAnchorGenerator, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlexibleGridAnchorGenerator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlexibleGridAnchorGenerator, anchor_grid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlexibleGridAnchorGenerator, normalize_coordinates_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGrid, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGrid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGrid, base_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGrid, aspect_ratios_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGrid, height_stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGrid, width_stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGrid, height_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGrid, width_offset_),
  ~0u,
  ~0u,
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(FlexibleGridAnchorGenerator)},
  { 9, 20, sizeof(AnchorGrid)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_FlexibleGridAnchorGenerator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorGrid_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "object_detection/protos/flexible_grid_anchor_generator.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _FlexibleGridAnchorGenerator_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FlexibleGridAnchorGenerator_default_instance_);_AnchorGrid_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorGrid_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n<object_detection/protos/flexible_grid_"
      "anchor_generator.proto\022\027object_detection"
      ".protos\"|\n\033FlexibleGridAnchorGenerator\0228"
      "\n\013anchor_grid\030\001 \003(\0132#.object_detection.p"
      "rotos.AnchorGrid\022#\n\025normalize_coordinate"
      "s\030\002 \001(\010:\004true\"\227\001\n\nAnchorGrid\022\022\n\nbase_siz"
      "es\030\001 \003(\002\022\025\n\raspect_ratios\030\002 \003(\002\022\025\n\rheigh"
      "t_stride\030\003 \001(\r\022\024\n\014width_stride\030\004 \001(\r\022\030\n\r"
      "height_offset\030\005 \001(\r:\0010\022\027\n\014width_offset\030\006"
      " \001(\r:\0010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 367);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "object_detection/protos/flexible_grid_anchor_generator.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FlexibleGridAnchorGenerator::kAnchorGridFieldNumber;
const int FlexibleGridAnchorGenerator::kNormalizeCoordinatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlexibleGridAnchorGenerator::FlexibleGridAnchorGenerator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.FlexibleGridAnchorGenerator)
}
FlexibleGridAnchorGenerator::FlexibleGridAnchorGenerator(const FlexibleGridAnchorGenerator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      anchor_grid_(from.anchor_grid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  normalize_coordinates_ = from.normalize_coordinates_;
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.FlexibleGridAnchorGenerator)
}

void FlexibleGridAnchorGenerator::SharedCtor() {
  _cached_size_ = 0;
  normalize_coordinates_ = true;
}

FlexibleGridAnchorGenerator::~FlexibleGridAnchorGenerator() {
  // @@protoc_insertion_point(destructor:object_detection.protos.FlexibleGridAnchorGenerator)
  SharedDtor();
}

void FlexibleGridAnchorGenerator::SharedDtor() {
}

void FlexibleGridAnchorGenerator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FlexibleGridAnchorGenerator::descriptor() {
  protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlexibleGridAnchorGenerator& FlexibleGridAnchorGenerator::default_instance() {
  protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::InitDefaults();
  return *internal_default_instance();
}

FlexibleGridAnchorGenerator* FlexibleGridAnchorGenerator::New(::google::protobuf::Arena* arena) const {
  FlexibleGridAnchorGenerator* n = new FlexibleGridAnchorGenerator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FlexibleGridAnchorGenerator::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.FlexibleGridAnchorGenerator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  anchor_grid_.Clear();
  normalize_coordinates_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FlexibleGridAnchorGenerator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.FlexibleGridAnchorGenerator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .object_detection.protos.AnchorGrid anchor_grid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_anchor_grid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool normalize_coordinates = 2 [default = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_normalize_coordinates();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &normalize_coordinates_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.FlexibleGridAnchorGenerator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.FlexibleGridAnchorGenerator)
  return false;
#undef DO_
}

void FlexibleGridAnchorGenerator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.FlexibleGridAnchorGenerator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .object_detection.protos.AnchorGrid anchor_grid = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->anchor_grid_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->anchor_grid(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool normalize_coordinates = 2 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->normalize_coordinates(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.FlexibleGridAnchorGenerator)
}

::google::protobuf::uint8* FlexibleGridAnchorGenerator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.FlexibleGridAnchorGenerator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .object_detection.protos.AnchorGrid anchor_grid = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->anchor_grid_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->anchor_grid(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool normalize_coordinates = 2 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->normalize_coordinates(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.FlexibleGridAnchorGenerator)
  return target;
}

size_t FlexibleGridAnchorGenerator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.FlexibleGridAnchorGenerator)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .object_detection.protos.AnchorGrid anchor_grid = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->anchor_grid_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->anchor_grid(static_cast<int>(i)));
    }
  }

  // optional bool normalize_coordinates = 2 [default = true];
  if (has_normalize_coordinates()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FlexibleGridAnchorGenerator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.FlexibleGridAnchorGenerator)
  GOOGLE_DCHECK_NE(&from, this);
  const FlexibleGridAnchorGenerator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlexibleGridAnchorGenerator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.FlexibleGridAnchorGenerator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.FlexibleGridAnchorGenerator)
    MergeFrom(*source);
  }
}

void FlexibleGridAnchorGenerator::MergeFrom(const FlexibleGridAnchorGenerator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.FlexibleGridAnchorGenerator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  anchor_grid_.MergeFrom(from.anchor_grid_);
  if (from.has_normalize_coordinates()) {
    set_normalize_coordinates(from.normalize_coordinates());
  }
}

void FlexibleGridAnchorGenerator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.FlexibleGridAnchorGenerator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlexibleGridAnchorGenerator::CopyFrom(const FlexibleGridAnchorGenerator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.FlexibleGridAnchorGenerator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlexibleGridAnchorGenerator::IsInitialized() const {
  return true;
}

void FlexibleGridAnchorGenerator::Swap(FlexibleGridAnchorGenerator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlexibleGridAnchorGenerator::InternalSwap(FlexibleGridAnchorGenerator* other) {
  using std::swap;
  anchor_grid_.InternalSwap(&other->anchor_grid_);
  swap(normalize_coordinates_, other->normalize_coordinates_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FlexibleGridAnchorGenerator::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FlexibleGridAnchorGenerator

// repeated .object_detection.protos.AnchorGrid anchor_grid = 1;
int FlexibleGridAnchorGenerator::anchor_grid_size() const {
  return anchor_grid_.size();
}
void FlexibleGridAnchorGenerator::clear_anchor_grid() {
  anchor_grid_.Clear();
}
const ::object_detection::protos::AnchorGrid& FlexibleGridAnchorGenerator::anchor_grid(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FlexibleGridAnchorGenerator.anchor_grid)
  return anchor_grid_.Get(index);
}
::object_detection::protos::AnchorGrid* FlexibleGridAnchorGenerator::mutable_anchor_grid(int index) {
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FlexibleGridAnchorGenerator.anchor_grid)
  return anchor_grid_.Mutable(index);
}
::object_detection::protos::AnchorGrid* FlexibleGridAnchorGenerator::add_anchor_grid() {
  // @@protoc_insertion_point(field_add:object_detection.protos.FlexibleGridAnchorGenerator.anchor_grid)
  return anchor_grid_.Add();
}
::google::protobuf::RepeatedPtrField< ::object_detection::protos::AnchorGrid >*
FlexibleGridAnchorGenerator::mutable_anchor_grid() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.FlexibleGridAnchorGenerator.anchor_grid)
  return &anchor_grid_;
}
const ::google::protobuf::RepeatedPtrField< ::object_detection::protos::AnchorGrid >&
FlexibleGridAnchorGenerator::anchor_grid() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.FlexibleGridAnchorGenerator.anchor_grid)
  return anchor_grid_;
}

// optional bool normalize_coordinates = 2 [default = true];
bool FlexibleGridAnchorGenerator::has_normalize_coordinates() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FlexibleGridAnchorGenerator::set_has_normalize_coordinates() {
  _has_bits_[0] |= 0x00000001u;
}
void FlexibleGridAnchorGenerator::clear_has_normalize_coordinates() {
  _has_bits_[0] &= ~0x00000001u;
}
void FlexibleGridAnchorGenerator::clear_normalize_coordinates() {
  normalize_coordinates_ = true;
  clear_has_normalize_coordinates();
}
bool FlexibleGridAnchorGenerator::normalize_coordinates() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FlexibleGridAnchorGenerator.normalize_coordinates)
  return normalize_coordinates_;
}
void FlexibleGridAnchorGenerator::set_normalize_coordinates(bool value) {
  set_has_normalize_coordinates();
  normalize_coordinates_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.FlexibleGridAnchorGenerator.normalize_coordinates)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorGrid::kBaseSizesFieldNumber;
const int AnchorGrid::kAspectRatiosFieldNumber;
const int AnchorGrid::kHeightStrideFieldNumber;
const int AnchorGrid::kWidthStrideFieldNumber;
const int AnchorGrid::kHeightOffsetFieldNumber;
const int AnchorGrid::kWidthOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorGrid::AnchorGrid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.AnchorGrid)
}
AnchorGrid::AnchorGrid(const AnchorGrid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      base_sizes_(from.base_sizes_),
      aspect_ratios_(from.aspect_ratios_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&height_stride_, &from.height_stride_,
    static_cast<size_t>(reinterpret_cast<char*>(&width_offset_) -
    reinterpret_cast<char*>(&height_stride_)) + sizeof(width_offset_));
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.AnchorGrid)
}

void AnchorGrid::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&height_stride_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_offset_) -
      reinterpret_cast<char*>(&height_stride_)) + sizeof(width_offset_));
}

AnchorGrid::~AnchorGrid() {
  // @@protoc_insertion_point(destructor:object_detection.protos.AnchorGrid)
  SharedDtor();
}

void AnchorGrid::SharedDtor() {
}

void AnchorGrid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorGrid::descriptor() {
  protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorGrid& AnchorGrid::default_instance() {
  protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorGrid* AnchorGrid::New(::google::protobuf::Arena* arena) const {
  AnchorGrid* n = new AnchorGrid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorGrid::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.AnchorGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_sizes_.Clear();
  aspect_ratios_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&height_stride_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&width_offset_) -
        reinterpret_cast<char*>(&height_stride_)) + sizeof(width_offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AnchorGrid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.AnchorGrid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float base_sizes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_base_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_base_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float aspect_ratios = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21u, input, this->mutable_aspect_ratios())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_aspect_ratios())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height_stride = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height_stride();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_stride_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width_stride = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_width_stride();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_stride_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height_offset = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_height_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width_offset = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_width_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.AnchorGrid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.AnchorGrid)
  return false;
#undef DO_
}

void AnchorGrid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.AnchorGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float base_sizes = 1;
  for (int i = 0, n = this->base_sizes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->base_sizes(i), output);
  }

  // repeated float aspect_ratios = 2;
  for (int i = 0, n = this->aspect_ratios_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->aspect_ratios(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 height_stride = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->height_stride(), output);
  }

  // optional uint32 width_stride = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->width_stride(), output);
  }

  // optional uint32 height_offset = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->height_offset(), output);
  }

  // optional uint32 width_offset = 6 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->width_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.AnchorGrid)
}

::google::protobuf::uint8* AnchorGrid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.AnchorGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float base_sizes = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->base_sizes_, target);

  // repeated float aspect_ratios = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(2, this->aspect_ratios_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 height_stride = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->height_stride(), target);
  }

  // optional uint32 width_stride = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->width_stride(), target);
  }

  // optional uint32 height_offset = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->height_offset(), target);
  }

  // optional uint32 width_offset = 6 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->width_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.AnchorGrid)
  return target;
}

size_t AnchorGrid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.AnchorGrid)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float base_sizes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->base_sizes_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->base_sizes_size());
    total_size += data_size;
  }

  // repeated float aspect_ratios = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->aspect_ratios_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->aspect_ratios_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 height_stride = 3;
    if (has_height_stride()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height_stride());
    }

    // optional uint32 width_stride = 4;
    if (has_width_stride()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width_stride());
    }

    // optional uint32 height_offset = 5 [default = 0];
    if (has_height_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height_offset());
    }

    // optional uint32 width_offset = 6 [default = 0];
    if (has_width_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width_offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorGrid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.AnchorGrid)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorGrid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorGrid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.AnchorGrid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.AnchorGrid)
    MergeFrom(*source);
  }
}

void AnchorGrid::MergeFrom(const AnchorGrid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.AnchorGrid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  base_sizes_.MergeFrom(from.base_sizes_);
  aspect_ratios_.MergeFrom(from.aspect_ratios_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      height_stride_ = from.height_stride_;
    }
    if (cached_has_bits & 0x00000002u) {
      width_stride_ = from.width_stride_;
    }
    if (cached_has_bits & 0x00000004u) {
      height_offset_ = from.height_offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      width_offset_ = from.width_offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AnchorGrid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.AnchorGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorGrid::CopyFrom(const AnchorGrid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.AnchorGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorGrid::IsInitialized() const {
  return true;
}

void AnchorGrid::Swap(AnchorGrid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorGrid::InternalSwap(AnchorGrid* other) {
  using std::swap;
  base_sizes_.InternalSwap(&other->base_sizes_);
  aspect_ratios_.InternalSwap(&other->aspect_ratios_);
  swap(height_stride_, other->height_stride_);
  swap(width_stride_, other->width_stride_);
  swap(height_offset_, other->height_offset_);
  swap(width_offset_, other->width_offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorGrid::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorGrid

// repeated float base_sizes = 1;
int AnchorGrid::base_sizes_size() const {
  return base_sizes_.size();
}
void AnchorGrid::clear_base_sizes() {
  base_sizes_.Clear();
}
float AnchorGrid::base_sizes(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.base_sizes)
  return base_sizes_.Get(index);
}
void AnchorGrid::set_base_sizes(int index, float value) {
  base_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.base_sizes)
}
void AnchorGrid::add_base_sizes(float value) {
  base_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:object_detection.protos.AnchorGrid.base_sizes)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGrid::base_sizes() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.AnchorGrid.base_sizes)
  return base_sizes_;
}
::google::protobuf::RepeatedField< float >*
AnchorGrid::mutable_base_sizes() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.AnchorGrid.base_sizes)
  return &base_sizes_;
}

// repeated float aspect_ratios = 2;
int AnchorGrid::aspect_ratios_size() const {
  return aspect_ratios_.size();
}
void AnchorGrid::clear_aspect_ratios() {
  aspect_ratios_.Clear();
}
float AnchorGrid::aspect_ratios(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.aspect_ratios)
  return aspect_ratios_.Get(index);
}
void AnchorGrid::set_aspect_ratios(int index, float value) {
  aspect_ratios_.Set(index, value);
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.aspect_ratios)
}
void AnchorGrid::add_aspect_ratios(float value) {
  aspect_ratios_.Add(value);
  // @@protoc_insertion_point(field_add:object_detection.protos.AnchorGrid.aspect_ratios)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGrid::aspect_ratios() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.AnchorGrid.aspect_ratios)
  return aspect_ratios_;
}
::google::protobuf::RepeatedField< float >*
AnchorGrid::mutable_aspect_ratios() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.AnchorGrid.aspect_ratios)
  return &aspect_ratios_;
}

// optional uint32 height_stride = 3;
bool AnchorGrid::has_height_stride() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AnchorGrid::set_has_height_stride() {
  _has_bits_[0] |= 0x00000001u;
}
void AnchorGrid::clear_has_height_stride() {
  _has_bits_[0] &= ~0x00000001u;
}
void AnchorGrid::clear_height_stride() {
  height_stride_ = 0u;
  clear_has_height_stride();
}
::google::protobuf::uint32 AnchorGrid::height_stride() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.height_stride)
  return height_stride_;
}
void AnchorGrid::set_height_stride(::google::protobuf::uint32 value) {
  set_has_height_stride();
  height_stride_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.height_stride)
}

// optional uint32 width_stride = 4;
bool AnchorGrid::has_width_stride() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AnchorGrid::set_has_width_stride() {
  _has_bits_[0] |= 0x00000002u;
}
void AnchorGrid::clear_has_width_stride() {
  _has_bits_[0] &= ~0x00000002u;
}
void AnchorGrid::clear_width_stride() {
  width_stride_ = 0u;
  clear_has_width_stride();
}
::google::protobuf::uint32 AnchorGrid::width_stride() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.width_stride)
  return width_stride_;
}
void AnchorGrid::set_width_stride(::google::protobuf::uint32 value) {
  set_has_width_stride();
  width_stride_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.width_stride)
}

// optional uint32 height_offset = 5 [default = 0];
bool AnchorGrid::has_height_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AnchorGrid::set_has_height_offset() {
  _has_bits_[0] |= 0x00000004u;
}
void AnchorGrid::clear_has_height_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
void AnchorGrid::clear_height_offset() {
  height_offset_ = 0u;
  clear_has_height_offset();
}
::google::protobuf::uint32 AnchorGrid::height_offset() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.height_offset)
  return height_offset_;
}
void AnchorGrid::set_height_offset(::google::protobuf::uint32 value) {
  set_has_height_offset();
  height_offset_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.height_offset)
}

// optional uint32 width_offset = 6 [default = 0];
bool AnchorGrid::has_width_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AnchorGrid::set_has_width_offset() {
  _has_bits_[0] |= 0x00000008u;
}
void AnchorGrid::clear_has_width_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
void AnchorGrid::clear_width_offset() {
  width_offset_ = 0u;
  clear_has_width_offset();
}
::google::protobuf::uint32 AnchorGrid::width_offset() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.width_offset)
  return width_offset_;
}
void AnchorGrid::set_width_offset(::google::protobuf::uint32 value) {
  set_has_width_offset();
  width_offset_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.width_offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)
