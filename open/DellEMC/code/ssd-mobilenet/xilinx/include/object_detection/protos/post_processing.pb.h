// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/post_processing.proto

#ifndef PROTOBUF_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto__INCLUDED
#define PROTOBUF_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "object_detection/protos/calibration.pb.h"
// @@protoc_insertion_point(includes)
namespace object_detection {
namespace protos {
class BatchNonMaxSuppression;
class BatchNonMaxSuppressionDefaultTypeInternal;
extern BatchNonMaxSuppressionDefaultTypeInternal _BatchNonMaxSuppression_default_instance_;
class PostProcessing;
class PostProcessingDefaultTypeInternal;
extern PostProcessingDefaultTypeInternal _PostProcessing_default_instance_;
}  // namespace protos
}  // namespace object_detection

namespace object_detection {
namespace protos {

namespace protobuf_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto

enum PostProcessing_ScoreConverter {
  PostProcessing_ScoreConverter_IDENTITY = 0,
  PostProcessing_ScoreConverter_SIGMOID = 1,
  PostProcessing_ScoreConverter_SOFTMAX = 2
};
bool PostProcessing_ScoreConverter_IsValid(int value);
const PostProcessing_ScoreConverter PostProcessing_ScoreConverter_ScoreConverter_MIN = PostProcessing_ScoreConverter_IDENTITY;
const PostProcessing_ScoreConverter PostProcessing_ScoreConverter_ScoreConverter_MAX = PostProcessing_ScoreConverter_SOFTMAX;
const int PostProcessing_ScoreConverter_ScoreConverter_ARRAYSIZE = PostProcessing_ScoreConverter_ScoreConverter_MAX + 1;

const ::google::protobuf::EnumDescriptor* PostProcessing_ScoreConverter_descriptor();
inline const ::std::string& PostProcessing_ScoreConverter_Name(PostProcessing_ScoreConverter value) {
  return ::google::protobuf::internal::NameOfEnum(
    PostProcessing_ScoreConverter_descriptor(), value);
}
inline bool PostProcessing_ScoreConverter_Parse(
    const ::std::string& name, PostProcessing_ScoreConverter* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PostProcessing_ScoreConverter>(
    PostProcessing_ScoreConverter_descriptor(), name, value);
}
// ===================================================================

class BatchNonMaxSuppression : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.BatchNonMaxSuppression) */ {
 public:
  BatchNonMaxSuppression();
  virtual ~BatchNonMaxSuppression();

  BatchNonMaxSuppression(const BatchNonMaxSuppression& from);

  inline BatchNonMaxSuppression& operator=(const BatchNonMaxSuppression& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchNonMaxSuppression(BatchNonMaxSuppression&& from) noexcept
    : BatchNonMaxSuppression() {
    *this = ::std::move(from);
  }

  inline BatchNonMaxSuppression& operator=(BatchNonMaxSuppression&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchNonMaxSuppression& default_instance();

  static inline const BatchNonMaxSuppression* internal_default_instance() {
    return reinterpret_cast<const BatchNonMaxSuppression*>(
               &_BatchNonMaxSuppression_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(BatchNonMaxSuppression* other);
  friend void swap(BatchNonMaxSuppression& a, BatchNonMaxSuppression& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchNonMaxSuppression* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchNonMaxSuppression* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchNonMaxSuppression& from);
  void MergeFrom(const BatchNonMaxSuppression& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchNonMaxSuppression* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float score_threshold = 1 [default = 0];
  bool has_score_threshold() const;
  void clear_score_threshold();
  static const int kScoreThresholdFieldNumber = 1;
  float score_threshold() const;
  void set_score_threshold(float value);

  // optional bool use_static_shapes = 6 [default = false];
  bool has_use_static_shapes() const;
  void clear_use_static_shapes();
  static const int kUseStaticShapesFieldNumber = 6;
  bool use_static_shapes() const;
  void set_use_static_shapes(bool value);

  // optional bool use_class_agnostic_nms = 7 [default = false];
  bool has_use_class_agnostic_nms() const;
  void clear_use_class_agnostic_nms();
  static const int kUseClassAgnosticNmsFieldNumber = 7;
  bool use_class_agnostic_nms() const;
  void set_use_class_agnostic_nms(bool value);

  // optional float soft_nms_sigma = 9 [default = 0];
  bool has_soft_nms_sigma() const;
  void clear_soft_nms_sigma();
  static const int kSoftNmsSigmaFieldNumber = 9;
  float soft_nms_sigma() const;
  void set_soft_nms_sigma(float value);

  // optional float iou_threshold = 2 [default = 0.6];
  bool has_iou_threshold() const;
  void clear_iou_threshold();
  static const int kIouThresholdFieldNumber = 2;
  float iou_threshold() const;
  void set_iou_threshold(float value);

  // optional int32 max_detections_per_class = 3 [default = 100];
  bool has_max_detections_per_class() const;
  void clear_max_detections_per_class();
  static const int kMaxDetectionsPerClassFieldNumber = 3;
  ::google::protobuf::int32 max_detections_per_class() const;
  void set_max_detections_per_class(::google::protobuf::int32 value);

  // optional int32 max_total_detections = 5 [default = 100];
  bool has_max_total_detections() const;
  void clear_max_total_detections();
  static const int kMaxTotalDetectionsFieldNumber = 5;
  ::google::protobuf::int32 max_total_detections() const;
  void set_max_total_detections(::google::protobuf::int32 value);

  // optional int32 max_classes_per_detection = 8 [default = 1];
  bool has_max_classes_per_detection() const;
  void clear_max_classes_per_detection();
  static const int kMaxClassesPerDetectionFieldNumber = 8;
  ::google::protobuf::int32 max_classes_per_detection() const;
  void set_max_classes_per_detection(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:object_detection.protos.BatchNonMaxSuppression)
 private:
  void set_has_score_threshold();
  void clear_has_score_threshold();
  void set_has_iou_threshold();
  void clear_has_iou_threshold();
  void set_has_max_detections_per_class();
  void clear_has_max_detections_per_class();
  void set_has_max_total_detections();
  void clear_has_max_total_detections();
  void set_has_use_static_shapes();
  void clear_has_use_static_shapes();
  void set_has_use_class_agnostic_nms();
  void clear_has_use_class_agnostic_nms();
  void set_has_max_classes_per_detection();
  void clear_has_max_classes_per_detection();
  void set_has_soft_nms_sigma();
  void clear_has_soft_nms_sigma();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float score_threshold_;
  bool use_static_shapes_;
  bool use_class_agnostic_nms_;
  float soft_nms_sigma_;
  float iou_threshold_;
  ::google::protobuf::int32 max_detections_per_class_;
  ::google::protobuf::int32 max_total_detections_;
  ::google::protobuf::int32 max_classes_per_detection_;
  friend struct protobuf_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PostProcessing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.PostProcessing) */ {
 public:
  PostProcessing();
  virtual ~PostProcessing();

  PostProcessing(const PostProcessing& from);

  inline PostProcessing& operator=(const PostProcessing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PostProcessing(PostProcessing&& from) noexcept
    : PostProcessing() {
    *this = ::std::move(from);
  }

  inline PostProcessing& operator=(PostProcessing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PostProcessing& default_instance();

  static inline const PostProcessing* internal_default_instance() {
    return reinterpret_cast<const PostProcessing*>(
               &_PostProcessing_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PostProcessing* other);
  friend void swap(PostProcessing& a, PostProcessing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PostProcessing* New() const PROTOBUF_FINAL { return New(NULL); }

  PostProcessing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PostProcessing& from);
  void MergeFrom(const PostProcessing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PostProcessing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PostProcessing_ScoreConverter ScoreConverter;
  static const ScoreConverter IDENTITY =
    PostProcessing_ScoreConverter_IDENTITY;
  static const ScoreConverter SIGMOID =
    PostProcessing_ScoreConverter_SIGMOID;
  static const ScoreConverter SOFTMAX =
    PostProcessing_ScoreConverter_SOFTMAX;
  static inline bool ScoreConverter_IsValid(int value) {
    return PostProcessing_ScoreConverter_IsValid(value);
  }
  static const ScoreConverter ScoreConverter_MIN =
    PostProcessing_ScoreConverter_ScoreConverter_MIN;
  static const ScoreConverter ScoreConverter_MAX =
    PostProcessing_ScoreConverter_ScoreConverter_MAX;
  static const int ScoreConverter_ARRAYSIZE =
    PostProcessing_ScoreConverter_ScoreConverter_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ScoreConverter_descriptor() {
    return PostProcessing_ScoreConverter_descriptor();
  }
  static inline const ::std::string& ScoreConverter_Name(ScoreConverter value) {
    return PostProcessing_ScoreConverter_Name(value);
  }
  static inline bool ScoreConverter_Parse(const ::std::string& name,
      ScoreConverter* value) {
    return PostProcessing_ScoreConverter_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .object_detection.protos.BatchNonMaxSuppression batch_non_max_suppression = 1;
  bool has_batch_non_max_suppression() const;
  void clear_batch_non_max_suppression();
  static const int kBatchNonMaxSuppressionFieldNumber = 1;
  const ::object_detection::protos::BatchNonMaxSuppression& batch_non_max_suppression() const;
  ::object_detection::protos::BatchNonMaxSuppression* mutable_batch_non_max_suppression();
  ::object_detection::protos::BatchNonMaxSuppression* release_batch_non_max_suppression();
  void set_allocated_batch_non_max_suppression(::object_detection::protos::BatchNonMaxSuppression* batch_non_max_suppression);

  // optional .object_detection.protos.CalibrationConfig calibration_config = 4;
  bool has_calibration_config() const;
  void clear_calibration_config();
  static const int kCalibrationConfigFieldNumber = 4;
  const ::object_detection::protos::CalibrationConfig& calibration_config() const;
  ::object_detection::protos::CalibrationConfig* mutable_calibration_config();
  ::object_detection::protos::CalibrationConfig* release_calibration_config();
  void set_allocated_calibration_config(::object_detection::protos::CalibrationConfig* calibration_config);

  // optional .object_detection.protos.PostProcessing.ScoreConverter score_converter = 2 [default = IDENTITY];
  bool has_score_converter() const;
  void clear_score_converter();
  static const int kScoreConverterFieldNumber = 2;
  ::object_detection::protos::PostProcessing_ScoreConverter score_converter() const;
  void set_score_converter(::object_detection::protos::PostProcessing_ScoreConverter value);

  // optional float logit_scale = 3 [default = 1];
  bool has_logit_scale() const;
  void clear_logit_scale();
  static const int kLogitScaleFieldNumber = 3;
  float logit_scale() const;
  void set_logit_scale(float value);

  // @@protoc_insertion_point(class_scope:object_detection.protos.PostProcessing)
 private:
  void set_has_batch_non_max_suppression();
  void clear_has_batch_non_max_suppression();
  void set_has_score_converter();
  void clear_has_score_converter();
  void set_has_logit_scale();
  void clear_has_logit_scale();
  void set_has_calibration_config();
  void clear_has_calibration_config();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::object_detection::protos::BatchNonMaxSuppression* batch_non_max_suppression_;
  ::object_detection::protos::CalibrationConfig* calibration_config_;
  int score_converter_;
  float logit_scale_;
  friend struct protobuf_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BatchNonMaxSuppression

// optional float score_threshold = 1 [default = 0];
inline bool BatchNonMaxSuppression::has_score_threshold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchNonMaxSuppression::set_has_score_threshold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchNonMaxSuppression::clear_has_score_threshold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchNonMaxSuppression::clear_score_threshold() {
  score_threshold_ = 0;
  clear_has_score_threshold();
}
inline float BatchNonMaxSuppression::score_threshold() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.score_threshold)
  return score_threshold_;
}
inline void BatchNonMaxSuppression::set_score_threshold(float value) {
  set_has_score_threshold();
  score_threshold_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.score_threshold)
}

// optional float iou_threshold = 2 [default = 0.6];
inline bool BatchNonMaxSuppression::has_iou_threshold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BatchNonMaxSuppression::set_has_iou_threshold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BatchNonMaxSuppression::clear_has_iou_threshold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BatchNonMaxSuppression::clear_iou_threshold() {
  iou_threshold_ = 0.6f;
  clear_has_iou_threshold();
}
inline float BatchNonMaxSuppression::iou_threshold() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.iou_threshold)
  return iou_threshold_;
}
inline void BatchNonMaxSuppression::set_iou_threshold(float value) {
  set_has_iou_threshold();
  iou_threshold_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.iou_threshold)
}

// optional int32 max_detections_per_class = 3 [default = 100];
inline bool BatchNonMaxSuppression::has_max_detections_per_class() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BatchNonMaxSuppression::set_has_max_detections_per_class() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BatchNonMaxSuppression::clear_has_max_detections_per_class() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BatchNonMaxSuppression::clear_max_detections_per_class() {
  max_detections_per_class_ = 100;
  clear_has_max_detections_per_class();
}
inline ::google::protobuf::int32 BatchNonMaxSuppression::max_detections_per_class() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.max_detections_per_class)
  return max_detections_per_class_;
}
inline void BatchNonMaxSuppression::set_max_detections_per_class(::google::protobuf::int32 value) {
  set_has_max_detections_per_class();
  max_detections_per_class_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.max_detections_per_class)
}

// optional int32 max_total_detections = 5 [default = 100];
inline bool BatchNonMaxSuppression::has_max_total_detections() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BatchNonMaxSuppression::set_has_max_total_detections() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BatchNonMaxSuppression::clear_has_max_total_detections() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BatchNonMaxSuppression::clear_max_total_detections() {
  max_total_detections_ = 100;
  clear_has_max_total_detections();
}
inline ::google::protobuf::int32 BatchNonMaxSuppression::max_total_detections() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.max_total_detections)
  return max_total_detections_;
}
inline void BatchNonMaxSuppression::set_max_total_detections(::google::protobuf::int32 value) {
  set_has_max_total_detections();
  max_total_detections_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.max_total_detections)
}

// optional bool use_static_shapes = 6 [default = false];
inline bool BatchNonMaxSuppression::has_use_static_shapes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchNonMaxSuppression::set_has_use_static_shapes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchNonMaxSuppression::clear_has_use_static_shapes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchNonMaxSuppression::clear_use_static_shapes() {
  use_static_shapes_ = false;
  clear_has_use_static_shapes();
}
inline bool BatchNonMaxSuppression::use_static_shapes() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.use_static_shapes)
  return use_static_shapes_;
}
inline void BatchNonMaxSuppression::set_use_static_shapes(bool value) {
  set_has_use_static_shapes();
  use_static_shapes_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.use_static_shapes)
}

// optional bool use_class_agnostic_nms = 7 [default = false];
inline bool BatchNonMaxSuppression::has_use_class_agnostic_nms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchNonMaxSuppression::set_has_use_class_agnostic_nms() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchNonMaxSuppression::clear_has_use_class_agnostic_nms() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchNonMaxSuppression::clear_use_class_agnostic_nms() {
  use_class_agnostic_nms_ = false;
  clear_has_use_class_agnostic_nms();
}
inline bool BatchNonMaxSuppression::use_class_agnostic_nms() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.use_class_agnostic_nms)
  return use_class_agnostic_nms_;
}
inline void BatchNonMaxSuppression::set_use_class_agnostic_nms(bool value) {
  set_has_use_class_agnostic_nms();
  use_class_agnostic_nms_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.use_class_agnostic_nms)
}

// optional int32 max_classes_per_detection = 8 [default = 1];
inline bool BatchNonMaxSuppression::has_max_classes_per_detection() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BatchNonMaxSuppression::set_has_max_classes_per_detection() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BatchNonMaxSuppression::clear_has_max_classes_per_detection() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BatchNonMaxSuppression::clear_max_classes_per_detection() {
  max_classes_per_detection_ = 1;
  clear_has_max_classes_per_detection();
}
inline ::google::protobuf::int32 BatchNonMaxSuppression::max_classes_per_detection() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.max_classes_per_detection)
  return max_classes_per_detection_;
}
inline void BatchNonMaxSuppression::set_max_classes_per_detection(::google::protobuf::int32 value) {
  set_has_max_classes_per_detection();
  max_classes_per_detection_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.max_classes_per_detection)
}

// optional float soft_nms_sigma = 9 [default = 0];
inline bool BatchNonMaxSuppression::has_soft_nms_sigma() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BatchNonMaxSuppression::set_has_soft_nms_sigma() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BatchNonMaxSuppression::clear_has_soft_nms_sigma() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BatchNonMaxSuppression::clear_soft_nms_sigma() {
  soft_nms_sigma_ = 0;
  clear_has_soft_nms_sigma();
}
inline float BatchNonMaxSuppression::soft_nms_sigma() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.soft_nms_sigma)
  return soft_nms_sigma_;
}
inline void BatchNonMaxSuppression::set_soft_nms_sigma(float value) {
  set_has_soft_nms_sigma();
  soft_nms_sigma_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.soft_nms_sigma)
}

// -------------------------------------------------------------------

// PostProcessing

// optional .object_detection.protos.BatchNonMaxSuppression batch_non_max_suppression = 1;
inline bool PostProcessing::has_batch_non_max_suppression() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PostProcessing::set_has_batch_non_max_suppression() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PostProcessing::clear_has_batch_non_max_suppression() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PostProcessing::clear_batch_non_max_suppression() {
  if (batch_non_max_suppression_ != NULL) batch_non_max_suppression_->::object_detection::protos::BatchNonMaxSuppression::Clear();
  clear_has_batch_non_max_suppression();
}
inline const ::object_detection::protos::BatchNonMaxSuppression& PostProcessing::batch_non_max_suppression() const {
  const ::object_detection::protos::BatchNonMaxSuppression* p = batch_non_max_suppression_;
  // @@protoc_insertion_point(field_get:object_detection.protos.PostProcessing.batch_non_max_suppression)
  return p != NULL ? *p : *reinterpret_cast<const ::object_detection::protos::BatchNonMaxSuppression*>(
      &::object_detection::protos::_BatchNonMaxSuppression_default_instance_);
}
inline ::object_detection::protos::BatchNonMaxSuppression* PostProcessing::mutable_batch_non_max_suppression() {
  set_has_batch_non_max_suppression();
  if (batch_non_max_suppression_ == NULL) {
    batch_non_max_suppression_ = new ::object_detection::protos::BatchNonMaxSuppression;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.PostProcessing.batch_non_max_suppression)
  return batch_non_max_suppression_;
}
inline ::object_detection::protos::BatchNonMaxSuppression* PostProcessing::release_batch_non_max_suppression() {
  // @@protoc_insertion_point(field_release:object_detection.protos.PostProcessing.batch_non_max_suppression)
  clear_has_batch_non_max_suppression();
  ::object_detection::protos::BatchNonMaxSuppression* temp = batch_non_max_suppression_;
  batch_non_max_suppression_ = NULL;
  return temp;
}
inline void PostProcessing::set_allocated_batch_non_max_suppression(::object_detection::protos::BatchNonMaxSuppression* batch_non_max_suppression) {
  delete batch_non_max_suppression_;
  batch_non_max_suppression_ = batch_non_max_suppression;
  if (batch_non_max_suppression) {
    set_has_batch_non_max_suppression();
  } else {
    clear_has_batch_non_max_suppression();
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.PostProcessing.batch_non_max_suppression)
}

// optional .object_detection.protos.PostProcessing.ScoreConverter score_converter = 2 [default = IDENTITY];
inline bool PostProcessing::has_score_converter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PostProcessing::set_has_score_converter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PostProcessing::clear_has_score_converter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PostProcessing::clear_score_converter() {
  score_converter_ = 0;
  clear_has_score_converter();
}
inline ::object_detection::protos::PostProcessing_ScoreConverter PostProcessing::score_converter() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.PostProcessing.score_converter)
  return static_cast< ::object_detection::protos::PostProcessing_ScoreConverter >(score_converter_);
}
inline void PostProcessing::set_score_converter(::object_detection::protos::PostProcessing_ScoreConverter value) {
  assert(::object_detection::protos::PostProcessing_ScoreConverter_IsValid(value));
  set_has_score_converter();
  score_converter_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.PostProcessing.score_converter)
}

// optional float logit_scale = 3 [default = 1];
inline bool PostProcessing::has_logit_scale() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PostProcessing::set_has_logit_scale() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PostProcessing::clear_has_logit_scale() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PostProcessing::clear_logit_scale() {
  logit_scale_ = 1;
  clear_has_logit_scale();
}
inline float PostProcessing::logit_scale() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.PostProcessing.logit_scale)
  return logit_scale_;
}
inline void PostProcessing::set_logit_scale(float value) {
  set_has_logit_scale();
  logit_scale_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.PostProcessing.logit_scale)
}

// optional .object_detection.protos.CalibrationConfig calibration_config = 4;
inline bool PostProcessing::has_calibration_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PostProcessing::set_has_calibration_config() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PostProcessing::clear_has_calibration_config() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PostProcessing::clear_calibration_config() {
  if (calibration_config_ != NULL) calibration_config_->::object_detection::protos::CalibrationConfig::Clear();
  clear_has_calibration_config();
}
inline const ::object_detection::protos::CalibrationConfig& PostProcessing::calibration_config() const {
  const ::object_detection::protos::CalibrationConfig* p = calibration_config_;
  // @@protoc_insertion_point(field_get:object_detection.protos.PostProcessing.calibration_config)
  return p != NULL ? *p : *reinterpret_cast<const ::object_detection::protos::CalibrationConfig*>(
      &::object_detection::protos::_CalibrationConfig_default_instance_);
}
inline ::object_detection::protos::CalibrationConfig* PostProcessing::mutable_calibration_config() {
  set_has_calibration_config();
  if (calibration_config_ == NULL) {
    calibration_config_ = new ::object_detection::protos::CalibrationConfig;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.PostProcessing.calibration_config)
  return calibration_config_;
}
inline ::object_detection::protos::CalibrationConfig* PostProcessing::release_calibration_config() {
  // @@protoc_insertion_point(field_release:object_detection.protos.PostProcessing.calibration_config)
  clear_has_calibration_config();
  ::object_detection::protos::CalibrationConfig* temp = calibration_config_;
  calibration_config_ = NULL;
  return temp;
}
inline void PostProcessing::set_allocated_calibration_config(::object_detection::protos::CalibrationConfig* calibration_config) {
  delete calibration_config_;
  calibration_config_ = calibration_config;
  if (calibration_config) {
    set_has_calibration_config();
  } else {
    clear_has_calibration_config();
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.PostProcessing.calibration_config)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace object_detection

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::object_detection::protos::PostProcessing_ScoreConverter> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::object_detection::protos::PostProcessing_ScoreConverter>() {
  return ::object_detection::protos::PostProcessing_ScoreConverter_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto__INCLUDED
