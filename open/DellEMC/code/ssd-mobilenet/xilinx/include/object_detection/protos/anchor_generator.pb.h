// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/anchor_generator.proto

#ifndef PROTOBUF_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto__INCLUDED
#define PROTOBUF_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "object_detection/protos/flexible_grid_anchor_generator.pb.h"
#include "object_detection/protos/grid_anchor_generator.pb.h"
#include "object_detection/protos/multiscale_anchor_generator.pb.h"
#include "object_detection/protos/ssd_anchor_generator.pb.h"
// @@protoc_insertion_point(includes)
namespace object_detection {
namespace protos {
class AnchorGenerator;
class AnchorGeneratorDefaultTypeInternal;
extern AnchorGeneratorDefaultTypeInternal _AnchorGenerator_default_instance_;
}  // namespace protos
}  // namespace object_detection

namespace object_detection {
namespace protos {

namespace protobuf_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto

// ===================================================================

class AnchorGenerator : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.AnchorGenerator) */ {
 public:
  AnchorGenerator();
  virtual ~AnchorGenerator();

  AnchorGenerator(const AnchorGenerator& from);

  inline AnchorGenerator& operator=(const AnchorGenerator& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnchorGenerator(AnchorGenerator&& from) noexcept
    : AnchorGenerator() {
    *this = ::std::move(from);
  }

  inline AnchorGenerator& operator=(AnchorGenerator&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnchorGenerator& default_instance();

  enum AnchorGeneratorOneofCase {
    kGridAnchorGenerator = 1,
    kSsdAnchorGenerator = 2,
    kMultiscaleAnchorGenerator = 3,
    kFlexibleGridAnchorGenerator = 4,
    ANCHOR_GENERATOR_ONEOF_NOT_SET = 0,
  };

  static inline const AnchorGenerator* internal_default_instance() {
    return reinterpret_cast<const AnchorGenerator*>(
               &_AnchorGenerator_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AnchorGenerator* other);
  friend void swap(AnchorGenerator& a, AnchorGenerator& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnchorGenerator* New() const PROTOBUF_FINAL { return New(NULL); }

  AnchorGenerator* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnchorGenerator& from);
  void MergeFrom(const AnchorGenerator& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnchorGenerator* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .object_detection.protos.GridAnchorGenerator grid_anchor_generator = 1;
  bool has_grid_anchor_generator() const;
  void clear_grid_anchor_generator();
  static const int kGridAnchorGeneratorFieldNumber = 1;
  const ::object_detection::protos::GridAnchorGenerator& grid_anchor_generator() const;
  ::object_detection::protos::GridAnchorGenerator* mutable_grid_anchor_generator();
  ::object_detection::protos::GridAnchorGenerator* release_grid_anchor_generator();
  void set_allocated_grid_anchor_generator(::object_detection::protos::GridAnchorGenerator* grid_anchor_generator);

  // optional .object_detection.protos.SsdAnchorGenerator ssd_anchor_generator = 2;
  bool has_ssd_anchor_generator() const;
  void clear_ssd_anchor_generator();
  static const int kSsdAnchorGeneratorFieldNumber = 2;
  const ::object_detection::protos::SsdAnchorGenerator& ssd_anchor_generator() const;
  ::object_detection::protos::SsdAnchorGenerator* mutable_ssd_anchor_generator();
  ::object_detection::protos::SsdAnchorGenerator* release_ssd_anchor_generator();
  void set_allocated_ssd_anchor_generator(::object_detection::protos::SsdAnchorGenerator* ssd_anchor_generator);

  // optional .object_detection.protos.MultiscaleAnchorGenerator multiscale_anchor_generator = 3;
  bool has_multiscale_anchor_generator() const;
  void clear_multiscale_anchor_generator();
  static const int kMultiscaleAnchorGeneratorFieldNumber = 3;
  const ::object_detection::protos::MultiscaleAnchorGenerator& multiscale_anchor_generator() const;
  ::object_detection::protos::MultiscaleAnchorGenerator* mutable_multiscale_anchor_generator();
  ::object_detection::protos::MultiscaleAnchorGenerator* release_multiscale_anchor_generator();
  void set_allocated_multiscale_anchor_generator(::object_detection::protos::MultiscaleAnchorGenerator* multiscale_anchor_generator);

  // optional .object_detection.protos.FlexibleGridAnchorGenerator flexible_grid_anchor_generator = 4;
  bool has_flexible_grid_anchor_generator() const;
  void clear_flexible_grid_anchor_generator();
  static const int kFlexibleGridAnchorGeneratorFieldNumber = 4;
  const ::object_detection::protos::FlexibleGridAnchorGenerator& flexible_grid_anchor_generator() const;
  ::object_detection::protos::FlexibleGridAnchorGenerator* mutable_flexible_grid_anchor_generator();
  ::object_detection::protos::FlexibleGridAnchorGenerator* release_flexible_grid_anchor_generator();
  void set_allocated_flexible_grid_anchor_generator(::object_detection::protos::FlexibleGridAnchorGenerator* flexible_grid_anchor_generator);

  AnchorGeneratorOneofCase anchor_generator_oneof_case() const;
  // @@protoc_insertion_point(class_scope:object_detection.protos.AnchorGenerator)
 private:
  void set_has_grid_anchor_generator();
  void set_has_ssd_anchor_generator();
  void set_has_multiscale_anchor_generator();
  void set_has_flexible_grid_anchor_generator();

  inline bool has_anchor_generator_oneof() const;
  void clear_anchor_generator_oneof();
  inline void clear_has_anchor_generator_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  union AnchorGeneratorOneofUnion {
    AnchorGeneratorOneofUnion() {}
    ::object_detection::protos::GridAnchorGenerator* grid_anchor_generator_;
    ::object_detection::protos::SsdAnchorGenerator* ssd_anchor_generator_;
    ::object_detection::protos::MultiscaleAnchorGenerator* multiscale_anchor_generator_;
    ::object_detection::protos::FlexibleGridAnchorGenerator* flexible_grid_anchor_generator_;
  } anchor_generator_oneof_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AnchorGenerator

// optional .object_detection.protos.GridAnchorGenerator grid_anchor_generator = 1;
inline bool AnchorGenerator::has_grid_anchor_generator() const {
  return anchor_generator_oneof_case() == kGridAnchorGenerator;
}
inline void AnchorGenerator::set_has_grid_anchor_generator() {
  _oneof_case_[0] = kGridAnchorGenerator;
}
inline void AnchorGenerator::clear_grid_anchor_generator() {
  if (has_grid_anchor_generator()) {
    delete anchor_generator_oneof_.grid_anchor_generator_;
    clear_has_anchor_generator_oneof();
  }
}
inline  const ::object_detection::protos::GridAnchorGenerator& AnchorGenerator::grid_anchor_generator() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGenerator.grid_anchor_generator)
  return has_grid_anchor_generator()
      ? *anchor_generator_oneof_.grid_anchor_generator_
      : ::object_detection::protos::GridAnchorGenerator::default_instance();
}
inline ::object_detection::protos::GridAnchorGenerator* AnchorGenerator::mutable_grid_anchor_generator() {
  if (!has_grid_anchor_generator()) {
    clear_anchor_generator_oneof();
    set_has_grid_anchor_generator();
    anchor_generator_oneof_.grid_anchor_generator_ = new ::object_detection::protos::GridAnchorGenerator;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.AnchorGenerator.grid_anchor_generator)
  return anchor_generator_oneof_.grid_anchor_generator_;
}
inline ::object_detection::protos::GridAnchorGenerator* AnchorGenerator::release_grid_anchor_generator() {
  // @@protoc_insertion_point(field_release:object_detection.protos.AnchorGenerator.grid_anchor_generator)
  if (has_grid_anchor_generator()) {
    clear_has_anchor_generator_oneof();
    ::object_detection::protos::GridAnchorGenerator* temp = anchor_generator_oneof_.grid_anchor_generator_;
    anchor_generator_oneof_.grid_anchor_generator_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AnchorGenerator::set_allocated_grid_anchor_generator(::object_detection::protos::GridAnchorGenerator* grid_anchor_generator) {
  clear_anchor_generator_oneof();
  if (grid_anchor_generator) {
    set_has_grid_anchor_generator();
    anchor_generator_oneof_.grid_anchor_generator_ = grid_anchor_generator;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.AnchorGenerator.grid_anchor_generator)
}

// optional .object_detection.protos.SsdAnchorGenerator ssd_anchor_generator = 2;
inline bool AnchorGenerator::has_ssd_anchor_generator() const {
  return anchor_generator_oneof_case() == kSsdAnchorGenerator;
}
inline void AnchorGenerator::set_has_ssd_anchor_generator() {
  _oneof_case_[0] = kSsdAnchorGenerator;
}
inline void AnchorGenerator::clear_ssd_anchor_generator() {
  if (has_ssd_anchor_generator()) {
    delete anchor_generator_oneof_.ssd_anchor_generator_;
    clear_has_anchor_generator_oneof();
  }
}
inline  const ::object_detection::protos::SsdAnchorGenerator& AnchorGenerator::ssd_anchor_generator() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGenerator.ssd_anchor_generator)
  return has_ssd_anchor_generator()
      ? *anchor_generator_oneof_.ssd_anchor_generator_
      : ::object_detection::protos::SsdAnchorGenerator::default_instance();
}
inline ::object_detection::protos::SsdAnchorGenerator* AnchorGenerator::mutable_ssd_anchor_generator() {
  if (!has_ssd_anchor_generator()) {
    clear_anchor_generator_oneof();
    set_has_ssd_anchor_generator();
    anchor_generator_oneof_.ssd_anchor_generator_ = new ::object_detection::protos::SsdAnchorGenerator;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.AnchorGenerator.ssd_anchor_generator)
  return anchor_generator_oneof_.ssd_anchor_generator_;
}
inline ::object_detection::protos::SsdAnchorGenerator* AnchorGenerator::release_ssd_anchor_generator() {
  // @@protoc_insertion_point(field_release:object_detection.protos.AnchorGenerator.ssd_anchor_generator)
  if (has_ssd_anchor_generator()) {
    clear_has_anchor_generator_oneof();
    ::object_detection::protos::SsdAnchorGenerator* temp = anchor_generator_oneof_.ssd_anchor_generator_;
    anchor_generator_oneof_.ssd_anchor_generator_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AnchorGenerator::set_allocated_ssd_anchor_generator(::object_detection::protos::SsdAnchorGenerator* ssd_anchor_generator) {
  clear_anchor_generator_oneof();
  if (ssd_anchor_generator) {
    set_has_ssd_anchor_generator();
    anchor_generator_oneof_.ssd_anchor_generator_ = ssd_anchor_generator;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.AnchorGenerator.ssd_anchor_generator)
}

// optional .object_detection.protos.MultiscaleAnchorGenerator multiscale_anchor_generator = 3;
inline bool AnchorGenerator::has_multiscale_anchor_generator() const {
  return anchor_generator_oneof_case() == kMultiscaleAnchorGenerator;
}
inline void AnchorGenerator::set_has_multiscale_anchor_generator() {
  _oneof_case_[0] = kMultiscaleAnchorGenerator;
}
inline void AnchorGenerator::clear_multiscale_anchor_generator() {
  if (has_multiscale_anchor_generator()) {
    delete anchor_generator_oneof_.multiscale_anchor_generator_;
    clear_has_anchor_generator_oneof();
  }
}
inline  const ::object_detection::protos::MultiscaleAnchorGenerator& AnchorGenerator::multiscale_anchor_generator() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGenerator.multiscale_anchor_generator)
  return has_multiscale_anchor_generator()
      ? *anchor_generator_oneof_.multiscale_anchor_generator_
      : ::object_detection::protos::MultiscaleAnchorGenerator::default_instance();
}
inline ::object_detection::protos::MultiscaleAnchorGenerator* AnchorGenerator::mutable_multiscale_anchor_generator() {
  if (!has_multiscale_anchor_generator()) {
    clear_anchor_generator_oneof();
    set_has_multiscale_anchor_generator();
    anchor_generator_oneof_.multiscale_anchor_generator_ = new ::object_detection::protos::MultiscaleAnchorGenerator;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.AnchorGenerator.multiscale_anchor_generator)
  return anchor_generator_oneof_.multiscale_anchor_generator_;
}
inline ::object_detection::protos::MultiscaleAnchorGenerator* AnchorGenerator::release_multiscale_anchor_generator() {
  // @@protoc_insertion_point(field_release:object_detection.protos.AnchorGenerator.multiscale_anchor_generator)
  if (has_multiscale_anchor_generator()) {
    clear_has_anchor_generator_oneof();
    ::object_detection::protos::MultiscaleAnchorGenerator* temp = anchor_generator_oneof_.multiscale_anchor_generator_;
    anchor_generator_oneof_.multiscale_anchor_generator_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AnchorGenerator::set_allocated_multiscale_anchor_generator(::object_detection::protos::MultiscaleAnchorGenerator* multiscale_anchor_generator) {
  clear_anchor_generator_oneof();
  if (multiscale_anchor_generator) {
    set_has_multiscale_anchor_generator();
    anchor_generator_oneof_.multiscale_anchor_generator_ = multiscale_anchor_generator;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.AnchorGenerator.multiscale_anchor_generator)
}

// optional .object_detection.protos.FlexibleGridAnchorGenerator flexible_grid_anchor_generator = 4;
inline bool AnchorGenerator::has_flexible_grid_anchor_generator() const {
  return anchor_generator_oneof_case() == kFlexibleGridAnchorGenerator;
}
inline void AnchorGenerator::set_has_flexible_grid_anchor_generator() {
  _oneof_case_[0] = kFlexibleGridAnchorGenerator;
}
inline void AnchorGenerator::clear_flexible_grid_anchor_generator() {
  if (has_flexible_grid_anchor_generator()) {
    delete anchor_generator_oneof_.flexible_grid_anchor_generator_;
    clear_has_anchor_generator_oneof();
  }
}
inline  const ::object_detection::protos::FlexibleGridAnchorGenerator& AnchorGenerator::flexible_grid_anchor_generator() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGenerator.flexible_grid_anchor_generator)
  return has_flexible_grid_anchor_generator()
      ? *anchor_generator_oneof_.flexible_grid_anchor_generator_
      : ::object_detection::protos::FlexibleGridAnchorGenerator::default_instance();
}
inline ::object_detection::protos::FlexibleGridAnchorGenerator* AnchorGenerator::mutable_flexible_grid_anchor_generator() {
  if (!has_flexible_grid_anchor_generator()) {
    clear_anchor_generator_oneof();
    set_has_flexible_grid_anchor_generator();
    anchor_generator_oneof_.flexible_grid_anchor_generator_ = new ::object_detection::protos::FlexibleGridAnchorGenerator;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.AnchorGenerator.flexible_grid_anchor_generator)
  return anchor_generator_oneof_.flexible_grid_anchor_generator_;
}
inline ::object_detection::protos::FlexibleGridAnchorGenerator* AnchorGenerator::release_flexible_grid_anchor_generator() {
  // @@protoc_insertion_point(field_release:object_detection.protos.AnchorGenerator.flexible_grid_anchor_generator)
  if (has_flexible_grid_anchor_generator()) {
    clear_has_anchor_generator_oneof();
    ::object_detection::protos::FlexibleGridAnchorGenerator* temp = anchor_generator_oneof_.flexible_grid_anchor_generator_;
    anchor_generator_oneof_.flexible_grid_anchor_generator_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AnchorGenerator::set_allocated_flexible_grid_anchor_generator(::object_detection::protos::FlexibleGridAnchorGenerator* flexible_grid_anchor_generator) {
  clear_anchor_generator_oneof();
  if (flexible_grid_anchor_generator) {
    set_has_flexible_grid_anchor_generator();
    anchor_generator_oneof_.flexible_grid_anchor_generator_ = flexible_grid_anchor_generator;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.AnchorGenerator.flexible_grid_anchor_generator)
}

inline bool AnchorGenerator::has_anchor_generator_oneof() const {
  return anchor_generator_oneof_case() != ANCHOR_GENERATOR_ONEOF_NOT_SET;
}
inline void AnchorGenerator::clear_has_anchor_generator_oneof() {
  _oneof_case_[0] = ANCHOR_GENERATOR_ONEOF_NOT_SET;
}
inline AnchorGenerator::AnchorGeneratorOneofCase AnchorGenerator::anchor_generator_oneof_case() const {
  return AnchorGenerator::AnchorGeneratorOneofCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto__INCLUDED
