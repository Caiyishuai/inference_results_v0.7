// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/calibration.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "object_detection/protos/calibration.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace object_detection {
namespace protos {
class CalibrationConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CalibrationConfig>
     _instance;
  const ::object_detection::protos::FunctionApproximation* function_approximation_;
  const ::object_detection::protos::ClassIdFunctionApproximations* class_id_function_approximations_;
  const ::object_detection::protos::SigmoidCalibration* sigmoid_calibration_;
  const ::object_detection::protos::ClassIdSigmoidCalibrations* class_id_sigmoid_calibrations_;
} _CalibrationConfig_default_instance_;
class FunctionApproximationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FunctionApproximation>
     _instance;
} _FunctionApproximation_default_instance_;
class ClassIdFunctionApproximations_ClassIdXyPairsMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClassIdFunctionApproximations::ClassIdFunctionApproximations_ClassIdXyPairsMapEntry>
     _instance;
} _ClassIdFunctionApproximations_ClassIdXyPairsMapEntry_default_instance_;
class ClassIdFunctionApproximationsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClassIdFunctionApproximations>
     _instance;
} _ClassIdFunctionApproximations_default_instance_;
class SigmoidCalibrationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SigmoidCalibration>
     _instance;
} _SigmoidCalibration_default_instance_;
class ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClassIdSigmoidCalibrations::ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry>
     _instance;
} _ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry_default_instance_;
class ClassIdSigmoidCalibrationsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClassIdSigmoidCalibrations>
     _instance;
} _ClassIdSigmoidCalibrations_default_instance_;
class XYPairs_XYPairDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<XYPairs_XYPair>
     _instance;
} _XYPairs_XYPair_default_instance_;
class XYPairsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<XYPairs>
     _instance;
} _XYPairs_default_instance_;
class SigmoidParametersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SigmoidParameters>
     _instance;
} _SigmoidParameters_default_instance_;

namespace protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalibrationConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalibrationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalibrationConfig, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(CalibrationConfigDefaultTypeInternal, function_approximation_),
  offsetof(CalibrationConfigDefaultTypeInternal, class_id_function_approximations_),
  offsetof(CalibrationConfigDefaultTypeInternal, sigmoid_calibration_),
  offsetof(CalibrationConfigDefaultTypeInternal, class_id_sigmoid_calibrations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalibrationConfig, calibrator_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionApproximation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionApproximation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionApproximation, x_y_pairs_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassIdFunctionApproximations, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassIdFunctionApproximations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassIdFunctionApproximations, class_id_xy_pairs_map_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SigmoidCalibration, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SigmoidCalibration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SigmoidCalibration, sigmoid_parameters_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassIdSigmoidCalibrations, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassIdSigmoidCalibrations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassIdSigmoidCalibrations, class_id_sigmoid_parameters_map_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XYPairs_XYPair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XYPairs_XYPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XYPairs_XYPair, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XYPairs_XYPair, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XYPairs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XYPairs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XYPairs, x_y_pair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XYPairs, training_data_type_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SigmoidParameters, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SigmoidParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SigmoidParameters, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SigmoidParameters, b_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(CalibrationConfig)},
  { 14, 20, sizeof(FunctionApproximation)},
  { 21, 27, sizeof(ClassIdFunctionApproximations)},
  { 28, 34, sizeof(SigmoidCalibration)},
  { 35, 41, sizeof(ClassIdSigmoidCalibrations)},
  { 42, 49, sizeof(XYPairs_XYPair)},
  { 51, 58, sizeof(XYPairs)},
  { 60, 67, sizeof(SigmoidParameters)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CalibrationConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FunctionApproximation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClassIdFunctionApproximations_ClassIdXyPairsMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClassIdFunctionApproximations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SigmoidCalibration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClassIdSigmoidCalibrations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_XYPairs_XYPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_XYPairs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SigmoidParameters_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "object_detection/protos/calibration.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[2].reflection = ClassIdFunctionApproximations::ClassIdFunctionApproximations_ClassIdXyPairsMapEntry::CreateReflection(file_level_metadata[2].descriptor, _ClassIdFunctionApproximations_ClassIdXyPairsMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[5].reflection = ClassIdSigmoidCalibrations::ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry::CreateReflection(file_level_metadata[5].descriptor, _ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CalibrationConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CalibrationConfig_default_instance_);_FunctionApproximation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FunctionApproximation_default_instance_);_ClassIdFunctionApproximations_ClassIdXyPairsMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClassIdFunctionApproximations_ClassIdXyPairsMapEntry_default_instance_);_ClassIdFunctionApproximations_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClassIdFunctionApproximations_default_instance_);_SigmoidCalibration_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SigmoidCalibration_default_instance_);_ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry_default_instance_);_ClassIdSigmoidCalibrations_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClassIdSigmoidCalibrations_default_instance_);_XYPairs_XYPair_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_XYPairs_XYPair_default_instance_);_XYPairs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_XYPairs_default_instance_);_SigmoidParameters_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SigmoidParameters_default_instance_);_CalibrationConfig_default_instance_.function_approximation_ = const_cast< ::object_detection::protos::FunctionApproximation*>(
      ::object_detection::protos::FunctionApproximation::internal_default_instance());
  _CalibrationConfig_default_instance_.class_id_function_approximations_ = const_cast< ::object_detection::protos::ClassIdFunctionApproximations*>(
      ::object_detection::protos::ClassIdFunctionApproximations::internal_default_instance());
  _CalibrationConfig_default_instance_.sigmoid_calibration_ = const_cast< ::object_detection::protos::SigmoidCalibration*>(
      ::object_detection::protos::SigmoidCalibration::internal_default_instance());
  _CalibrationConfig_default_instance_.class_id_sigmoid_calibrations_ = const_cast< ::object_detection::protos::ClassIdSigmoidCalibrations*>(
      ::object_detection::protos::ClassIdSigmoidCalibrations::internal_default_instance());
  _FunctionApproximation_default_instance_._instance.get_mutable()->x_y_pairs_ = const_cast< ::object_detection::protos::XYPairs*>(
      ::object_detection::protos::XYPairs::internal_default_instance());
  _ClassIdFunctionApproximations_ClassIdXyPairsMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ClassIdFunctionApproximations_ClassIdXyPairsMapEntry_default_instance_._instance.get_mutable());
  _ClassIdFunctionApproximations_ClassIdXyPairsMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SigmoidCalibration_default_instance_._instance.get_mutable()->sigmoid_parameters_ = const_cast< ::object_detection::protos::SigmoidParameters*>(
      ::object_detection::protos::SigmoidParameters::internal_default_instance());
  _ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry_default_instance_._instance.get_mutable());
  _ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)object_detection/protos/calibration.pr"
      "oto\022\027object_detection.protos\"\201\003\n\021Calibra"
      "tionConfig\022P\n\026function_approximation\030\001 \001"
      "(\0132..object_detection.protos.FunctionApp"
      "roximationH\000\022b\n class_id_function_approx"
      "imations\030\002 \001(\01326.object_detection.protos"
      ".ClassIdFunctionApproximationsH\000\022J\n\023sigm"
      "oid_calibration\030\003 \001(\0132+.object_detection"
      ".protos.SigmoidCalibrationH\000\022\\\n\035class_id"
      "_sigmoid_calibrations\030\004 \001(\01323.object_det"
      "ection.protos.ClassIdSigmoidCalibrations"
      "H\000B\014\n\ncalibrator\"L\n\025FunctionApproximatio"
      "n\0223\n\tx_y_pairs\030\001 \001(\0132 .object_detection."
      "protos.XYPairs\"\351\001\n\035ClassIdFunctionApprox"
      "imations\022l\n\025class_id_xy_pairs_map\030\001 \003(\0132"
      "M.object_detection.protos.ClassIdFunctio"
      "nApproximations.ClassIdXyPairsMapEntry\032Z"
      "\n\026ClassIdXyPairsMapEntry\022\013\n\003key\030\001 \001(\005\022/\n"
      "\005value\030\002 \001(\0132 .object_detection.protos.X"
      "YPairs:\0028\001\"\\\n\022SigmoidCalibration\022F\n\022sigm"
      "oid_parameters\030\001 \001(\0132*.object_detection."
      "protos.SigmoidParameters\"\213\002\n\032ClassIdSigm"
      "oidCalibrations\022}\n\037class_id_sigmoid_para"
      "meters_map\030\001 \003(\0132T.object_detection.prot"
      "os.ClassIdSigmoidCalibrations.ClassIdSig"
      "moidParametersMapEntry\032n\n ClassIdSigmoid"
      "ParametersMapEntry\022\013\n\003key\030\001 \001(\005\0229\n\005value"
      "\030\002 \001(\0132*.object_detection.protos.Sigmoid"
      "Parameters:\0028\001\"\253\001\n\007XYPairs\0229\n\010x_y_pair\030\001"
      " \003(\0132\'.object_detection.protos.XYPairs.X"
      "YPair\022E\n\022training_data_type\030\002 \001(\0162).obje"
      "ct_detection.protos.TrainingDataType\032\036\n\006"
      "XYPair\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"0\n\021SigmoidP"
      "arameters\022\r\n\001a\030\001 \001(\002:\002-1\022\014\n\001b\030\002 \001(\002:\0010*N"
      "\n\020TrainingDataType\022\025\n\021DATA_TYPE_UNKNOWN\020"
      "\000\022\017\n\013ALL_CLASSES\020\001\022\022\n\016CLASS_SPECIFIC\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1438);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "object_detection/protos/calibration.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto

const ::google::protobuf::EnumDescriptor* TrainingDataType_descriptor() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_enum_descriptors[0];
}
bool TrainingDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalibrationConfig::kFunctionApproximationFieldNumber;
const int CalibrationConfig::kClassIdFunctionApproximationsFieldNumber;
const int CalibrationConfig::kSigmoidCalibrationFieldNumber;
const int CalibrationConfig::kClassIdSigmoidCalibrationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalibrationConfig::CalibrationConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.CalibrationConfig)
}
CalibrationConfig::CalibrationConfig(const CalibrationConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_calibrator();
  switch (from.calibrator_case()) {
    case kFunctionApproximation: {
      mutable_function_approximation()->::object_detection::protos::FunctionApproximation::MergeFrom(from.function_approximation());
      break;
    }
    case kClassIdFunctionApproximations: {
      mutable_class_id_function_approximations()->::object_detection::protos::ClassIdFunctionApproximations::MergeFrom(from.class_id_function_approximations());
      break;
    }
    case kSigmoidCalibration: {
      mutable_sigmoid_calibration()->::object_detection::protos::SigmoidCalibration::MergeFrom(from.sigmoid_calibration());
      break;
    }
    case kClassIdSigmoidCalibrations: {
      mutable_class_id_sigmoid_calibrations()->::object_detection::protos::ClassIdSigmoidCalibrations::MergeFrom(from.class_id_sigmoid_calibrations());
      break;
    }
    case CALIBRATOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.CalibrationConfig)
}

void CalibrationConfig::SharedCtor() {
  _cached_size_ = 0;
  clear_has_calibrator();
}

CalibrationConfig::~CalibrationConfig() {
  // @@protoc_insertion_point(destructor:object_detection.protos.CalibrationConfig)
  SharedDtor();
}

void CalibrationConfig::SharedDtor() {
  if (has_calibrator()) {
    clear_calibrator();
  }
}

void CalibrationConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalibrationConfig::descriptor() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalibrationConfig& CalibrationConfig::default_instance() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  return *internal_default_instance();
}

CalibrationConfig* CalibrationConfig::New(::google::protobuf::Arena* arena) const {
  CalibrationConfig* n = new CalibrationConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalibrationConfig::clear_calibrator() {
// @@protoc_insertion_point(one_of_clear_start:object_detection.protos.CalibrationConfig)
  switch (calibrator_case()) {
    case kFunctionApproximation: {
      delete calibrator_.function_approximation_;
      break;
    }
    case kClassIdFunctionApproximations: {
      delete calibrator_.class_id_function_approximations_;
      break;
    }
    case kSigmoidCalibration: {
      delete calibrator_.sigmoid_calibration_;
      break;
    }
    case kClassIdSigmoidCalibrations: {
      delete calibrator_.class_id_sigmoid_calibrations_;
      break;
    }
    case CALIBRATOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CALIBRATOR_NOT_SET;
}


void CalibrationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.CalibrationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_calibrator();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalibrationConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.CalibrationConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .object_detection.protos.FunctionApproximation function_approximation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function_approximation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .object_detection.protos.ClassIdFunctionApproximations class_id_function_approximations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_class_id_function_approximations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .object_detection.protos.SigmoidCalibration sigmoid_calibration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sigmoid_calibration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .object_detection.protos.ClassIdSigmoidCalibrations class_id_sigmoid_calibrations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_class_id_sigmoid_calibrations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.CalibrationConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.CalibrationConfig)
  return false;
#undef DO_
}

void CalibrationConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.CalibrationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (calibrator_case()) {
    case kFunctionApproximation:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *calibrator_.function_approximation_, output);
      break;
    case kClassIdFunctionApproximations:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, *calibrator_.class_id_function_approximations_, output);
      break;
    case kSigmoidCalibration:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, *calibrator_.sigmoid_calibration_, output);
      break;
    case kClassIdSigmoidCalibrations:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, *calibrator_.class_id_sigmoid_calibrations_, output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.CalibrationConfig)
}

::google::protobuf::uint8* CalibrationConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.CalibrationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (calibrator_case()) {
    case kFunctionApproximation:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          1, *calibrator_.function_approximation_, deterministic, target);
      break;
    case kClassIdFunctionApproximations:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          2, *calibrator_.class_id_function_approximations_, deterministic, target);
      break;
    case kSigmoidCalibration:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          3, *calibrator_.sigmoid_calibration_, deterministic, target);
      break;
    case kClassIdSigmoidCalibrations:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          4, *calibrator_.class_id_sigmoid_calibrations_, deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.CalibrationConfig)
  return target;
}

size_t CalibrationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.CalibrationConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (calibrator_case()) {
    // optional .object_detection.protos.FunctionApproximation function_approximation = 1;
    case kFunctionApproximation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *calibrator_.function_approximation_);
      break;
    }
    // optional .object_detection.protos.ClassIdFunctionApproximations class_id_function_approximations = 2;
    case kClassIdFunctionApproximations: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *calibrator_.class_id_function_approximations_);
      break;
    }
    // optional .object_detection.protos.SigmoidCalibration sigmoid_calibration = 3;
    case kSigmoidCalibration: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *calibrator_.sigmoid_calibration_);
      break;
    }
    // optional .object_detection.protos.ClassIdSigmoidCalibrations class_id_sigmoid_calibrations = 4;
    case kClassIdSigmoidCalibrations: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *calibrator_.class_id_sigmoid_calibrations_);
      break;
    }
    case CALIBRATOR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalibrationConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.CalibrationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CalibrationConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalibrationConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.CalibrationConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.CalibrationConfig)
    MergeFrom(*source);
  }
}

void CalibrationConfig::MergeFrom(const CalibrationConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.CalibrationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.calibrator_case()) {
    case kFunctionApproximation: {
      mutable_function_approximation()->::object_detection::protos::FunctionApproximation::MergeFrom(from.function_approximation());
      break;
    }
    case kClassIdFunctionApproximations: {
      mutable_class_id_function_approximations()->::object_detection::protos::ClassIdFunctionApproximations::MergeFrom(from.class_id_function_approximations());
      break;
    }
    case kSigmoidCalibration: {
      mutable_sigmoid_calibration()->::object_detection::protos::SigmoidCalibration::MergeFrom(from.sigmoid_calibration());
      break;
    }
    case kClassIdSigmoidCalibrations: {
      mutable_class_id_sigmoid_calibrations()->::object_detection::protos::ClassIdSigmoidCalibrations::MergeFrom(from.class_id_sigmoid_calibrations());
      break;
    }
    case CALIBRATOR_NOT_SET: {
      break;
    }
  }
}

void CalibrationConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.CalibrationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalibrationConfig::CopyFrom(const CalibrationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.CalibrationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalibrationConfig::IsInitialized() const {
  return true;
}

void CalibrationConfig::Swap(CalibrationConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalibrationConfig::InternalSwap(CalibrationConfig* other) {
  using std::swap;
  swap(calibrator_, other->calibrator_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalibrationConfig::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalibrationConfig

// optional .object_detection.protos.FunctionApproximation function_approximation = 1;
bool CalibrationConfig::has_function_approximation() const {
  return calibrator_case() == kFunctionApproximation;
}
void CalibrationConfig::set_has_function_approximation() {
  _oneof_case_[0] = kFunctionApproximation;
}
void CalibrationConfig::clear_function_approximation() {
  if (has_function_approximation()) {
    delete calibrator_.function_approximation_;
    clear_has_calibrator();
  }
}
 const ::object_detection::protos::FunctionApproximation& CalibrationConfig::function_approximation() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.CalibrationConfig.function_approximation)
  return has_function_approximation()
      ? *calibrator_.function_approximation_
      : ::object_detection::protos::FunctionApproximation::default_instance();
}
::object_detection::protos::FunctionApproximation* CalibrationConfig::mutable_function_approximation() {
  if (!has_function_approximation()) {
    clear_calibrator();
    set_has_function_approximation();
    calibrator_.function_approximation_ = new ::object_detection::protos::FunctionApproximation;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.CalibrationConfig.function_approximation)
  return calibrator_.function_approximation_;
}
::object_detection::protos::FunctionApproximation* CalibrationConfig::release_function_approximation() {
  // @@protoc_insertion_point(field_release:object_detection.protos.CalibrationConfig.function_approximation)
  if (has_function_approximation()) {
    clear_has_calibrator();
    ::object_detection::protos::FunctionApproximation* temp = calibrator_.function_approximation_;
    calibrator_.function_approximation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CalibrationConfig::set_allocated_function_approximation(::object_detection::protos::FunctionApproximation* function_approximation) {
  clear_calibrator();
  if (function_approximation) {
    set_has_function_approximation();
    calibrator_.function_approximation_ = function_approximation;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.CalibrationConfig.function_approximation)
}

// optional .object_detection.protos.ClassIdFunctionApproximations class_id_function_approximations = 2;
bool CalibrationConfig::has_class_id_function_approximations() const {
  return calibrator_case() == kClassIdFunctionApproximations;
}
void CalibrationConfig::set_has_class_id_function_approximations() {
  _oneof_case_[0] = kClassIdFunctionApproximations;
}
void CalibrationConfig::clear_class_id_function_approximations() {
  if (has_class_id_function_approximations()) {
    delete calibrator_.class_id_function_approximations_;
    clear_has_calibrator();
  }
}
 const ::object_detection::protos::ClassIdFunctionApproximations& CalibrationConfig::class_id_function_approximations() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.CalibrationConfig.class_id_function_approximations)
  return has_class_id_function_approximations()
      ? *calibrator_.class_id_function_approximations_
      : ::object_detection::protos::ClassIdFunctionApproximations::default_instance();
}
::object_detection::protos::ClassIdFunctionApproximations* CalibrationConfig::mutable_class_id_function_approximations() {
  if (!has_class_id_function_approximations()) {
    clear_calibrator();
    set_has_class_id_function_approximations();
    calibrator_.class_id_function_approximations_ = new ::object_detection::protos::ClassIdFunctionApproximations;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.CalibrationConfig.class_id_function_approximations)
  return calibrator_.class_id_function_approximations_;
}
::object_detection::protos::ClassIdFunctionApproximations* CalibrationConfig::release_class_id_function_approximations() {
  // @@protoc_insertion_point(field_release:object_detection.protos.CalibrationConfig.class_id_function_approximations)
  if (has_class_id_function_approximations()) {
    clear_has_calibrator();
    ::object_detection::protos::ClassIdFunctionApproximations* temp = calibrator_.class_id_function_approximations_;
    calibrator_.class_id_function_approximations_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CalibrationConfig::set_allocated_class_id_function_approximations(::object_detection::protos::ClassIdFunctionApproximations* class_id_function_approximations) {
  clear_calibrator();
  if (class_id_function_approximations) {
    set_has_class_id_function_approximations();
    calibrator_.class_id_function_approximations_ = class_id_function_approximations;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.CalibrationConfig.class_id_function_approximations)
}

// optional .object_detection.protos.SigmoidCalibration sigmoid_calibration = 3;
bool CalibrationConfig::has_sigmoid_calibration() const {
  return calibrator_case() == kSigmoidCalibration;
}
void CalibrationConfig::set_has_sigmoid_calibration() {
  _oneof_case_[0] = kSigmoidCalibration;
}
void CalibrationConfig::clear_sigmoid_calibration() {
  if (has_sigmoid_calibration()) {
    delete calibrator_.sigmoid_calibration_;
    clear_has_calibrator();
  }
}
 const ::object_detection::protos::SigmoidCalibration& CalibrationConfig::sigmoid_calibration() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.CalibrationConfig.sigmoid_calibration)
  return has_sigmoid_calibration()
      ? *calibrator_.sigmoid_calibration_
      : ::object_detection::protos::SigmoidCalibration::default_instance();
}
::object_detection::protos::SigmoidCalibration* CalibrationConfig::mutable_sigmoid_calibration() {
  if (!has_sigmoid_calibration()) {
    clear_calibrator();
    set_has_sigmoid_calibration();
    calibrator_.sigmoid_calibration_ = new ::object_detection::protos::SigmoidCalibration;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.CalibrationConfig.sigmoid_calibration)
  return calibrator_.sigmoid_calibration_;
}
::object_detection::protos::SigmoidCalibration* CalibrationConfig::release_sigmoid_calibration() {
  // @@protoc_insertion_point(field_release:object_detection.protos.CalibrationConfig.sigmoid_calibration)
  if (has_sigmoid_calibration()) {
    clear_has_calibrator();
    ::object_detection::protos::SigmoidCalibration* temp = calibrator_.sigmoid_calibration_;
    calibrator_.sigmoid_calibration_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CalibrationConfig::set_allocated_sigmoid_calibration(::object_detection::protos::SigmoidCalibration* sigmoid_calibration) {
  clear_calibrator();
  if (sigmoid_calibration) {
    set_has_sigmoid_calibration();
    calibrator_.sigmoid_calibration_ = sigmoid_calibration;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.CalibrationConfig.sigmoid_calibration)
}

// optional .object_detection.protos.ClassIdSigmoidCalibrations class_id_sigmoid_calibrations = 4;
bool CalibrationConfig::has_class_id_sigmoid_calibrations() const {
  return calibrator_case() == kClassIdSigmoidCalibrations;
}
void CalibrationConfig::set_has_class_id_sigmoid_calibrations() {
  _oneof_case_[0] = kClassIdSigmoidCalibrations;
}
void CalibrationConfig::clear_class_id_sigmoid_calibrations() {
  if (has_class_id_sigmoid_calibrations()) {
    delete calibrator_.class_id_sigmoid_calibrations_;
    clear_has_calibrator();
  }
}
 const ::object_detection::protos::ClassIdSigmoidCalibrations& CalibrationConfig::class_id_sigmoid_calibrations() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.CalibrationConfig.class_id_sigmoid_calibrations)
  return has_class_id_sigmoid_calibrations()
      ? *calibrator_.class_id_sigmoid_calibrations_
      : ::object_detection::protos::ClassIdSigmoidCalibrations::default_instance();
}
::object_detection::protos::ClassIdSigmoidCalibrations* CalibrationConfig::mutable_class_id_sigmoid_calibrations() {
  if (!has_class_id_sigmoid_calibrations()) {
    clear_calibrator();
    set_has_class_id_sigmoid_calibrations();
    calibrator_.class_id_sigmoid_calibrations_ = new ::object_detection::protos::ClassIdSigmoidCalibrations;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.CalibrationConfig.class_id_sigmoid_calibrations)
  return calibrator_.class_id_sigmoid_calibrations_;
}
::object_detection::protos::ClassIdSigmoidCalibrations* CalibrationConfig::release_class_id_sigmoid_calibrations() {
  // @@protoc_insertion_point(field_release:object_detection.protos.CalibrationConfig.class_id_sigmoid_calibrations)
  if (has_class_id_sigmoid_calibrations()) {
    clear_has_calibrator();
    ::object_detection::protos::ClassIdSigmoidCalibrations* temp = calibrator_.class_id_sigmoid_calibrations_;
    calibrator_.class_id_sigmoid_calibrations_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CalibrationConfig::set_allocated_class_id_sigmoid_calibrations(::object_detection::protos::ClassIdSigmoidCalibrations* class_id_sigmoid_calibrations) {
  clear_calibrator();
  if (class_id_sigmoid_calibrations) {
    set_has_class_id_sigmoid_calibrations();
    calibrator_.class_id_sigmoid_calibrations_ = class_id_sigmoid_calibrations;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.CalibrationConfig.class_id_sigmoid_calibrations)
}

bool CalibrationConfig::has_calibrator() const {
  return calibrator_case() != CALIBRATOR_NOT_SET;
}
void CalibrationConfig::clear_has_calibrator() {
  _oneof_case_[0] = CALIBRATOR_NOT_SET;
}
CalibrationConfig::CalibratorCase CalibrationConfig::calibrator_case() const {
  return CalibrationConfig::CalibratorCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionApproximation::kXYPairsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionApproximation::FunctionApproximation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.FunctionApproximation)
}
FunctionApproximation::FunctionApproximation(const FunctionApproximation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_x_y_pairs()) {
    x_y_pairs_ = new ::object_detection::protos::XYPairs(*from.x_y_pairs_);
  } else {
    x_y_pairs_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.FunctionApproximation)
}

void FunctionApproximation::SharedCtor() {
  _cached_size_ = 0;
  x_y_pairs_ = NULL;
}

FunctionApproximation::~FunctionApproximation() {
  // @@protoc_insertion_point(destructor:object_detection.protos.FunctionApproximation)
  SharedDtor();
}

void FunctionApproximation::SharedDtor() {
  if (this != internal_default_instance()) delete x_y_pairs_;
}

void FunctionApproximation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionApproximation::descriptor() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FunctionApproximation& FunctionApproximation::default_instance() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  return *internal_default_instance();
}

FunctionApproximation* FunctionApproximation::New(::google::protobuf::Arena* arena) const {
  FunctionApproximation* n = new FunctionApproximation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FunctionApproximation::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.FunctionApproximation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_x_y_pairs()) {
    GOOGLE_DCHECK(x_y_pairs_ != NULL);
    x_y_pairs_->::object_detection::protos::XYPairs::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FunctionApproximation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.FunctionApproximation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .object_detection.protos.XYPairs x_y_pairs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_x_y_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.FunctionApproximation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.FunctionApproximation)
  return false;
#undef DO_
}

void FunctionApproximation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.FunctionApproximation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .object_detection.protos.XYPairs x_y_pairs = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->x_y_pairs_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.FunctionApproximation)
}

::google::protobuf::uint8* FunctionApproximation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.FunctionApproximation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .object_detection.protos.XYPairs x_y_pairs = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->x_y_pairs_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.FunctionApproximation)
  return target;
}

size_t FunctionApproximation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.FunctionApproximation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .object_detection.protos.XYPairs x_y_pairs = 1;
  if (has_x_y_pairs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->x_y_pairs_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionApproximation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.FunctionApproximation)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionApproximation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionApproximation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.FunctionApproximation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.FunctionApproximation)
    MergeFrom(*source);
  }
}

void FunctionApproximation::MergeFrom(const FunctionApproximation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.FunctionApproximation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_x_y_pairs()) {
    mutable_x_y_pairs()->::object_detection::protos::XYPairs::MergeFrom(from.x_y_pairs());
  }
}

void FunctionApproximation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.FunctionApproximation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionApproximation::CopyFrom(const FunctionApproximation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.FunctionApproximation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionApproximation::IsInitialized() const {
  return true;
}

void FunctionApproximation::Swap(FunctionApproximation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionApproximation::InternalSwap(FunctionApproximation* other) {
  using std::swap;
  swap(x_y_pairs_, other->x_y_pairs_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FunctionApproximation::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FunctionApproximation

// optional .object_detection.protos.XYPairs x_y_pairs = 1;
bool FunctionApproximation::has_x_y_pairs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FunctionApproximation::set_has_x_y_pairs() {
  _has_bits_[0] |= 0x00000001u;
}
void FunctionApproximation::clear_has_x_y_pairs() {
  _has_bits_[0] &= ~0x00000001u;
}
void FunctionApproximation::clear_x_y_pairs() {
  if (x_y_pairs_ != NULL) x_y_pairs_->::object_detection::protos::XYPairs::Clear();
  clear_has_x_y_pairs();
}
const ::object_detection::protos::XYPairs& FunctionApproximation::x_y_pairs() const {
  const ::object_detection::protos::XYPairs* p = x_y_pairs_;
  // @@protoc_insertion_point(field_get:object_detection.protos.FunctionApproximation.x_y_pairs)
  return p != NULL ? *p : *reinterpret_cast<const ::object_detection::protos::XYPairs*>(
      &::object_detection::protos::_XYPairs_default_instance_);
}
::object_detection::protos::XYPairs* FunctionApproximation::mutable_x_y_pairs() {
  set_has_x_y_pairs();
  if (x_y_pairs_ == NULL) {
    x_y_pairs_ = new ::object_detection::protos::XYPairs;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FunctionApproximation.x_y_pairs)
  return x_y_pairs_;
}
::object_detection::protos::XYPairs* FunctionApproximation::release_x_y_pairs() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FunctionApproximation.x_y_pairs)
  clear_has_x_y_pairs();
  ::object_detection::protos::XYPairs* temp = x_y_pairs_;
  x_y_pairs_ = NULL;
  return temp;
}
void FunctionApproximation::set_allocated_x_y_pairs(::object_detection::protos::XYPairs* x_y_pairs) {
  delete x_y_pairs_;
  x_y_pairs_ = x_y_pairs;
  if (x_y_pairs) {
    set_has_x_y_pairs();
  } else {
    clear_has_x_y_pairs();
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FunctionApproximation.x_y_pairs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ClassIdFunctionApproximations::ClassIdFunctionApproximations_ClassIdXyPairsMapEntry::ClassIdFunctionApproximations_ClassIdXyPairsMapEntry() {}
ClassIdFunctionApproximations::ClassIdFunctionApproximations_ClassIdXyPairsMapEntry::ClassIdFunctionApproximations_ClassIdXyPairsMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ClassIdFunctionApproximations::ClassIdFunctionApproximations_ClassIdXyPairsMapEntry::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[2];
}
void ClassIdFunctionApproximations::ClassIdFunctionApproximations_ClassIdXyPairsMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ClassIdFunctionApproximations::ClassIdFunctionApproximations_ClassIdXyPairsMapEntry::MergeFrom(const ClassIdFunctionApproximations_ClassIdXyPairsMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassIdFunctionApproximations::kClassIdXyPairsMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassIdFunctionApproximations::ClassIdFunctionApproximations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.ClassIdFunctionApproximations)
}
ClassIdFunctionApproximations::ClassIdFunctionApproximations(const ClassIdFunctionApproximations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_id_xy_pairs_map_.MergeFrom(from.class_id_xy_pairs_map_);
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.ClassIdFunctionApproximations)
}

void ClassIdFunctionApproximations::SharedCtor() {
  _cached_size_ = 0;
}

ClassIdFunctionApproximations::~ClassIdFunctionApproximations() {
  // @@protoc_insertion_point(destructor:object_detection.protos.ClassIdFunctionApproximations)
  SharedDtor();
}

void ClassIdFunctionApproximations::SharedDtor() {
}

void ClassIdFunctionApproximations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassIdFunctionApproximations::descriptor() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassIdFunctionApproximations& ClassIdFunctionApproximations::default_instance() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClassIdFunctionApproximations* ClassIdFunctionApproximations::New(::google::protobuf::Arena* arena) const {
  ClassIdFunctionApproximations* n = new ClassIdFunctionApproximations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassIdFunctionApproximations::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.ClassIdFunctionApproximations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  class_id_xy_pairs_map_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClassIdFunctionApproximations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.ClassIdFunctionApproximations)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .object_detection.protos.XYPairs> class_id_xy_pairs_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ClassIdFunctionApproximations_ClassIdXyPairsMapEntry::Parser< ::google::protobuf::internal::MapField<
              ClassIdFunctionApproximations_ClassIdXyPairsMapEntry,
              ::google::protobuf::int32, ::object_detection::protos::XYPairs,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs > > parser(&class_id_xy_pairs_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.ClassIdFunctionApproximations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.ClassIdFunctionApproximations)
  return false;
#undef DO_
}

void ClassIdFunctionApproximations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.ClassIdFunctionApproximations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .object_detection.protos.XYPairs> class_id_xy_pairs_map = 1;
  if (!this->class_id_xy_pairs_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->class_id_xy_pairs_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->class_id_xy_pairs_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >::const_iterator
          it = this->class_id_xy_pairs_map().begin();
          it != this->class_id_xy_pairs_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClassIdFunctionApproximations_ClassIdXyPairsMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(class_id_xy_pairs_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ClassIdFunctionApproximations_ClassIdXyPairsMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >::const_iterator
          it = this->class_id_xy_pairs_map().begin();
          it != this->class_id_xy_pairs_map().end(); ++it) {
        entry.reset(class_id_xy_pairs_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.ClassIdFunctionApproximations)
}

::google::protobuf::uint8* ClassIdFunctionApproximations::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.ClassIdFunctionApproximations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .object_detection.protos.XYPairs> class_id_xy_pairs_map = 1;
  if (!this->class_id_xy_pairs_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->class_id_xy_pairs_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->class_id_xy_pairs_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >::const_iterator
          it = this->class_id_xy_pairs_map().begin();
          it != this->class_id_xy_pairs_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClassIdFunctionApproximations_ClassIdXyPairsMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(class_id_xy_pairs_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ClassIdFunctionApproximations_ClassIdXyPairsMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >::const_iterator
          it = this->class_id_xy_pairs_map().begin();
          it != this->class_id_xy_pairs_map().end(); ++it) {
        entry.reset(class_id_xy_pairs_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.ClassIdFunctionApproximations)
  return target;
}

size_t ClassIdFunctionApproximations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.ClassIdFunctionApproximations)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // map<int32, .object_detection.protos.XYPairs> class_id_xy_pairs_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->class_id_xy_pairs_map_size());
  {
    ::google::protobuf::scoped_ptr<ClassIdFunctionApproximations_ClassIdXyPairsMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >::const_iterator
        it = this->class_id_xy_pairs_map().begin();
        it != this->class_id_xy_pairs_map().end(); ++it) {
      entry.reset(class_id_xy_pairs_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassIdFunctionApproximations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.ClassIdFunctionApproximations)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassIdFunctionApproximations* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassIdFunctionApproximations>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.ClassIdFunctionApproximations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.ClassIdFunctionApproximations)
    MergeFrom(*source);
  }
}

void ClassIdFunctionApproximations::MergeFrom(const ClassIdFunctionApproximations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.ClassIdFunctionApproximations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  class_id_xy_pairs_map_.MergeFrom(from.class_id_xy_pairs_map_);
}

void ClassIdFunctionApproximations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.ClassIdFunctionApproximations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassIdFunctionApproximations::CopyFrom(const ClassIdFunctionApproximations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.ClassIdFunctionApproximations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassIdFunctionApproximations::IsInitialized() const {
  return true;
}

void ClassIdFunctionApproximations::Swap(ClassIdFunctionApproximations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassIdFunctionApproximations::InternalSwap(ClassIdFunctionApproximations* other) {
  using std::swap;
  class_id_xy_pairs_map_.Swap(&other->class_id_xy_pairs_map_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassIdFunctionApproximations::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClassIdFunctionApproximations

// map<int32, .object_detection.protos.XYPairs> class_id_xy_pairs_map = 1;
int ClassIdFunctionApproximations::class_id_xy_pairs_map_size() const {
  return class_id_xy_pairs_map_.size();
}
void ClassIdFunctionApproximations::clear_class_id_xy_pairs_map() {
  class_id_xy_pairs_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >&
ClassIdFunctionApproximations::class_id_xy_pairs_map() const {
  // @@protoc_insertion_point(field_map:object_detection.protos.ClassIdFunctionApproximations.class_id_xy_pairs_map)
  return class_id_xy_pairs_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >*
ClassIdFunctionApproximations::mutable_class_id_xy_pairs_map() {
  // @@protoc_insertion_point(field_mutable_map:object_detection.protos.ClassIdFunctionApproximations.class_id_xy_pairs_map)
  return class_id_xy_pairs_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SigmoidCalibration::kSigmoidParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SigmoidCalibration::SigmoidCalibration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.SigmoidCalibration)
}
SigmoidCalibration::SigmoidCalibration(const SigmoidCalibration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sigmoid_parameters()) {
    sigmoid_parameters_ = new ::object_detection::protos::SigmoidParameters(*from.sigmoid_parameters_);
  } else {
    sigmoid_parameters_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.SigmoidCalibration)
}

void SigmoidCalibration::SharedCtor() {
  _cached_size_ = 0;
  sigmoid_parameters_ = NULL;
}

SigmoidCalibration::~SigmoidCalibration() {
  // @@protoc_insertion_point(destructor:object_detection.protos.SigmoidCalibration)
  SharedDtor();
}

void SigmoidCalibration::SharedDtor() {
  if (this != internal_default_instance()) delete sigmoid_parameters_;
}

void SigmoidCalibration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SigmoidCalibration::descriptor() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SigmoidCalibration& SigmoidCalibration::default_instance() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  return *internal_default_instance();
}

SigmoidCalibration* SigmoidCalibration::New(::google::protobuf::Arena* arena) const {
  SigmoidCalibration* n = new SigmoidCalibration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SigmoidCalibration::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.SigmoidCalibration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_sigmoid_parameters()) {
    GOOGLE_DCHECK(sigmoid_parameters_ != NULL);
    sigmoid_parameters_->::object_detection::protos::SigmoidParameters::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SigmoidCalibration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.SigmoidCalibration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .object_detection.protos.SigmoidParameters sigmoid_parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sigmoid_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.SigmoidCalibration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.SigmoidCalibration)
  return false;
#undef DO_
}

void SigmoidCalibration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.SigmoidCalibration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .object_detection.protos.SigmoidParameters sigmoid_parameters = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sigmoid_parameters_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.SigmoidCalibration)
}

::google::protobuf::uint8* SigmoidCalibration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.SigmoidCalibration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .object_detection.protos.SigmoidParameters sigmoid_parameters = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->sigmoid_parameters_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.SigmoidCalibration)
  return target;
}

size_t SigmoidCalibration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.SigmoidCalibration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .object_detection.protos.SigmoidParameters sigmoid_parameters = 1;
  if (has_sigmoid_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sigmoid_parameters_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SigmoidCalibration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.SigmoidCalibration)
  GOOGLE_DCHECK_NE(&from, this);
  const SigmoidCalibration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SigmoidCalibration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.SigmoidCalibration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.SigmoidCalibration)
    MergeFrom(*source);
  }
}

void SigmoidCalibration::MergeFrom(const SigmoidCalibration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.SigmoidCalibration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sigmoid_parameters()) {
    mutable_sigmoid_parameters()->::object_detection::protos::SigmoidParameters::MergeFrom(from.sigmoid_parameters());
  }
}

void SigmoidCalibration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.SigmoidCalibration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SigmoidCalibration::CopyFrom(const SigmoidCalibration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.SigmoidCalibration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SigmoidCalibration::IsInitialized() const {
  return true;
}

void SigmoidCalibration::Swap(SigmoidCalibration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SigmoidCalibration::InternalSwap(SigmoidCalibration* other) {
  using std::swap;
  swap(sigmoid_parameters_, other->sigmoid_parameters_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SigmoidCalibration::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SigmoidCalibration

// optional .object_detection.protos.SigmoidParameters sigmoid_parameters = 1;
bool SigmoidCalibration::has_sigmoid_parameters() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SigmoidCalibration::set_has_sigmoid_parameters() {
  _has_bits_[0] |= 0x00000001u;
}
void SigmoidCalibration::clear_has_sigmoid_parameters() {
  _has_bits_[0] &= ~0x00000001u;
}
void SigmoidCalibration::clear_sigmoid_parameters() {
  if (sigmoid_parameters_ != NULL) sigmoid_parameters_->::object_detection::protos::SigmoidParameters::Clear();
  clear_has_sigmoid_parameters();
}
const ::object_detection::protos::SigmoidParameters& SigmoidCalibration::sigmoid_parameters() const {
  const ::object_detection::protos::SigmoidParameters* p = sigmoid_parameters_;
  // @@protoc_insertion_point(field_get:object_detection.protos.SigmoidCalibration.sigmoid_parameters)
  return p != NULL ? *p : *reinterpret_cast<const ::object_detection::protos::SigmoidParameters*>(
      &::object_detection::protos::_SigmoidParameters_default_instance_);
}
::object_detection::protos::SigmoidParameters* SigmoidCalibration::mutable_sigmoid_parameters() {
  set_has_sigmoid_parameters();
  if (sigmoid_parameters_ == NULL) {
    sigmoid_parameters_ = new ::object_detection::protos::SigmoidParameters;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.SigmoidCalibration.sigmoid_parameters)
  return sigmoid_parameters_;
}
::object_detection::protos::SigmoidParameters* SigmoidCalibration::release_sigmoid_parameters() {
  // @@protoc_insertion_point(field_release:object_detection.protos.SigmoidCalibration.sigmoid_parameters)
  clear_has_sigmoid_parameters();
  ::object_detection::protos::SigmoidParameters* temp = sigmoid_parameters_;
  sigmoid_parameters_ = NULL;
  return temp;
}
void SigmoidCalibration::set_allocated_sigmoid_parameters(::object_detection::protos::SigmoidParameters* sigmoid_parameters) {
  delete sigmoid_parameters_;
  sigmoid_parameters_ = sigmoid_parameters;
  if (sigmoid_parameters) {
    set_has_sigmoid_parameters();
  } else {
    clear_has_sigmoid_parameters();
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.SigmoidCalibration.sigmoid_parameters)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ClassIdSigmoidCalibrations::ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry::ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry() {}
ClassIdSigmoidCalibrations::ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry::ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ClassIdSigmoidCalibrations::ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[5];
}
void ClassIdSigmoidCalibrations::ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ClassIdSigmoidCalibrations::ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry::MergeFrom(const ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassIdSigmoidCalibrations::kClassIdSigmoidParametersMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassIdSigmoidCalibrations::ClassIdSigmoidCalibrations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.ClassIdSigmoidCalibrations)
}
ClassIdSigmoidCalibrations::ClassIdSigmoidCalibrations(const ClassIdSigmoidCalibrations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_id_sigmoid_parameters_map_.MergeFrom(from.class_id_sigmoid_parameters_map_);
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.ClassIdSigmoidCalibrations)
}

void ClassIdSigmoidCalibrations::SharedCtor() {
  _cached_size_ = 0;
}

ClassIdSigmoidCalibrations::~ClassIdSigmoidCalibrations() {
  // @@protoc_insertion_point(destructor:object_detection.protos.ClassIdSigmoidCalibrations)
  SharedDtor();
}

void ClassIdSigmoidCalibrations::SharedDtor() {
}

void ClassIdSigmoidCalibrations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassIdSigmoidCalibrations::descriptor() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassIdSigmoidCalibrations& ClassIdSigmoidCalibrations::default_instance() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClassIdSigmoidCalibrations* ClassIdSigmoidCalibrations::New(::google::protobuf::Arena* arena) const {
  ClassIdSigmoidCalibrations* n = new ClassIdSigmoidCalibrations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassIdSigmoidCalibrations::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.ClassIdSigmoidCalibrations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  class_id_sigmoid_parameters_map_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClassIdSigmoidCalibrations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.ClassIdSigmoidCalibrations)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .object_detection.protos.SigmoidParameters> class_id_sigmoid_parameters_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry::Parser< ::google::protobuf::internal::MapField<
              ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry,
              ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters > > parser(&class_id_sigmoid_parameters_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.ClassIdSigmoidCalibrations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.ClassIdSigmoidCalibrations)
  return false;
#undef DO_
}

void ClassIdSigmoidCalibrations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.ClassIdSigmoidCalibrations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .object_detection.protos.SigmoidParameters> class_id_sigmoid_parameters_map = 1;
  if (!this->class_id_sigmoid_parameters_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->class_id_sigmoid_parameters_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->class_id_sigmoid_parameters_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >::const_iterator
          it = this->class_id_sigmoid_parameters_map().begin();
          it != this->class_id_sigmoid_parameters_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(class_id_sigmoid_parameters_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >::const_iterator
          it = this->class_id_sigmoid_parameters_map().begin();
          it != this->class_id_sigmoid_parameters_map().end(); ++it) {
        entry.reset(class_id_sigmoid_parameters_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.ClassIdSigmoidCalibrations)
}

::google::protobuf::uint8* ClassIdSigmoidCalibrations::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.ClassIdSigmoidCalibrations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .object_detection.protos.SigmoidParameters> class_id_sigmoid_parameters_map = 1;
  if (!this->class_id_sigmoid_parameters_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->class_id_sigmoid_parameters_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->class_id_sigmoid_parameters_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >::const_iterator
          it = this->class_id_sigmoid_parameters_map().begin();
          it != this->class_id_sigmoid_parameters_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(class_id_sigmoid_parameters_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >::const_iterator
          it = this->class_id_sigmoid_parameters_map().begin();
          it != this->class_id_sigmoid_parameters_map().end(); ++it) {
        entry.reset(class_id_sigmoid_parameters_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.ClassIdSigmoidCalibrations)
  return target;
}

size_t ClassIdSigmoidCalibrations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.ClassIdSigmoidCalibrations)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // map<int32, .object_detection.protos.SigmoidParameters> class_id_sigmoid_parameters_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->class_id_sigmoid_parameters_map_size());
  {
    ::google::protobuf::scoped_ptr<ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >::const_iterator
        it = this->class_id_sigmoid_parameters_map().begin();
        it != this->class_id_sigmoid_parameters_map().end(); ++it) {
      entry.reset(class_id_sigmoid_parameters_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassIdSigmoidCalibrations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.ClassIdSigmoidCalibrations)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassIdSigmoidCalibrations* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassIdSigmoidCalibrations>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.ClassIdSigmoidCalibrations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.ClassIdSigmoidCalibrations)
    MergeFrom(*source);
  }
}

void ClassIdSigmoidCalibrations::MergeFrom(const ClassIdSigmoidCalibrations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.ClassIdSigmoidCalibrations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  class_id_sigmoid_parameters_map_.MergeFrom(from.class_id_sigmoid_parameters_map_);
}

void ClassIdSigmoidCalibrations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.ClassIdSigmoidCalibrations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassIdSigmoidCalibrations::CopyFrom(const ClassIdSigmoidCalibrations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.ClassIdSigmoidCalibrations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassIdSigmoidCalibrations::IsInitialized() const {
  return true;
}

void ClassIdSigmoidCalibrations::Swap(ClassIdSigmoidCalibrations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassIdSigmoidCalibrations::InternalSwap(ClassIdSigmoidCalibrations* other) {
  using std::swap;
  class_id_sigmoid_parameters_map_.Swap(&other->class_id_sigmoid_parameters_map_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassIdSigmoidCalibrations::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClassIdSigmoidCalibrations

// map<int32, .object_detection.protos.SigmoidParameters> class_id_sigmoid_parameters_map = 1;
int ClassIdSigmoidCalibrations::class_id_sigmoid_parameters_map_size() const {
  return class_id_sigmoid_parameters_map_.size();
}
void ClassIdSigmoidCalibrations::clear_class_id_sigmoid_parameters_map() {
  class_id_sigmoid_parameters_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >&
ClassIdSigmoidCalibrations::class_id_sigmoid_parameters_map() const {
  // @@protoc_insertion_point(field_map:object_detection.protos.ClassIdSigmoidCalibrations.class_id_sigmoid_parameters_map)
  return class_id_sigmoid_parameters_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >*
ClassIdSigmoidCalibrations::mutable_class_id_sigmoid_parameters_map() {
  // @@protoc_insertion_point(field_mutable_map:object_detection.protos.ClassIdSigmoidCalibrations.class_id_sigmoid_parameters_map)
  return class_id_sigmoid_parameters_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XYPairs_XYPair::kXFieldNumber;
const int XYPairs_XYPair::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XYPairs_XYPair::XYPairs_XYPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.XYPairs.XYPair)
}
XYPairs_XYPair::XYPairs_XYPair(const XYPairs_XYPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.XYPairs.XYPair)
}

void XYPairs_XYPair::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

XYPairs_XYPair::~XYPairs_XYPair() {
  // @@protoc_insertion_point(destructor:object_detection.protos.XYPairs.XYPair)
  SharedDtor();
}

void XYPairs_XYPair::SharedDtor() {
}

void XYPairs_XYPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XYPairs_XYPair::descriptor() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XYPairs_XYPair& XYPairs_XYPair::default_instance() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  return *internal_default_instance();
}

XYPairs_XYPair* XYPairs_XYPair::New(::google::protobuf::Arena* arena) const {
  XYPairs_XYPair* n = new XYPairs_XYPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XYPairs_XYPair::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.XYPairs.XYPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XYPairs_XYPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.XYPairs.XYPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.XYPairs.XYPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.XYPairs.XYPair)
  return false;
#undef DO_
}

void XYPairs_XYPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.XYPairs.XYPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.XYPairs.XYPair)
}

::google::protobuf::uint8* XYPairs_XYPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.XYPairs.XYPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.XYPairs.XYPair)
  return target;
}

size_t XYPairs_XYPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.XYPairs.XYPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XYPairs_XYPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.XYPairs.XYPair)
  GOOGLE_DCHECK_NE(&from, this);
  const XYPairs_XYPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XYPairs_XYPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.XYPairs.XYPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.XYPairs.XYPair)
    MergeFrom(*source);
  }
}

void XYPairs_XYPair::MergeFrom(const XYPairs_XYPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.XYPairs.XYPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void XYPairs_XYPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.XYPairs.XYPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XYPairs_XYPair::CopyFrom(const XYPairs_XYPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.XYPairs.XYPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XYPairs_XYPair::IsInitialized() const {
  return true;
}

void XYPairs_XYPair::Swap(XYPairs_XYPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XYPairs_XYPair::InternalSwap(XYPairs_XYPair* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XYPairs_XYPair::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XYPairs_XYPair

// optional float x = 1;
bool XYPairs_XYPair::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XYPairs_XYPair::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void XYPairs_XYPair::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void XYPairs_XYPair::clear_x() {
  x_ = 0;
  clear_has_x();
}
float XYPairs_XYPair::x() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.XYPairs.XYPair.x)
  return x_;
}
void XYPairs_XYPair::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.XYPairs.XYPair.x)
}

// optional float y = 2;
bool XYPairs_XYPair::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XYPairs_XYPair::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void XYPairs_XYPair::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void XYPairs_XYPair::clear_y() {
  y_ = 0;
  clear_has_y();
}
float XYPairs_XYPair::y() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.XYPairs.XYPair.y)
  return y_;
}
void XYPairs_XYPair::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.XYPairs.XYPair.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XYPairs::kXYPairFieldNumber;
const int XYPairs::kTrainingDataTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XYPairs::XYPairs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.XYPairs)
}
XYPairs::XYPairs(const XYPairs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      x_y_pair_(from.x_y_pair_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  training_data_type_ = from.training_data_type_;
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.XYPairs)
}

void XYPairs::SharedCtor() {
  _cached_size_ = 0;
  training_data_type_ = 0;
}

XYPairs::~XYPairs() {
  // @@protoc_insertion_point(destructor:object_detection.protos.XYPairs)
  SharedDtor();
}

void XYPairs::SharedDtor() {
}

void XYPairs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XYPairs::descriptor() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XYPairs& XYPairs::default_instance() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  return *internal_default_instance();
}

XYPairs* XYPairs::New(::google::protobuf::Arena* arena) const {
  XYPairs* n = new XYPairs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XYPairs::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.XYPairs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_y_pair_.Clear();
  training_data_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XYPairs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.XYPairs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .object_detection.protos.XYPairs.XYPair x_y_pair = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_x_y_pair()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .object_detection.protos.TrainingDataType training_data_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::object_detection::protos::TrainingDataType_IsValid(value)) {
            set_training_data_type(static_cast< ::object_detection::protos::TrainingDataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.XYPairs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.XYPairs)
  return false;
#undef DO_
}

void XYPairs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.XYPairs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .object_detection.protos.XYPairs.XYPair x_y_pair = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->x_y_pair_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->x_y_pair(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .object_detection.protos.TrainingDataType training_data_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->training_data_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.XYPairs)
}

::google::protobuf::uint8* XYPairs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.XYPairs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .object_detection.protos.XYPairs.XYPair x_y_pair = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->x_y_pair_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->x_y_pair(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .object_detection.protos.TrainingDataType training_data_type = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->training_data_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.XYPairs)
  return target;
}

size_t XYPairs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.XYPairs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .object_detection.protos.XYPairs.XYPair x_y_pair = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->x_y_pair_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->x_y_pair(static_cast<int>(i)));
    }
  }

  // optional .object_detection.protos.TrainingDataType training_data_type = 2;
  if (has_training_data_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->training_data_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XYPairs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.XYPairs)
  GOOGLE_DCHECK_NE(&from, this);
  const XYPairs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XYPairs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.XYPairs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.XYPairs)
    MergeFrom(*source);
  }
}

void XYPairs::MergeFrom(const XYPairs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.XYPairs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  x_y_pair_.MergeFrom(from.x_y_pair_);
  if (from.has_training_data_type()) {
    set_training_data_type(from.training_data_type());
  }
}

void XYPairs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.XYPairs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XYPairs::CopyFrom(const XYPairs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.XYPairs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XYPairs::IsInitialized() const {
  return true;
}

void XYPairs::Swap(XYPairs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XYPairs::InternalSwap(XYPairs* other) {
  using std::swap;
  x_y_pair_.InternalSwap(&other->x_y_pair_);
  swap(training_data_type_, other->training_data_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XYPairs::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XYPairs

// repeated .object_detection.protos.XYPairs.XYPair x_y_pair = 1;
int XYPairs::x_y_pair_size() const {
  return x_y_pair_.size();
}
void XYPairs::clear_x_y_pair() {
  x_y_pair_.Clear();
}
const ::object_detection::protos::XYPairs_XYPair& XYPairs::x_y_pair(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.XYPairs.x_y_pair)
  return x_y_pair_.Get(index);
}
::object_detection::protos::XYPairs_XYPair* XYPairs::mutable_x_y_pair(int index) {
  // @@protoc_insertion_point(field_mutable:object_detection.protos.XYPairs.x_y_pair)
  return x_y_pair_.Mutable(index);
}
::object_detection::protos::XYPairs_XYPair* XYPairs::add_x_y_pair() {
  // @@protoc_insertion_point(field_add:object_detection.protos.XYPairs.x_y_pair)
  return x_y_pair_.Add();
}
::google::protobuf::RepeatedPtrField< ::object_detection::protos::XYPairs_XYPair >*
XYPairs::mutable_x_y_pair() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.XYPairs.x_y_pair)
  return &x_y_pair_;
}
const ::google::protobuf::RepeatedPtrField< ::object_detection::protos::XYPairs_XYPair >&
XYPairs::x_y_pair() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.XYPairs.x_y_pair)
  return x_y_pair_;
}

// optional .object_detection.protos.TrainingDataType training_data_type = 2;
bool XYPairs::has_training_data_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XYPairs::set_has_training_data_type() {
  _has_bits_[0] |= 0x00000001u;
}
void XYPairs::clear_has_training_data_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void XYPairs::clear_training_data_type() {
  training_data_type_ = 0;
  clear_has_training_data_type();
}
::object_detection::protos::TrainingDataType XYPairs::training_data_type() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.XYPairs.training_data_type)
  return static_cast< ::object_detection::protos::TrainingDataType >(training_data_type_);
}
void XYPairs::set_training_data_type(::object_detection::protos::TrainingDataType value) {
  assert(::object_detection::protos::TrainingDataType_IsValid(value));
  set_has_training_data_type();
  training_data_type_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.XYPairs.training_data_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SigmoidParameters::kAFieldNumber;
const int SigmoidParameters::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SigmoidParameters::SigmoidParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.SigmoidParameters)
}
SigmoidParameters::SigmoidParameters(const SigmoidParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&b_, &from.b_,
    static_cast<size_t>(reinterpret_cast<char*>(&a_) -
    reinterpret_cast<char*>(&b_)) + sizeof(a_));
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.SigmoidParameters)
}

void SigmoidParameters::SharedCtor() {
  _cached_size_ = 0;
  b_ = 0;
  a_ = -1;
}

SigmoidParameters::~SigmoidParameters() {
  // @@protoc_insertion_point(destructor:object_detection.protos.SigmoidParameters)
  SharedDtor();
}

void SigmoidParameters::SharedDtor() {
}

void SigmoidParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SigmoidParameters::descriptor() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SigmoidParameters& SigmoidParameters::default_instance() {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::InitDefaults();
  return *internal_default_instance();
}

SigmoidParameters* SigmoidParameters::New(::google::protobuf::Arena* arena) const {
  SigmoidParameters* n = new SigmoidParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SigmoidParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.SigmoidParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    b_ = 0;
    a_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SigmoidParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.SigmoidParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float a = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float b = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.SigmoidParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.SigmoidParameters)
  return false;
#undef DO_
}

void SigmoidParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.SigmoidParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float a = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->a(), output);
  }

  // optional float b = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->b(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.SigmoidParameters)
}

::google::protobuf::uint8* SigmoidParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.SigmoidParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float a = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->a(), target);
  }

  // optional float b = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->b(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.SigmoidParameters)
  return target;
}

size_t SigmoidParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.SigmoidParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional float b = 2 [default = 0];
    if (has_b()) {
      total_size += 1 + 4;
    }

    // optional float a = 1 [default = -1];
    if (has_a()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SigmoidParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.SigmoidParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const SigmoidParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SigmoidParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.SigmoidParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.SigmoidParameters)
    MergeFrom(*source);
  }
}

void SigmoidParameters::MergeFrom(const SigmoidParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.SigmoidParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000002u) {
      a_ = from.a_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SigmoidParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.SigmoidParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SigmoidParameters::CopyFrom(const SigmoidParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.SigmoidParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SigmoidParameters::IsInitialized() const {
  return true;
}

void SigmoidParameters::Swap(SigmoidParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SigmoidParameters::InternalSwap(SigmoidParameters* other) {
  using std::swap;
  swap(b_, other->b_);
  swap(a_, other->a_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SigmoidParameters::GetMetadata() const {
  protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SigmoidParameters

// optional float a = 1 [default = -1];
bool SigmoidParameters::has_a() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SigmoidParameters::set_has_a() {
  _has_bits_[0] |= 0x00000002u;
}
void SigmoidParameters::clear_has_a() {
  _has_bits_[0] &= ~0x00000002u;
}
void SigmoidParameters::clear_a() {
  a_ = -1;
  clear_has_a();
}
float SigmoidParameters::a() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.SigmoidParameters.a)
  return a_;
}
void SigmoidParameters::set_a(float value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.SigmoidParameters.a)
}

// optional float b = 2 [default = 0];
bool SigmoidParameters::has_b() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SigmoidParameters::set_has_b() {
  _has_bits_[0] |= 0x00000001u;
}
void SigmoidParameters::clear_has_b() {
  _has_bits_[0] &= ~0x00000001u;
}
void SigmoidParameters::clear_b() {
  b_ = 0;
  clear_has_b();
}
float SigmoidParameters::b() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.SigmoidParameters.b)
  return b_;
}
void SigmoidParameters::set_b(float value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.SigmoidParameters.b)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)
