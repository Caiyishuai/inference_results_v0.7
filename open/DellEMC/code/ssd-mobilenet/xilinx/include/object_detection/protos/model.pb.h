// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/model.proto

#ifndef PROTOBUF_object_5fdetection_2fprotos_2fmodel_2eproto__INCLUDED
#define PROTOBUF_object_5fdetection_2fprotos_2fmodel_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "object_detection/protos/faster_rcnn.pb.h"
#include "object_detection/protos/ssd.pb.h"
// @@protoc_insertion_point(includes)
namespace object_detection {
namespace protos {
class DetectionModel;
class DetectionModelDefaultTypeInternal;
extern DetectionModelDefaultTypeInternal _DetectionModel_default_instance_;
}  // namespace protos
}  // namespace object_detection

namespace object_detection {
namespace protos {

namespace protobuf_object_5fdetection_2fprotos_2fmodel_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_object_5fdetection_2fprotos_2fmodel_2eproto

// ===================================================================

class DetectionModel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.DetectionModel) */ {
 public:
  DetectionModel();
  virtual ~DetectionModel();

  DetectionModel(const DetectionModel& from);

  inline DetectionModel& operator=(const DetectionModel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectionModel(DetectionModel&& from) noexcept
    : DetectionModel() {
    *this = ::std::move(from);
  }

  inline DetectionModel& operator=(DetectionModel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectionModel& default_instance();

  enum ModelCase {
    kFasterRcnn = 1,
    kSsd = 2,
    MODEL_NOT_SET = 0,
  };

  static inline const DetectionModel* internal_default_instance() {
    return reinterpret_cast<const DetectionModel*>(
               &_DetectionModel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DetectionModel* other);
  friend void swap(DetectionModel& a, DetectionModel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectionModel* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectionModel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectionModel& from);
  void MergeFrom(const DetectionModel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectionModel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .object_detection.protos.FasterRcnn faster_rcnn = 1;
  bool has_faster_rcnn() const;
  void clear_faster_rcnn();
  static const int kFasterRcnnFieldNumber = 1;
  const ::object_detection::protos::FasterRcnn& faster_rcnn() const;
  ::object_detection::protos::FasterRcnn* mutable_faster_rcnn();
  ::object_detection::protos::FasterRcnn* release_faster_rcnn();
  void set_allocated_faster_rcnn(::object_detection::protos::FasterRcnn* faster_rcnn);

  // optional .object_detection.protos.Ssd ssd = 2;
  bool has_ssd() const;
  void clear_ssd();
  static const int kSsdFieldNumber = 2;
  const ::object_detection::protos::Ssd& ssd() const;
  ::object_detection::protos::Ssd* mutable_ssd();
  ::object_detection::protos::Ssd* release_ssd();
  void set_allocated_ssd(::object_detection::protos::Ssd* ssd);

  ModelCase model_case() const;
  // @@protoc_insertion_point(class_scope:object_detection.protos.DetectionModel)
 private:
  void set_has_faster_rcnn();
  void set_has_ssd();

  inline bool has_model() const;
  void clear_model();
  inline void clear_has_model();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  union ModelUnion {
    ModelUnion() {}
    ::object_detection::protos::FasterRcnn* faster_rcnn_;
    ::object_detection::protos::Ssd* ssd_;
  } model_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_object_5fdetection_2fprotos_2fmodel_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DetectionModel

// optional .object_detection.protos.FasterRcnn faster_rcnn = 1;
inline bool DetectionModel::has_faster_rcnn() const {
  return model_case() == kFasterRcnn;
}
inline void DetectionModel::set_has_faster_rcnn() {
  _oneof_case_[0] = kFasterRcnn;
}
inline void DetectionModel::clear_faster_rcnn() {
  if (has_faster_rcnn()) {
    delete model_.faster_rcnn_;
    clear_has_model();
  }
}
inline  const ::object_detection::protos::FasterRcnn& DetectionModel::faster_rcnn() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.DetectionModel.faster_rcnn)
  return has_faster_rcnn()
      ? *model_.faster_rcnn_
      : ::object_detection::protos::FasterRcnn::default_instance();
}
inline ::object_detection::protos::FasterRcnn* DetectionModel::mutable_faster_rcnn() {
  if (!has_faster_rcnn()) {
    clear_model();
    set_has_faster_rcnn();
    model_.faster_rcnn_ = new ::object_detection::protos::FasterRcnn;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.DetectionModel.faster_rcnn)
  return model_.faster_rcnn_;
}
inline ::object_detection::protos::FasterRcnn* DetectionModel::release_faster_rcnn() {
  // @@protoc_insertion_point(field_release:object_detection.protos.DetectionModel.faster_rcnn)
  if (has_faster_rcnn()) {
    clear_has_model();
    ::object_detection::protos::FasterRcnn* temp = model_.faster_rcnn_;
    model_.faster_rcnn_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DetectionModel::set_allocated_faster_rcnn(::object_detection::protos::FasterRcnn* faster_rcnn) {
  clear_model();
  if (faster_rcnn) {
    set_has_faster_rcnn();
    model_.faster_rcnn_ = faster_rcnn;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.DetectionModel.faster_rcnn)
}

// optional .object_detection.protos.Ssd ssd = 2;
inline bool DetectionModel::has_ssd() const {
  return model_case() == kSsd;
}
inline void DetectionModel::set_has_ssd() {
  _oneof_case_[0] = kSsd;
}
inline void DetectionModel::clear_ssd() {
  if (has_ssd()) {
    delete model_.ssd_;
    clear_has_model();
  }
}
inline  const ::object_detection::protos::Ssd& DetectionModel::ssd() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.DetectionModel.ssd)
  return has_ssd()
      ? *model_.ssd_
      : ::object_detection::protos::Ssd::default_instance();
}
inline ::object_detection::protos::Ssd* DetectionModel::mutable_ssd() {
  if (!has_ssd()) {
    clear_model();
    set_has_ssd();
    model_.ssd_ = new ::object_detection::protos::Ssd;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.DetectionModel.ssd)
  return model_.ssd_;
}
inline ::object_detection::protos::Ssd* DetectionModel::release_ssd() {
  // @@protoc_insertion_point(field_release:object_detection.protos.DetectionModel.ssd)
  if (has_ssd()) {
    clear_has_model();
    ::object_detection::protos::Ssd* temp = model_.ssd_;
    model_.ssd_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DetectionModel::set_allocated_ssd(::object_detection::protos::Ssd* ssd) {
  clear_model();
  if (ssd) {
    set_has_ssd();
    model_.ssd_ = ssd;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.DetectionModel.ssd)
}

inline bool DetectionModel::has_model() const {
  return model_case() != MODEL_NOT_SET;
}
inline void DetectionModel::clear_has_model() {
  _oneof_case_[0] = MODEL_NOT_SET;
}
inline DetectionModel::ModelCase DetectionModel::model_case() const {
  return DetectionModel::ModelCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_object_5fdetection_2fprotos_2fmodel_2eproto__INCLUDED
