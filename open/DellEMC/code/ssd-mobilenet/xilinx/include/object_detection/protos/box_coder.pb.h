// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/box_coder.proto

#ifndef PROTOBUF_object_5fdetection_2fprotos_2fbox_5fcoder_2eproto__INCLUDED
#define PROTOBUF_object_5fdetection_2fprotos_2fbox_5fcoder_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "object_detection/protos/faster_rcnn_box_coder.pb.h"
#include "object_detection/protos/keypoint_box_coder.pb.h"
#include "object_detection/protos/mean_stddev_box_coder.pb.h"
#include "object_detection/protos/square_box_coder.pb.h"
// @@protoc_insertion_point(includes)
namespace object_detection {
namespace protos {
class BoxCoder;
class BoxCoderDefaultTypeInternal;
extern BoxCoderDefaultTypeInternal _BoxCoder_default_instance_;
}  // namespace protos
}  // namespace object_detection

namespace object_detection {
namespace protos {

namespace protobuf_object_5fdetection_2fprotos_2fbox_5fcoder_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_object_5fdetection_2fprotos_2fbox_5fcoder_2eproto

// ===================================================================

class BoxCoder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.BoxCoder) */ {
 public:
  BoxCoder();
  virtual ~BoxCoder();

  BoxCoder(const BoxCoder& from);

  inline BoxCoder& operator=(const BoxCoder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoxCoder(BoxCoder&& from) noexcept
    : BoxCoder() {
    *this = ::std::move(from);
  }

  inline BoxCoder& operator=(BoxCoder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BoxCoder& default_instance();

  enum BoxCoderOneofCase {
    kFasterRcnnBoxCoder = 1,
    kMeanStddevBoxCoder = 2,
    kSquareBoxCoder = 3,
    kKeypointBoxCoder = 4,
    BOX_CODER_ONEOF_NOT_SET = 0,
  };

  static inline const BoxCoder* internal_default_instance() {
    return reinterpret_cast<const BoxCoder*>(
               &_BoxCoder_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(BoxCoder* other);
  friend void swap(BoxCoder& a, BoxCoder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoxCoder* New() const PROTOBUF_FINAL { return New(NULL); }

  BoxCoder* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BoxCoder& from);
  void MergeFrom(const BoxCoder& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BoxCoder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .object_detection.protos.FasterRcnnBoxCoder faster_rcnn_box_coder = 1;
  bool has_faster_rcnn_box_coder() const;
  void clear_faster_rcnn_box_coder();
  static const int kFasterRcnnBoxCoderFieldNumber = 1;
  const ::object_detection::protos::FasterRcnnBoxCoder& faster_rcnn_box_coder() const;
  ::object_detection::protos::FasterRcnnBoxCoder* mutable_faster_rcnn_box_coder();
  ::object_detection::protos::FasterRcnnBoxCoder* release_faster_rcnn_box_coder();
  void set_allocated_faster_rcnn_box_coder(::object_detection::protos::FasterRcnnBoxCoder* faster_rcnn_box_coder);

  // optional .object_detection.protos.MeanStddevBoxCoder mean_stddev_box_coder = 2;
  bool has_mean_stddev_box_coder() const;
  void clear_mean_stddev_box_coder();
  static const int kMeanStddevBoxCoderFieldNumber = 2;
  const ::object_detection::protos::MeanStddevBoxCoder& mean_stddev_box_coder() const;
  ::object_detection::protos::MeanStddevBoxCoder* mutable_mean_stddev_box_coder();
  ::object_detection::protos::MeanStddevBoxCoder* release_mean_stddev_box_coder();
  void set_allocated_mean_stddev_box_coder(::object_detection::protos::MeanStddevBoxCoder* mean_stddev_box_coder);

  // optional .object_detection.protos.SquareBoxCoder square_box_coder = 3;
  bool has_square_box_coder() const;
  void clear_square_box_coder();
  static const int kSquareBoxCoderFieldNumber = 3;
  const ::object_detection::protos::SquareBoxCoder& square_box_coder() const;
  ::object_detection::protos::SquareBoxCoder* mutable_square_box_coder();
  ::object_detection::protos::SquareBoxCoder* release_square_box_coder();
  void set_allocated_square_box_coder(::object_detection::protos::SquareBoxCoder* square_box_coder);

  // optional .object_detection.protos.KeypointBoxCoder keypoint_box_coder = 4;
  bool has_keypoint_box_coder() const;
  void clear_keypoint_box_coder();
  static const int kKeypointBoxCoderFieldNumber = 4;
  const ::object_detection::protos::KeypointBoxCoder& keypoint_box_coder() const;
  ::object_detection::protos::KeypointBoxCoder* mutable_keypoint_box_coder();
  ::object_detection::protos::KeypointBoxCoder* release_keypoint_box_coder();
  void set_allocated_keypoint_box_coder(::object_detection::protos::KeypointBoxCoder* keypoint_box_coder);

  BoxCoderOneofCase box_coder_oneof_case() const;
  // @@protoc_insertion_point(class_scope:object_detection.protos.BoxCoder)
 private:
  void set_has_faster_rcnn_box_coder();
  void set_has_mean_stddev_box_coder();
  void set_has_square_box_coder();
  void set_has_keypoint_box_coder();

  inline bool has_box_coder_oneof() const;
  void clear_box_coder_oneof();
  inline void clear_has_box_coder_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  union BoxCoderOneofUnion {
    BoxCoderOneofUnion() {}
    ::object_detection::protos::FasterRcnnBoxCoder* faster_rcnn_box_coder_;
    ::object_detection::protos::MeanStddevBoxCoder* mean_stddev_box_coder_;
    ::object_detection::protos::SquareBoxCoder* square_box_coder_;
    ::object_detection::protos::KeypointBoxCoder* keypoint_box_coder_;
  } box_coder_oneof_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_object_5fdetection_2fprotos_2fbox_5fcoder_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BoxCoder

// optional .object_detection.protos.FasterRcnnBoxCoder faster_rcnn_box_coder = 1;
inline bool BoxCoder::has_faster_rcnn_box_coder() const {
  return box_coder_oneof_case() == kFasterRcnnBoxCoder;
}
inline void BoxCoder::set_has_faster_rcnn_box_coder() {
  _oneof_case_[0] = kFasterRcnnBoxCoder;
}
inline void BoxCoder::clear_faster_rcnn_box_coder() {
  if (has_faster_rcnn_box_coder()) {
    delete box_coder_oneof_.faster_rcnn_box_coder_;
    clear_has_box_coder_oneof();
  }
}
inline  const ::object_detection::protos::FasterRcnnBoxCoder& BoxCoder::faster_rcnn_box_coder() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BoxCoder.faster_rcnn_box_coder)
  return has_faster_rcnn_box_coder()
      ? *box_coder_oneof_.faster_rcnn_box_coder_
      : ::object_detection::protos::FasterRcnnBoxCoder::default_instance();
}
inline ::object_detection::protos::FasterRcnnBoxCoder* BoxCoder::mutable_faster_rcnn_box_coder() {
  if (!has_faster_rcnn_box_coder()) {
    clear_box_coder_oneof();
    set_has_faster_rcnn_box_coder();
    box_coder_oneof_.faster_rcnn_box_coder_ = new ::object_detection::protos::FasterRcnnBoxCoder;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.BoxCoder.faster_rcnn_box_coder)
  return box_coder_oneof_.faster_rcnn_box_coder_;
}
inline ::object_detection::protos::FasterRcnnBoxCoder* BoxCoder::release_faster_rcnn_box_coder() {
  // @@protoc_insertion_point(field_release:object_detection.protos.BoxCoder.faster_rcnn_box_coder)
  if (has_faster_rcnn_box_coder()) {
    clear_has_box_coder_oneof();
    ::object_detection::protos::FasterRcnnBoxCoder* temp = box_coder_oneof_.faster_rcnn_box_coder_;
    box_coder_oneof_.faster_rcnn_box_coder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BoxCoder::set_allocated_faster_rcnn_box_coder(::object_detection::protos::FasterRcnnBoxCoder* faster_rcnn_box_coder) {
  clear_box_coder_oneof();
  if (faster_rcnn_box_coder) {
    set_has_faster_rcnn_box_coder();
    box_coder_oneof_.faster_rcnn_box_coder_ = faster_rcnn_box_coder;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.BoxCoder.faster_rcnn_box_coder)
}

// optional .object_detection.protos.MeanStddevBoxCoder mean_stddev_box_coder = 2;
inline bool BoxCoder::has_mean_stddev_box_coder() const {
  return box_coder_oneof_case() == kMeanStddevBoxCoder;
}
inline void BoxCoder::set_has_mean_stddev_box_coder() {
  _oneof_case_[0] = kMeanStddevBoxCoder;
}
inline void BoxCoder::clear_mean_stddev_box_coder() {
  if (has_mean_stddev_box_coder()) {
    delete box_coder_oneof_.mean_stddev_box_coder_;
    clear_has_box_coder_oneof();
  }
}
inline  const ::object_detection::protos::MeanStddevBoxCoder& BoxCoder::mean_stddev_box_coder() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BoxCoder.mean_stddev_box_coder)
  return has_mean_stddev_box_coder()
      ? *box_coder_oneof_.mean_stddev_box_coder_
      : ::object_detection::protos::MeanStddevBoxCoder::default_instance();
}
inline ::object_detection::protos::MeanStddevBoxCoder* BoxCoder::mutable_mean_stddev_box_coder() {
  if (!has_mean_stddev_box_coder()) {
    clear_box_coder_oneof();
    set_has_mean_stddev_box_coder();
    box_coder_oneof_.mean_stddev_box_coder_ = new ::object_detection::protos::MeanStddevBoxCoder;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.BoxCoder.mean_stddev_box_coder)
  return box_coder_oneof_.mean_stddev_box_coder_;
}
inline ::object_detection::protos::MeanStddevBoxCoder* BoxCoder::release_mean_stddev_box_coder() {
  // @@protoc_insertion_point(field_release:object_detection.protos.BoxCoder.mean_stddev_box_coder)
  if (has_mean_stddev_box_coder()) {
    clear_has_box_coder_oneof();
    ::object_detection::protos::MeanStddevBoxCoder* temp = box_coder_oneof_.mean_stddev_box_coder_;
    box_coder_oneof_.mean_stddev_box_coder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BoxCoder::set_allocated_mean_stddev_box_coder(::object_detection::protos::MeanStddevBoxCoder* mean_stddev_box_coder) {
  clear_box_coder_oneof();
  if (mean_stddev_box_coder) {
    set_has_mean_stddev_box_coder();
    box_coder_oneof_.mean_stddev_box_coder_ = mean_stddev_box_coder;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.BoxCoder.mean_stddev_box_coder)
}

// optional .object_detection.protos.SquareBoxCoder square_box_coder = 3;
inline bool BoxCoder::has_square_box_coder() const {
  return box_coder_oneof_case() == kSquareBoxCoder;
}
inline void BoxCoder::set_has_square_box_coder() {
  _oneof_case_[0] = kSquareBoxCoder;
}
inline void BoxCoder::clear_square_box_coder() {
  if (has_square_box_coder()) {
    delete box_coder_oneof_.square_box_coder_;
    clear_has_box_coder_oneof();
  }
}
inline  const ::object_detection::protos::SquareBoxCoder& BoxCoder::square_box_coder() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BoxCoder.square_box_coder)
  return has_square_box_coder()
      ? *box_coder_oneof_.square_box_coder_
      : ::object_detection::protos::SquareBoxCoder::default_instance();
}
inline ::object_detection::protos::SquareBoxCoder* BoxCoder::mutable_square_box_coder() {
  if (!has_square_box_coder()) {
    clear_box_coder_oneof();
    set_has_square_box_coder();
    box_coder_oneof_.square_box_coder_ = new ::object_detection::protos::SquareBoxCoder;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.BoxCoder.square_box_coder)
  return box_coder_oneof_.square_box_coder_;
}
inline ::object_detection::protos::SquareBoxCoder* BoxCoder::release_square_box_coder() {
  // @@protoc_insertion_point(field_release:object_detection.protos.BoxCoder.square_box_coder)
  if (has_square_box_coder()) {
    clear_has_box_coder_oneof();
    ::object_detection::protos::SquareBoxCoder* temp = box_coder_oneof_.square_box_coder_;
    box_coder_oneof_.square_box_coder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BoxCoder::set_allocated_square_box_coder(::object_detection::protos::SquareBoxCoder* square_box_coder) {
  clear_box_coder_oneof();
  if (square_box_coder) {
    set_has_square_box_coder();
    box_coder_oneof_.square_box_coder_ = square_box_coder;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.BoxCoder.square_box_coder)
}

// optional .object_detection.protos.KeypointBoxCoder keypoint_box_coder = 4;
inline bool BoxCoder::has_keypoint_box_coder() const {
  return box_coder_oneof_case() == kKeypointBoxCoder;
}
inline void BoxCoder::set_has_keypoint_box_coder() {
  _oneof_case_[0] = kKeypointBoxCoder;
}
inline void BoxCoder::clear_keypoint_box_coder() {
  if (has_keypoint_box_coder()) {
    delete box_coder_oneof_.keypoint_box_coder_;
    clear_has_box_coder_oneof();
  }
}
inline  const ::object_detection::protos::KeypointBoxCoder& BoxCoder::keypoint_box_coder() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BoxCoder.keypoint_box_coder)
  return has_keypoint_box_coder()
      ? *box_coder_oneof_.keypoint_box_coder_
      : ::object_detection::protos::KeypointBoxCoder::default_instance();
}
inline ::object_detection::protos::KeypointBoxCoder* BoxCoder::mutable_keypoint_box_coder() {
  if (!has_keypoint_box_coder()) {
    clear_box_coder_oneof();
    set_has_keypoint_box_coder();
    box_coder_oneof_.keypoint_box_coder_ = new ::object_detection::protos::KeypointBoxCoder;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.BoxCoder.keypoint_box_coder)
  return box_coder_oneof_.keypoint_box_coder_;
}
inline ::object_detection::protos::KeypointBoxCoder* BoxCoder::release_keypoint_box_coder() {
  // @@protoc_insertion_point(field_release:object_detection.protos.BoxCoder.keypoint_box_coder)
  if (has_keypoint_box_coder()) {
    clear_has_box_coder_oneof();
    ::object_detection::protos::KeypointBoxCoder* temp = box_coder_oneof_.keypoint_box_coder_;
    box_coder_oneof_.keypoint_box_coder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BoxCoder::set_allocated_keypoint_box_coder(::object_detection::protos::KeypointBoxCoder* keypoint_box_coder) {
  clear_box_coder_oneof();
  if (keypoint_box_coder) {
    set_has_keypoint_box_coder();
    box_coder_oneof_.keypoint_box_coder_ = keypoint_box_coder;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.BoxCoder.keypoint_box_coder)
}

inline bool BoxCoder::has_box_coder_oneof() const {
  return box_coder_oneof_case() != BOX_CODER_ONEOF_NOT_SET;
}
inline void BoxCoder::clear_has_box_coder_oneof() {
  _oneof_case_[0] = BOX_CODER_ONEOF_NOT_SET;
}
inline BoxCoder::BoxCoderOneofCase BoxCoder::box_coder_oneof_case() const {
  return BoxCoder::BoxCoderOneofCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_object_5fdetection_2fprotos_2fbox_5fcoder_2eproto__INCLUDED
