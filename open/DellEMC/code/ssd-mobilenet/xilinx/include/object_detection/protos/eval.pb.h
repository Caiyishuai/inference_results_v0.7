// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/eval.proto

#ifndef PROTOBUF_object_5fdetection_2fprotos_2feval_2eproto__INCLUDED
#define PROTOBUF_object_5fdetection_2fprotos_2feval_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace object_detection {
namespace protos {
class EvalConfig;
class EvalConfigDefaultTypeInternal;
extern EvalConfigDefaultTypeInternal _EvalConfig_default_instance_;
}  // namespace protos
}  // namespace object_detection

namespace object_detection {
namespace protos {

namespace protobuf_object_5fdetection_2fprotos_2feval_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_object_5fdetection_2fprotos_2feval_2eproto

// ===================================================================

class EvalConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.EvalConfig) */ {
 public:
  EvalConfig();
  virtual ~EvalConfig();

  EvalConfig(const EvalConfig& from);

  inline EvalConfig& operator=(const EvalConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvalConfig(EvalConfig&& from) noexcept
    : EvalConfig() {
    *this = ::std::move(from);
  }

  inline EvalConfig& operator=(EvalConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EvalConfig& default_instance();

  static inline const EvalConfig* internal_default_instance() {
    return reinterpret_cast<const EvalConfig*>(
               &_EvalConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(EvalConfig* other);
  friend void swap(EvalConfig& a, EvalConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvalConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  EvalConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvalConfig& from);
  void MergeFrom(const EvalConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvalConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string metrics_set = 8;
  int metrics_set_size() const;
  void clear_metrics_set();
  static const int kMetricsSetFieldNumber = 8;
  const ::std::string& metrics_set(int index) const;
  ::std::string* mutable_metrics_set(int index);
  void set_metrics_set(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_metrics_set(int index, ::std::string&& value);
  #endif
  void set_metrics_set(int index, const char* value);
  void set_metrics_set(int index, const char* value, size_t size);
  ::std::string* add_metrics_set();
  void add_metrics_set(const ::std::string& value);
  #if LANG_CXX11
  void add_metrics_set(::std::string&& value);
  #endif
  void add_metrics_set(const char* value);
  void add_metrics_set(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& metrics_set() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_metrics_set();

  // optional string visualization_export_dir = 6 [default = ""];
  bool has_visualization_export_dir() const;
  void clear_visualization_export_dir();
  static const int kVisualizationExportDirFieldNumber = 6;
  const ::std::string& visualization_export_dir() const;
  void set_visualization_export_dir(const ::std::string& value);
  #if LANG_CXX11
  void set_visualization_export_dir(::std::string&& value);
  #endif
  void set_visualization_export_dir(const char* value);
  void set_visualization_export_dir(const char* value, size_t size);
  ::std::string* mutable_visualization_export_dir();
  ::std::string* release_visualization_export_dir();
  void set_allocated_visualization_export_dir(::std::string* visualization_export_dir);

  // optional string eval_master = 7 [default = ""];
  bool has_eval_master() const;
  void clear_eval_master();
  static const int kEvalMasterFieldNumber = 7;
  const ::std::string& eval_master() const;
  void set_eval_master(const ::std::string& value);
  #if LANG_CXX11
  void set_eval_master(::std::string&& value);
  #endif
  void set_eval_master(const char* value);
  void set_eval_master(const char* value, size_t size);
  ::std::string* mutable_eval_master();
  ::std::string* release_eval_master();
  void set_allocated_eval_master(::std::string* eval_master);

  // optional string export_path = 9 [default = ""];
  bool has_export_path() const;
  void clear_export_path();
  static const int kExportPathFieldNumber = 9;
  const ::std::string& export_path() const;
  void set_export_path(const ::std::string& value);
  #if LANG_CXX11
  void set_export_path(::std::string&& value);
  #endif
  void set_export_path(const char* value);
  void set_export_path(const char* value, size_t size);
  ::std::string* mutable_export_path();
  ::std::string* release_export_path();
  void set_allocated_export_path(::std::string* export_path);

  // optional string groundtruth_box_visualization_color = 18 [default = "black"];
  bool has_groundtruth_box_visualization_color() const;
  void clear_groundtruth_box_visualization_color();
  static const int kGroundtruthBoxVisualizationColorFieldNumber = 18;
  const ::std::string& groundtruth_box_visualization_color() const;
  void set_groundtruth_box_visualization_color(const ::std::string& value);
  #if LANG_CXX11
  void set_groundtruth_box_visualization_color(::std::string&& value);
  #endif
  void set_groundtruth_box_visualization_color(const char* value);
  void set_groundtruth_box_visualization_color(const char* value, size_t size);
  ::std::string* mutable_groundtruth_box_visualization_color();
  ::std::string* release_groundtruth_box_visualization_color();
  void set_allocated_groundtruth_box_visualization_color(::std::string* groundtruth_box_visualization_color);

  // optional uint32 max_evals = 4 [default = 0, deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_max_evals() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_max_evals();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kMaxEvalsFieldNumber = 4;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::uint32 max_evals() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_max_evals(::google::protobuf::uint32 value);

  // optional bool save_graph = 5 [default = false];
  bool has_save_graph() const;
  void clear_save_graph();
  static const int kSaveGraphFieldNumber = 5;
  bool save_graph() const;
  void set_save_graph(bool value);

  // optional bool ignore_groundtruth = 10 [default = false];
  bool has_ignore_groundtruth() const;
  void clear_ignore_groundtruth();
  static const int kIgnoreGroundtruthFieldNumber = 10;
  bool ignore_groundtruth() const;
  void set_ignore_groundtruth(bool value);

  // optional bool use_moving_averages = 11 [default = false];
  bool has_use_moving_averages() const;
  void clear_use_moving_averages();
  static const int kUseMovingAveragesFieldNumber = 11;
  bool use_moving_averages() const;
  void set_use_moving_averages(bool value);

  // optional bool eval_instance_masks = 12 [default = false];
  bool has_eval_instance_masks() const;
  void clear_eval_instance_masks();
  static const int kEvalInstanceMasksFieldNumber = 12;
  bool eval_instance_masks() const;
  void set_eval_instance_masks(bool value);

  // optional bool skip_scores = 15 [default = false];
  bool has_skip_scores() const;
  void clear_skip_scores();
  static const int kSkipScoresFieldNumber = 15;
  bool skip_scores() const;
  void set_skip_scores(bool value);

  // optional bool skip_labels = 16 [default = false];
  bool has_skip_labels() const;
  void clear_skip_labels();
  static const int kSkipLabelsFieldNumber = 16;
  bool skip_labels() const;
  void set_skip_labels(bool value);

  // optional bool visualize_groundtruth_boxes = 17 [default = false];
  bool has_visualize_groundtruth_boxes() const;
  void clear_visualize_groundtruth_boxes();
  static const int kVisualizeGroundtruthBoxesFieldNumber = 17;
  bool visualize_groundtruth_boxes() const;
  void set_visualize_groundtruth_boxes(bool value);

  // optional bool keep_image_id_for_visualization_export = 19 [default = false];
  bool has_keep_image_id_for_visualization_export() const;
  void clear_keep_image_id_for_visualization_export();
  static const int kKeepImageIdForVisualizationExportFieldNumber = 19;
  bool keep_image_id_for_visualization_export() const;
  void set_keep_image_id_for_visualization_export(bool value);

  // optional bool include_metrics_per_category = 24 [default = false];
  bool has_include_metrics_per_category() const;
  void clear_include_metrics_per_category();
  static const int kIncludeMetricsPerCategoryFieldNumber = 24;
  bool include_metrics_per_category() const;
  void set_include_metrics_per_category(bool value);

  // optional float recall_lower_bound = 26 [default = 0];
  bool has_recall_lower_bound() const;
  void clear_recall_lower_bound();
  static const int kRecallLowerBoundFieldNumber = 26;
  float recall_lower_bound() const;
  void set_recall_lower_bound(float value);

  // optional uint32 num_visualizations = 1 [default = 10];
  bool has_num_visualizations() const;
  void clear_num_visualizations();
  static const int kNumVisualizationsFieldNumber = 1;
  ::google::protobuf::uint32 num_visualizations() const;
  void set_num_visualizations(::google::protobuf::uint32 value);

  // optional uint32 num_examples = 2 [default = 5000, deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_num_examples() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_num_examples();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kNumExamplesFieldNumber = 2;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::uint32 num_examples() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_num_examples(::google::protobuf::uint32 value);

  // optional uint32 eval_interval_secs = 3 [default = 300];
  bool has_eval_interval_secs() const;
  void clear_eval_interval_secs();
  static const int kEvalIntervalSecsFieldNumber = 3;
  ::google::protobuf::uint32 eval_interval_secs() const;
  void set_eval_interval_secs(::google::protobuf::uint32 value);

  // optional float min_score_threshold = 13 [default = 0.5];
  bool has_min_score_threshold() const;
  void clear_min_score_threshold();
  static const int kMinScoreThresholdFieldNumber = 13;
  float min_score_threshold() const;
  void set_min_score_threshold(float value);

  // optional int32 max_num_boxes_to_visualize = 14 [default = 20];
  bool has_max_num_boxes_to_visualize() const;
  void clear_max_num_boxes_to_visualize();
  static const int kMaxNumBoxesToVisualizeFieldNumber = 14;
  ::google::protobuf::int32 max_num_boxes_to_visualize() const;
  void set_max_num_boxes_to_visualize(::google::protobuf::int32 value);

  // optional bool retain_original_images = 23 [default = true];
  bool has_retain_original_images() const;
  void clear_retain_original_images();
  static const int kRetainOriginalImagesFieldNumber = 23;
  bool retain_original_images() const;
  void set_retain_original_images(bool value);

  // optional uint32 batch_size = 25 [default = 1];
  bool has_batch_size() const;
  void clear_batch_size();
  static const int kBatchSizeFieldNumber = 25;
  ::google::protobuf::uint32 batch_size() const;
  void set_batch_size(::google::protobuf::uint32 value);

  // optional float recall_upper_bound = 27 [default = 1];
  bool has_recall_upper_bound() const;
  void clear_recall_upper_bound();
  static const int kRecallUpperBoundFieldNumber = 27;
  float recall_upper_bound() const;
  void set_recall_upper_bound(float value);

  // @@protoc_insertion_point(class_scope:object_detection.protos.EvalConfig)
 private:
  void set_has_batch_size();
  void clear_has_batch_size();
  void set_has_num_visualizations();
  void clear_has_num_visualizations();
  void set_has_num_examples();
  void clear_has_num_examples();
  void set_has_eval_interval_secs();
  void clear_has_eval_interval_secs();
  void set_has_max_evals();
  void clear_has_max_evals();
  void set_has_save_graph();
  void clear_has_save_graph();
  void set_has_visualization_export_dir();
  void clear_has_visualization_export_dir();
  void set_has_eval_master();
  void clear_has_eval_master();
  void set_has_export_path();
  void clear_has_export_path();
  void set_has_ignore_groundtruth();
  void clear_has_ignore_groundtruth();
  void set_has_use_moving_averages();
  void clear_has_use_moving_averages();
  void set_has_eval_instance_masks();
  void clear_has_eval_instance_masks();
  void set_has_min_score_threshold();
  void clear_has_min_score_threshold();
  void set_has_max_num_boxes_to_visualize();
  void clear_has_max_num_boxes_to_visualize();
  void set_has_skip_scores();
  void clear_has_skip_scores();
  void set_has_skip_labels();
  void clear_has_skip_labels();
  void set_has_visualize_groundtruth_boxes();
  void clear_has_visualize_groundtruth_boxes();
  void set_has_groundtruth_box_visualization_color();
  void clear_has_groundtruth_box_visualization_color();
  void set_has_keep_image_id_for_visualization_export();
  void clear_has_keep_image_id_for_visualization_export();
  void set_has_retain_original_images();
  void clear_has_retain_original_images();
  void set_has_include_metrics_per_category();
  void clear_has_include_metrics_per_category();
  void set_has_recall_lower_bound();
  void clear_has_recall_lower_bound();
  void set_has_recall_upper_bound();
  void clear_has_recall_upper_bound();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> metrics_set_;
  ::google::protobuf::internal::ArenaStringPtr visualization_export_dir_;
  ::google::protobuf::internal::ArenaStringPtr eval_master_;
  ::google::protobuf::internal::ArenaStringPtr export_path_;
  static ::google::protobuf::internal::ExplicitlyConstructed< ::std::string> _default_groundtruth_box_visualization_color_;
  ::google::protobuf::internal::ArenaStringPtr groundtruth_box_visualization_color_;
  ::google::protobuf::uint32 max_evals_;
  bool save_graph_;
  bool ignore_groundtruth_;
  bool use_moving_averages_;
  bool eval_instance_masks_;
  bool skip_scores_;
  bool skip_labels_;
  bool visualize_groundtruth_boxes_;
  bool keep_image_id_for_visualization_export_;
  bool include_metrics_per_category_;
  float recall_lower_bound_;
  ::google::protobuf::uint32 num_visualizations_;
  ::google::protobuf::uint32 num_examples_;
  ::google::protobuf::uint32 eval_interval_secs_;
  float min_score_threshold_;
  ::google::protobuf::int32 max_num_boxes_to_visualize_;
  bool retain_original_images_;
  ::google::protobuf::uint32 batch_size_;
  float recall_upper_bound_;
  friend struct protobuf_object_5fdetection_2fprotos_2feval_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EvalConfig

// optional uint32 batch_size = 25 [default = 1];
inline bool EvalConfig::has_batch_size() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void EvalConfig::set_has_batch_size() {
  _has_bits_[0] |= 0x00200000u;
}
inline void EvalConfig::clear_has_batch_size() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void EvalConfig::clear_batch_size() {
  batch_size_ = 1u;
  clear_has_batch_size();
}
inline ::google::protobuf::uint32 EvalConfig::batch_size() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.batch_size)
  return batch_size_;
}
inline void EvalConfig::set_batch_size(::google::protobuf::uint32 value) {
  set_has_batch_size();
  batch_size_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.batch_size)
}

// optional uint32 num_visualizations = 1 [default = 10];
inline bool EvalConfig::has_num_visualizations() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void EvalConfig::set_has_num_visualizations() {
  _has_bits_[0] |= 0x00008000u;
}
inline void EvalConfig::clear_has_num_visualizations() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void EvalConfig::clear_num_visualizations() {
  num_visualizations_ = 10u;
  clear_has_num_visualizations();
}
inline ::google::protobuf::uint32 EvalConfig::num_visualizations() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.num_visualizations)
  return num_visualizations_;
}
inline void EvalConfig::set_num_visualizations(::google::protobuf::uint32 value) {
  set_has_num_visualizations();
  num_visualizations_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.num_visualizations)
}

// optional uint32 num_examples = 2 [default = 5000, deprecated = true];
inline bool EvalConfig::has_num_examples() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void EvalConfig::set_has_num_examples() {
  _has_bits_[0] |= 0x00010000u;
}
inline void EvalConfig::clear_has_num_examples() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void EvalConfig::clear_num_examples() {
  num_examples_ = 5000u;
  clear_has_num_examples();
}
inline ::google::protobuf::uint32 EvalConfig::num_examples() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.num_examples)
  return num_examples_;
}
inline void EvalConfig::set_num_examples(::google::protobuf::uint32 value) {
  set_has_num_examples();
  num_examples_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.num_examples)
}

// optional uint32 eval_interval_secs = 3 [default = 300];
inline bool EvalConfig::has_eval_interval_secs() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void EvalConfig::set_has_eval_interval_secs() {
  _has_bits_[0] |= 0x00020000u;
}
inline void EvalConfig::clear_has_eval_interval_secs() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void EvalConfig::clear_eval_interval_secs() {
  eval_interval_secs_ = 300u;
  clear_has_eval_interval_secs();
}
inline ::google::protobuf::uint32 EvalConfig::eval_interval_secs() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.eval_interval_secs)
  return eval_interval_secs_;
}
inline void EvalConfig::set_eval_interval_secs(::google::protobuf::uint32 value) {
  set_has_eval_interval_secs();
  eval_interval_secs_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.eval_interval_secs)
}

// optional uint32 max_evals = 4 [default = 0, deprecated = true];
inline bool EvalConfig::has_max_evals() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EvalConfig::set_has_max_evals() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EvalConfig::clear_has_max_evals() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EvalConfig::clear_max_evals() {
  max_evals_ = 0u;
  clear_has_max_evals();
}
inline ::google::protobuf::uint32 EvalConfig::max_evals() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.max_evals)
  return max_evals_;
}
inline void EvalConfig::set_max_evals(::google::protobuf::uint32 value) {
  set_has_max_evals();
  max_evals_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.max_evals)
}

// optional bool save_graph = 5 [default = false];
inline bool EvalConfig::has_save_graph() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EvalConfig::set_has_save_graph() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EvalConfig::clear_has_save_graph() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EvalConfig::clear_save_graph() {
  save_graph_ = false;
  clear_has_save_graph();
}
inline bool EvalConfig::save_graph() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.save_graph)
  return save_graph_;
}
inline void EvalConfig::set_save_graph(bool value) {
  set_has_save_graph();
  save_graph_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.save_graph)
}

// optional string visualization_export_dir = 6 [default = ""];
inline bool EvalConfig::has_visualization_export_dir() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EvalConfig::set_has_visualization_export_dir() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EvalConfig::clear_has_visualization_export_dir() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EvalConfig::clear_visualization_export_dir() {
  visualization_export_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_visualization_export_dir();
}
inline const ::std::string& EvalConfig::visualization_export_dir() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.visualization_export_dir)
  return visualization_export_dir_.GetNoArena();
}
inline void EvalConfig::set_visualization_export_dir(const ::std::string& value) {
  set_has_visualization_export_dir();
  visualization_export_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.visualization_export_dir)
}
#if LANG_CXX11
inline void EvalConfig::set_visualization_export_dir(::std::string&& value) {
  set_has_visualization_export_dir();
  visualization_export_dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:object_detection.protos.EvalConfig.visualization_export_dir)
}
#endif
inline void EvalConfig::set_visualization_export_dir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_visualization_export_dir();
  visualization_export_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:object_detection.protos.EvalConfig.visualization_export_dir)
}
inline void EvalConfig::set_visualization_export_dir(const char* value, size_t size) {
  set_has_visualization_export_dir();
  visualization_export_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.EvalConfig.visualization_export_dir)
}
inline ::std::string* EvalConfig::mutable_visualization_export_dir() {
  set_has_visualization_export_dir();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.EvalConfig.visualization_export_dir)
  return visualization_export_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvalConfig::release_visualization_export_dir() {
  // @@protoc_insertion_point(field_release:object_detection.protos.EvalConfig.visualization_export_dir)
  clear_has_visualization_export_dir();
  return visualization_export_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvalConfig::set_allocated_visualization_export_dir(::std::string* visualization_export_dir) {
  if (visualization_export_dir != NULL) {
    set_has_visualization_export_dir();
  } else {
    clear_has_visualization_export_dir();
  }
  visualization_export_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), visualization_export_dir);
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.EvalConfig.visualization_export_dir)
}

// optional string eval_master = 7 [default = ""];
inline bool EvalConfig::has_eval_master() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EvalConfig::set_has_eval_master() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EvalConfig::clear_has_eval_master() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EvalConfig::clear_eval_master() {
  eval_master_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eval_master();
}
inline const ::std::string& EvalConfig::eval_master() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.eval_master)
  return eval_master_.GetNoArena();
}
inline void EvalConfig::set_eval_master(const ::std::string& value) {
  set_has_eval_master();
  eval_master_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.eval_master)
}
#if LANG_CXX11
inline void EvalConfig::set_eval_master(::std::string&& value) {
  set_has_eval_master();
  eval_master_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:object_detection.protos.EvalConfig.eval_master)
}
#endif
inline void EvalConfig::set_eval_master(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_eval_master();
  eval_master_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:object_detection.protos.EvalConfig.eval_master)
}
inline void EvalConfig::set_eval_master(const char* value, size_t size) {
  set_has_eval_master();
  eval_master_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.EvalConfig.eval_master)
}
inline ::std::string* EvalConfig::mutable_eval_master() {
  set_has_eval_master();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.EvalConfig.eval_master)
  return eval_master_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvalConfig::release_eval_master() {
  // @@protoc_insertion_point(field_release:object_detection.protos.EvalConfig.eval_master)
  clear_has_eval_master();
  return eval_master_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvalConfig::set_allocated_eval_master(::std::string* eval_master) {
  if (eval_master != NULL) {
    set_has_eval_master();
  } else {
    clear_has_eval_master();
  }
  eval_master_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eval_master);
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.EvalConfig.eval_master)
}

// repeated string metrics_set = 8;
inline int EvalConfig::metrics_set_size() const {
  return metrics_set_.size();
}
inline void EvalConfig::clear_metrics_set() {
  metrics_set_.Clear();
}
inline const ::std::string& EvalConfig::metrics_set(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.metrics_set)
  return metrics_set_.Get(index);
}
inline ::std::string* EvalConfig::mutable_metrics_set(int index) {
  // @@protoc_insertion_point(field_mutable:object_detection.protos.EvalConfig.metrics_set)
  return metrics_set_.Mutable(index);
}
inline void EvalConfig::set_metrics_set(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.metrics_set)
  metrics_set_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void EvalConfig::set_metrics_set(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.metrics_set)
  metrics_set_.Mutable(index)->assign(std::move(value));
}
#endif
inline void EvalConfig::set_metrics_set(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  metrics_set_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:object_detection.protos.EvalConfig.metrics_set)
}
inline void EvalConfig::set_metrics_set(int index, const char* value, size_t size) {
  metrics_set_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.EvalConfig.metrics_set)
}
inline ::std::string* EvalConfig::add_metrics_set() {
  // @@protoc_insertion_point(field_add_mutable:object_detection.protos.EvalConfig.metrics_set)
  return metrics_set_.Add();
}
inline void EvalConfig::add_metrics_set(const ::std::string& value) {
  metrics_set_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:object_detection.protos.EvalConfig.metrics_set)
}
#if LANG_CXX11
inline void EvalConfig::add_metrics_set(::std::string&& value) {
  metrics_set_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:object_detection.protos.EvalConfig.metrics_set)
}
#endif
inline void EvalConfig::add_metrics_set(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  metrics_set_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:object_detection.protos.EvalConfig.metrics_set)
}
inline void EvalConfig::add_metrics_set(const char* value, size_t size) {
  metrics_set_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:object_detection.protos.EvalConfig.metrics_set)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EvalConfig::metrics_set() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.EvalConfig.metrics_set)
  return metrics_set_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EvalConfig::mutable_metrics_set() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.EvalConfig.metrics_set)
  return &metrics_set_;
}

// optional string export_path = 9 [default = ""];
inline bool EvalConfig::has_export_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EvalConfig::set_has_export_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EvalConfig::clear_has_export_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EvalConfig::clear_export_path() {
  export_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_export_path();
}
inline const ::std::string& EvalConfig::export_path() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.export_path)
  return export_path_.GetNoArena();
}
inline void EvalConfig::set_export_path(const ::std::string& value) {
  set_has_export_path();
  export_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.export_path)
}
#if LANG_CXX11
inline void EvalConfig::set_export_path(::std::string&& value) {
  set_has_export_path();
  export_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:object_detection.protos.EvalConfig.export_path)
}
#endif
inline void EvalConfig::set_export_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_export_path();
  export_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:object_detection.protos.EvalConfig.export_path)
}
inline void EvalConfig::set_export_path(const char* value, size_t size) {
  set_has_export_path();
  export_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.EvalConfig.export_path)
}
inline ::std::string* EvalConfig::mutable_export_path() {
  set_has_export_path();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.EvalConfig.export_path)
  return export_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvalConfig::release_export_path() {
  // @@protoc_insertion_point(field_release:object_detection.protos.EvalConfig.export_path)
  clear_has_export_path();
  return export_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvalConfig::set_allocated_export_path(::std::string* export_path) {
  if (export_path != NULL) {
    set_has_export_path();
  } else {
    clear_has_export_path();
  }
  export_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), export_path);
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.EvalConfig.export_path)
}

// optional bool ignore_groundtruth = 10 [default = false];
inline bool EvalConfig::has_ignore_groundtruth() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EvalConfig::set_has_ignore_groundtruth() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EvalConfig::clear_has_ignore_groundtruth() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EvalConfig::clear_ignore_groundtruth() {
  ignore_groundtruth_ = false;
  clear_has_ignore_groundtruth();
}
inline bool EvalConfig::ignore_groundtruth() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.ignore_groundtruth)
  return ignore_groundtruth_;
}
inline void EvalConfig::set_ignore_groundtruth(bool value) {
  set_has_ignore_groundtruth();
  ignore_groundtruth_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.ignore_groundtruth)
}

// optional bool use_moving_averages = 11 [default = false];
inline bool EvalConfig::has_use_moving_averages() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EvalConfig::set_has_use_moving_averages() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EvalConfig::clear_has_use_moving_averages() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EvalConfig::clear_use_moving_averages() {
  use_moving_averages_ = false;
  clear_has_use_moving_averages();
}
inline bool EvalConfig::use_moving_averages() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.use_moving_averages)
  return use_moving_averages_;
}
inline void EvalConfig::set_use_moving_averages(bool value) {
  set_has_use_moving_averages();
  use_moving_averages_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.use_moving_averages)
}

// optional bool eval_instance_masks = 12 [default = false];
inline bool EvalConfig::has_eval_instance_masks() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EvalConfig::set_has_eval_instance_masks() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EvalConfig::clear_has_eval_instance_masks() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EvalConfig::clear_eval_instance_masks() {
  eval_instance_masks_ = false;
  clear_has_eval_instance_masks();
}
inline bool EvalConfig::eval_instance_masks() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.eval_instance_masks)
  return eval_instance_masks_;
}
inline void EvalConfig::set_eval_instance_masks(bool value) {
  set_has_eval_instance_masks();
  eval_instance_masks_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.eval_instance_masks)
}

// optional float min_score_threshold = 13 [default = 0.5];
inline bool EvalConfig::has_min_score_threshold() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void EvalConfig::set_has_min_score_threshold() {
  _has_bits_[0] |= 0x00040000u;
}
inline void EvalConfig::clear_has_min_score_threshold() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void EvalConfig::clear_min_score_threshold() {
  min_score_threshold_ = 0.5f;
  clear_has_min_score_threshold();
}
inline float EvalConfig::min_score_threshold() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.min_score_threshold)
  return min_score_threshold_;
}
inline void EvalConfig::set_min_score_threshold(float value) {
  set_has_min_score_threshold();
  min_score_threshold_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.min_score_threshold)
}

// optional int32 max_num_boxes_to_visualize = 14 [default = 20];
inline bool EvalConfig::has_max_num_boxes_to_visualize() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void EvalConfig::set_has_max_num_boxes_to_visualize() {
  _has_bits_[0] |= 0x00080000u;
}
inline void EvalConfig::clear_has_max_num_boxes_to_visualize() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void EvalConfig::clear_max_num_boxes_to_visualize() {
  max_num_boxes_to_visualize_ = 20;
  clear_has_max_num_boxes_to_visualize();
}
inline ::google::protobuf::int32 EvalConfig::max_num_boxes_to_visualize() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.max_num_boxes_to_visualize)
  return max_num_boxes_to_visualize_;
}
inline void EvalConfig::set_max_num_boxes_to_visualize(::google::protobuf::int32 value) {
  set_has_max_num_boxes_to_visualize();
  max_num_boxes_to_visualize_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.max_num_boxes_to_visualize)
}

// optional bool skip_scores = 15 [default = false];
inline bool EvalConfig::has_skip_scores() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EvalConfig::set_has_skip_scores() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EvalConfig::clear_has_skip_scores() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EvalConfig::clear_skip_scores() {
  skip_scores_ = false;
  clear_has_skip_scores();
}
inline bool EvalConfig::skip_scores() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.skip_scores)
  return skip_scores_;
}
inline void EvalConfig::set_skip_scores(bool value) {
  set_has_skip_scores();
  skip_scores_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.skip_scores)
}

// optional bool skip_labels = 16 [default = false];
inline bool EvalConfig::has_skip_labels() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EvalConfig::set_has_skip_labels() {
  _has_bits_[0] |= 0x00000400u;
}
inline void EvalConfig::clear_has_skip_labels() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void EvalConfig::clear_skip_labels() {
  skip_labels_ = false;
  clear_has_skip_labels();
}
inline bool EvalConfig::skip_labels() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.skip_labels)
  return skip_labels_;
}
inline void EvalConfig::set_skip_labels(bool value) {
  set_has_skip_labels();
  skip_labels_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.skip_labels)
}

// optional bool visualize_groundtruth_boxes = 17 [default = false];
inline bool EvalConfig::has_visualize_groundtruth_boxes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void EvalConfig::set_has_visualize_groundtruth_boxes() {
  _has_bits_[0] |= 0x00000800u;
}
inline void EvalConfig::clear_has_visualize_groundtruth_boxes() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void EvalConfig::clear_visualize_groundtruth_boxes() {
  visualize_groundtruth_boxes_ = false;
  clear_has_visualize_groundtruth_boxes();
}
inline bool EvalConfig::visualize_groundtruth_boxes() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.visualize_groundtruth_boxes)
  return visualize_groundtruth_boxes_;
}
inline void EvalConfig::set_visualize_groundtruth_boxes(bool value) {
  set_has_visualize_groundtruth_boxes();
  visualize_groundtruth_boxes_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.visualize_groundtruth_boxes)
}

// optional string groundtruth_box_visualization_color = 18 [default = "black"];
inline bool EvalConfig::has_groundtruth_box_visualization_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EvalConfig::set_has_groundtruth_box_visualization_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EvalConfig::clear_has_groundtruth_box_visualization_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EvalConfig::clear_groundtruth_box_visualization_color() {
  groundtruth_box_visualization_color_.ClearToDefaultNoArena(&EvalConfig::_default_groundtruth_box_visualization_color_.get());
  clear_has_groundtruth_box_visualization_color();
}
inline const ::std::string& EvalConfig::groundtruth_box_visualization_color() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
  return groundtruth_box_visualization_color_.GetNoArena();
}
inline void EvalConfig::set_groundtruth_box_visualization_color(const ::std::string& value) {
  set_has_groundtruth_box_visualization_color();
  groundtruth_box_visualization_color_.SetNoArena(&EvalConfig::_default_groundtruth_box_visualization_color_.get(), value);
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
}
#if LANG_CXX11
inline void EvalConfig::set_groundtruth_box_visualization_color(::std::string&& value) {
  set_has_groundtruth_box_visualization_color();
  groundtruth_box_visualization_color_.SetNoArena(
    &EvalConfig::_default_groundtruth_box_visualization_color_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
}
#endif
inline void EvalConfig::set_groundtruth_box_visualization_color(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_groundtruth_box_visualization_color();
  groundtruth_box_visualization_color_.SetNoArena(&EvalConfig::_default_groundtruth_box_visualization_color_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
}
inline void EvalConfig::set_groundtruth_box_visualization_color(const char* value, size_t size) {
  set_has_groundtruth_box_visualization_color();
  groundtruth_box_visualization_color_.SetNoArena(&EvalConfig::_default_groundtruth_box_visualization_color_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
}
inline ::std::string* EvalConfig::mutable_groundtruth_box_visualization_color() {
  set_has_groundtruth_box_visualization_color();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
  return groundtruth_box_visualization_color_.MutableNoArena(&EvalConfig::_default_groundtruth_box_visualization_color_.get());
}
inline ::std::string* EvalConfig::release_groundtruth_box_visualization_color() {
  // @@protoc_insertion_point(field_release:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
  clear_has_groundtruth_box_visualization_color();
  return groundtruth_box_visualization_color_.ReleaseNoArena(&EvalConfig::_default_groundtruth_box_visualization_color_.get());
}
inline void EvalConfig::set_allocated_groundtruth_box_visualization_color(::std::string* groundtruth_box_visualization_color) {
  if (groundtruth_box_visualization_color != NULL) {
    set_has_groundtruth_box_visualization_color();
  } else {
    clear_has_groundtruth_box_visualization_color();
  }
  groundtruth_box_visualization_color_.SetAllocatedNoArena(&EvalConfig::_default_groundtruth_box_visualization_color_.get(), groundtruth_box_visualization_color);
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
}

// optional bool keep_image_id_for_visualization_export = 19 [default = false];
inline bool EvalConfig::has_keep_image_id_for_visualization_export() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void EvalConfig::set_has_keep_image_id_for_visualization_export() {
  _has_bits_[0] |= 0x00001000u;
}
inline void EvalConfig::clear_has_keep_image_id_for_visualization_export() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void EvalConfig::clear_keep_image_id_for_visualization_export() {
  keep_image_id_for_visualization_export_ = false;
  clear_has_keep_image_id_for_visualization_export();
}
inline bool EvalConfig::keep_image_id_for_visualization_export() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.keep_image_id_for_visualization_export)
  return keep_image_id_for_visualization_export_;
}
inline void EvalConfig::set_keep_image_id_for_visualization_export(bool value) {
  set_has_keep_image_id_for_visualization_export();
  keep_image_id_for_visualization_export_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.keep_image_id_for_visualization_export)
}

// optional bool retain_original_images = 23 [default = true];
inline bool EvalConfig::has_retain_original_images() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void EvalConfig::set_has_retain_original_images() {
  _has_bits_[0] |= 0x00100000u;
}
inline void EvalConfig::clear_has_retain_original_images() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void EvalConfig::clear_retain_original_images() {
  retain_original_images_ = true;
  clear_has_retain_original_images();
}
inline bool EvalConfig::retain_original_images() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.retain_original_images)
  return retain_original_images_;
}
inline void EvalConfig::set_retain_original_images(bool value) {
  set_has_retain_original_images();
  retain_original_images_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.retain_original_images)
}

// optional bool include_metrics_per_category = 24 [default = false];
inline bool EvalConfig::has_include_metrics_per_category() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void EvalConfig::set_has_include_metrics_per_category() {
  _has_bits_[0] |= 0x00002000u;
}
inline void EvalConfig::clear_has_include_metrics_per_category() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void EvalConfig::clear_include_metrics_per_category() {
  include_metrics_per_category_ = false;
  clear_has_include_metrics_per_category();
}
inline bool EvalConfig::include_metrics_per_category() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.include_metrics_per_category)
  return include_metrics_per_category_;
}
inline void EvalConfig::set_include_metrics_per_category(bool value) {
  set_has_include_metrics_per_category();
  include_metrics_per_category_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.include_metrics_per_category)
}

// optional float recall_lower_bound = 26 [default = 0];
inline bool EvalConfig::has_recall_lower_bound() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void EvalConfig::set_has_recall_lower_bound() {
  _has_bits_[0] |= 0x00004000u;
}
inline void EvalConfig::clear_has_recall_lower_bound() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void EvalConfig::clear_recall_lower_bound() {
  recall_lower_bound_ = 0;
  clear_has_recall_lower_bound();
}
inline float EvalConfig::recall_lower_bound() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.recall_lower_bound)
  return recall_lower_bound_;
}
inline void EvalConfig::set_recall_lower_bound(float value) {
  set_has_recall_lower_bound();
  recall_lower_bound_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.recall_lower_bound)
}

// optional float recall_upper_bound = 27 [default = 1];
inline bool EvalConfig::has_recall_upper_bound() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void EvalConfig::set_has_recall_upper_bound() {
  _has_bits_[0] |= 0x00400000u;
}
inline void EvalConfig::clear_has_recall_upper_bound() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void EvalConfig::clear_recall_upper_bound() {
  recall_upper_bound_ = 1;
  clear_has_recall_upper_bound();
}
inline float EvalConfig::recall_upper_bound() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.recall_upper_bound)
  return recall_upper_bound_;
}
inline void EvalConfig::set_recall_upper_bound(float value) {
  set_has_recall_upper_bound();
  recall_upper_bound_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.recall_upper_bound)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_object_5fdetection_2fprotos_2feval_2eproto__INCLUDED
