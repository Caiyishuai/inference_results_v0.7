// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/train.proto

#ifndef PROTOBUF_object_5fdetection_2fprotos_2ftrain_2eproto__INCLUDED
#define PROTOBUF_object_5fdetection_2fprotos_2ftrain_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "object_detection/protos/optimizer.pb.h"
#include "object_detection/protos/preprocessor.pb.h"
// @@protoc_insertion_point(includes)
namespace object_detection {
namespace protos {
class TrainConfig;
class TrainConfigDefaultTypeInternal;
extern TrainConfigDefaultTypeInternal _TrainConfig_default_instance_;
}  // namespace protos
}  // namespace object_detection

namespace object_detection {
namespace protos {

namespace protobuf_object_5fdetection_2fprotos_2ftrain_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_object_5fdetection_2fprotos_2ftrain_2eproto

// ===================================================================

class TrainConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.TrainConfig) */ {
 public:
  TrainConfig();
  virtual ~TrainConfig();

  TrainConfig(const TrainConfig& from);

  inline TrainConfig& operator=(const TrainConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrainConfig(TrainConfig&& from) noexcept
    : TrainConfig() {
    *this = ::std::move(from);
  }

  inline TrainConfig& operator=(TrainConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainConfig& default_instance();

  static inline const TrainConfig* internal_default_instance() {
    return reinterpret_cast<const TrainConfig*>(
               &_TrainConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TrainConfig* other);
  friend void swap(TrainConfig& a, TrainConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrainConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  TrainConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrainConfig& from);
  void MergeFrom(const TrainConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrainConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .object_detection.protos.PreprocessingStep data_augmentation_options = 2;
  int data_augmentation_options_size() const;
  void clear_data_augmentation_options();
  static const int kDataAugmentationOptionsFieldNumber = 2;
  const ::object_detection::protos::PreprocessingStep& data_augmentation_options(int index) const;
  ::object_detection::protos::PreprocessingStep* mutable_data_augmentation_options(int index);
  ::object_detection::protos::PreprocessingStep* add_data_augmentation_options();
  ::google::protobuf::RepeatedPtrField< ::object_detection::protos::PreprocessingStep >*
      mutable_data_augmentation_options();
  const ::google::protobuf::RepeatedPtrField< ::object_detection::protos::PreprocessingStep >&
      data_augmentation_options() const;

  // repeated string freeze_variables = 12;
  int freeze_variables_size() const;
  void clear_freeze_variables();
  static const int kFreezeVariablesFieldNumber = 12;
  const ::std::string& freeze_variables(int index) const;
  ::std::string* mutable_freeze_variables(int index);
  void set_freeze_variables(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_freeze_variables(int index, ::std::string&& value);
  #endif
  void set_freeze_variables(int index, const char* value);
  void set_freeze_variables(int index, const char* value, size_t size);
  ::std::string* add_freeze_variables();
  void add_freeze_variables(const ::std::string& value);
  #if LANG_CXX11
  void add_freeze_variables(::std::string&& value);
  #endif
  void add_freeze_variables(const char* value);
  void add_freeze_variables(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& freeze_variables() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_freeze_variables();

  // repeated string update_trainable_variables = 25;
  int update_trainable_variables_size() const;
  void clear_update_trainable_variables();
  static const int kUpdateTrainableVariablesFieldNumber = 25;
  const ::std::string& update_trainable_variables(int index) const;
  ::std::string* mutable_update_trainable_variables(int index);
  void set_update_trainable_variables(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_update_trainable_variables(int index, ::std::string&& value);
  #endif
  void set_update_trainable_variables(int index, const char* value);
  void set_update_trainable_variables(int index, const char* value, size_t size);
  ::std::string* add_update_trainable_variables();
  void add_update_trainable_variables(const ::std::string& value);
  #if LANG_CXX11
  void add_update_trainable_variables(::std::string&& value);
  #endif
  void add_update_trainable_variables(const char* value);
  void add_update_trainable_variables(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& update_trainable_variables() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_update_trainable_variables();

  // optional string fine_tune_checkpoint = 7 [default = ""];
  bool has_fine_tune_checkpoint() const;
  void clear_fine_tune_checkpoint();
  static const int kFineTuneCheckpointFieldNumber = 7;
  const ::std::string& fine_tune_checkpoint() const;
  void set_fine_tune_checkpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_fine_tune_checkpoint(::std::string&& value);
  #endif
  void set_fine_tune_checkpoint(const char* value);
  void set_fine_tune_checkpoint(const char* value, size_t size);
  ::std::string* mutable_fine_tune_checkpoint();
  ::std::string* release_fine_tune_checkpoint();
  void set_allocated_fine_tune_checkpoint(::std::string* fine_tune_checkpoint);

  // optional string fine_tune_checkpoint_type = 22 [default = ""];
  bool has_fine_tune_checkpoint_type() const;
  void clear_fine_tune_checkpoint_type();
  static const int kFineTuneCheckpointTypeFieldNumber = 22;
  const ::std::string& fine_tune_checkpoint_type() const;
  void set_fine_tune_checkpoint_type(const ::std::string& value);
  #if LANG_CXX11
  void set_fine_tune_checkpoint_type(::std::string&& value);
  #endif
  void set_fine_tune_checkpoint_type(const char* value);
  void set_fine_tune_checkpoint_type(const char* value, size_t size);
  ::std::string* mutable_fine_tune_checkpoint_type();
  ::std::string* release_fine_tune_checkpoint_type();
  void set_allocated_fine_tune_checkpoint_type(::std::string* fine_tune_checkpoint_type);

  // optional .object_detection.protos.Optimizer optimizer = 5;
  bool has_optimizer() const;
  void clear_optimizer();
  static const int kOptimizerFieldNumber = 5;
  const ::object_detection::protos::Optimizer& optimizer() const;
  ::object_detection::protos::Optimizer* mutable_optimizer();
  ::object_detection::protos::Optimizer* release_optimizer();
  void set_allocated_optimizer(::object_detection::protos::Optimizer* optimizer);

  // optional float gradient_clipping_by_norm = 6 [default = 0];
  bool has_gradient_clipping_by_norm() const;
  void clear_gradient_clipping_by_norm();
  static const int kGradientClippingByNormFieldNumber = 6;
  float gradient_clipping_by_norm() const;
  void set_gradient_clipping_by_norm(float value);

  // optional uint32 num_steps = 9 [default = 0];
  bool has_num_steps() const;
  void clear_num_steps();
  static const int kNumStepsFieldNumber = 9;
  ::google::protobuf::uint32 num_steps() const;
  void set_num_steps(::google::protobuf::uint32 value);

  // optional float bias_grad_multiplier = 11 [default = 0];
  bool has_bias_grad_multiplier() const;
  void clear_bias_grad_multiplier();
  static const int kBiasGradMultiplierFieldNumber = 11;
  float bias_grad_multiplier() const;
  void set_bias_grad_multiplier(float value);

  // optional bool sync_replicas = 3 [default = false];
  bool has_sync_replicas() const;
  void clear_sync_replicas();
  static const int kSyncReplicasFieldNumber = 3;
  bool sync_replicas() const;
  void set_sync_replicas(bool value);

  // optional bool from_detection_checkpoint = 8 [default = false, deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_from_detection_checkpoint() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_from_detection_checkpoint();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kFromDetectionCheckpointFieldNumber = 8;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool from_detection_checkpoint() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_from_detection_checkpoint(bool value);

  // optional bool load_all_detection_checkpoint_vars = 19 [default = false];
  bool has_load_all_detection_checkpoint_vars() const;
  void clear_load_all_detection_checkpoint_vars();
  static const int kLoadAllDetectionCheckpointVarsFieldNumber = 19;
  bool load_all_detection_checkpoint_vars() const;
  void set_load_all_detection_checkpoint_vars(bool value);

  // optional bool merge_multiple_label_boxes = 17 [default = false];
  bool has_merge_multiple_label_boxes() const;
  void clear_merge_multiple_label_boxes();
  static const int kMergeMultipleLabelBoxesFieldNumber = 17;
  bool merge_multiple_label_boxes() const;
  void set_merge_multiple_label_boxes(bool value);

  // optional bool use_multiclass_scores = 24 [default = false];
  bool has_use_multiclass_scores() const;
  void clear_use_multiclass_scores();
  static const int kUseMulticlassScoresFieldNumber = 24;
  bool use_multiclass_scores() const;
  void set_use_multiclass_scores(bool value);

  // optional bool retain_original_images = 23 [default = false];
  bool has_retain_original_images() const;
  void clear_retain_original_images();
  static const int kRetainOriginalImagesFieldNumber = 23;
  bool retain_original_images() const;
  void set_retain_original_images(bool value);

  // optional bool use_bfloat16 = 26 [default = false];
  bool has_use_bfloat16() const;
  void clear_use_bfloat16();
  static const int kUseBfloat16FieldNumber = 26;
  bool use_bfloat16() const;
  void set_use_bfloat16(bool value);

  // optional bool summarize_gradients = 27 [default = false];
  bool has_summarize_gradients() const;
  void clear_summarize_gradients();
  static const int kSummarizeGradientsFieldNumber = 27;
  bool summarize_gradients() const;
  void set_summarize_gradients(bool value);

  // optional int32 max_number_of_boxes = 20 [default = 100, deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_max_number_of_boxes() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_max_number_of_boxes();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kMaxNumberOfBoxesFieldNumber = 20;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::int32 max_number_of_boxes() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_max_number_of_boxes(::google::protobuf::int32 value);

  // optional uint32 batch_size = 1 [default = 32];
  bool has_batch_size() const;
  void clear_batch_size();
  static const int kBatchSizeFieldNumber = 1;
  ::google::protobuf::uint32 batch_size() const;
  void set_batch_size(::google::protobuf::uint32 value);

  // optional float keep_checkpoint_every_n_hours = 4 [default = 10000];
  bool has_keep_checkpoint_every_n_hours() const;
  void clear_keep_checkpoint_every_n_hours();
  static const int kKeepCheckpointEveryNHoursFieldNumber = 4;
  float keep_checkpoint_every_n_hours() const;
  void set_keep_checkpoint_every_n_hours(float value);

  // optional float startup_delay_steps = 10 [default = 15];
  bool has_startup_delay_steps() const;
  void clear_startup_delay_steps();
  static const int kStartupDelayStepsFieldNumber = 10;
  float startup_delay_steps() const;
  void set_startup_delay_steps(float value);

  // optional int32 replicas_to_aggregate = 13 [default = 1];
  bool has_replicas_to_aggregate() const;
  void clear_replicas_to_aggregate();
  static const int kReplicasToAggregateFieldNumber = 13;
  ::google::protobuf::int32 replicas_to_aggregate() const;
  void set_replicas_to_aggregate(::google::protobuf::int32 value);

  // optional int32 batch_queue_capacity = 14 [default = 150, deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_batch_queue_capacity() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_batch_queue_capacity();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kBatchQueueCapacityFieldNumber = 14;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::int32 batch_queue_capacity() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_batch_queue_capacity(::google::protobuf::int32 value);

  // optional int32 num_batch_queue_threads = 15 [default = 8, deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_num_batch_queue_threads() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_num_batch_queue_threads();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kNumBatchQueueThreadsFieldNumber = 15;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::int32 num_batch_queue_threads() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_num_batch_queue_threads(::google::protobuf::int32 value);

  // optional int32 prefetch_queue_capacity = 16 [default = 5, deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_prefetch_queue_capacity() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_prefetch_queue_capacity();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kPrefetchQueueCapacityFieldNumber = 16;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::int32 prefetch_queue_capacity() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_prefetch_queue_capacity(::google::protobuf::int32 value);

  // optional bool add_regularization_loss = 18 [default = true];
  bool has_add_regularization_loss() const;
  void clear_add_regularization_loss();
  static const int kAddRegularizationLossFieldNumber = 18;
  bool add_regularization_loss() const;
  void set_add_regularization_loss(bool value);

  // optional bool unpad_groundtruth_tensors = 21 [default = true];
  bool has_unpad_groundtruth_tensors() const;
  void clear_unpad_groundtruth_tensors();
  static const int kUnpadGroundtruthTensorsFieldNumber = 21;
  bool unpad_groundtruth_tensors() const;
  void set_unpad_groundtruth_tensors(bool value);

  // @@protoc_insertion_point(class_scope:object_detection.protos.TrainConfig)
 private:
  void set_has_batch_size();
  void clear_has_batch_size();
  void set_has_sync_replicas();
  void clear_has_sync_replicas();
  void set_has_keep_checkpoint_every_n_hours();
  void clear_has_keep_checkpoint_every_n_hours();
  void set_has_optimizer();
  void clear_has_optimizer();
  void set_has_gradient_clipping_by_norm();
  void clear_has_gradient_clipping_by_norm();
  void set_has_fine_tune_checkpoint();
  void clear_has_fine_tune_checkpoint();
  void set_has_fine_tune_checkpoint_type();
  void clear_has_fine_tune_checkpoint_type();
  void set_has_from_detection_checkpoint();
  void clear_has_from_detection_checkpoint();
  void set_has_load_all_detection_checkpoint_vars();
  void clear_has_load_all_detection_checkpoint_vars();
  void set_has_num_steps();
  void clear_has_num_steps();
  void set_has_startup_delay_steps();
  void clear_has_startup_delay_steps();
  void set_has_bias_grad_multiplier();
  void clear_has_bias_grad_multiplier();
  void set_has_replicas_to_aggregate();
  void clear_has_replicas_to_aggregate();
  void set_has_batch_queue_capacity();
  void clear_has_batch_queue_capacity();
  void set_has_num_batch_queue_threads();
  void clear_has_num_batch_queue_threads();
  void set_has_prefetch_queue_capacity();
  void clear_has_prefetch_queue_capacity();
  void set_has_merge_multiple_label_boxes();
  void clear_has_merge_multiple_label_boxes();
  void set_has_use_multiclass_scores();
  void clear_has_use_multiclass_scores();
  void set_has_add_regularization_loss();
  void clear_has_add_regularization_loss();
  void set_has_max_number_of_boxes();
  void clear_has_max_number_of_boxes();
  void set_has_unpad_groundtruth_tensors();
  void clear_has_unpad_groundtruth_tensors();
  void set_has_retain_original_images();
  void clear_has_retain_original_images();
  void set_has_use_bfloat16();
  void clear_has_use_bfloat16();
  void set_has_summarize_gradients();
  void clear_has_summarize_gradients();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::object_detection::protos::PreprocessingStep > data_augmentation_options_;
  ::google::protobuf::RepeatedPtrField< ::std::string> freeze_variables_;
  ::google::protobuf::RepeatedPtrField< ::std::string> update_trainable_variables_;
  ::google::protobuf::internal::ArenaStringPtr fine_tune_checkpoint_;
  ::google::protobuf::internal::ArenaStringPtr fine_tune_checkpoint_type_;
  ::object_detection::protos::Optimizer* optimizer_;
  float gradient_clipping_by_norm_;
  ::google::protobuf::uint32 num_steps_;
  float bias_grad_multiplier_;
  bool sync_replicas_;
  bool from_detection_checkpoint_;
  bool load_all_detection_checkpoint_vars_;
  bool merge_multiple_label_boxes_;
  bool use_multiclass_scores_;
  bool retain_original_images_;
  bool use_bfloat16_;
  bool summarize_gradients_;
  ::google::protobuf::int32 max_number_of_boxes_;
  ::google::protobuf::uint32 batch_size_;
  float keep_checkpoint_every_n_hours_;
  float startup_delay_steps_;
  ::google::protobuf::int32 replicas_to_aggregate_;
  ::google::protobuf::int32 batch_queue_capacity_;
  ::google::protobuf::int32 num_batch_queue_threads_;
  ::google::protobuf::int32 prefetch_queue_capacity_;
  bool add_regularization_loss_;
  bool unpad_groundtruth_tensors_;
  friend struct protobuf_object_5fdetection_2fprotos_2ftrain_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TrainConfig

// optional uint32 batch_size = 1 [default = 32];
inline bool TrainConfig::has_batch_size() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void TrainConfig::set_has_batch_size() {
  _has_bits_[0] |= 0x00008000u;
}
inline void TrainConfig::clear_has_batch_size() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void TrainConfig::clear_batch_size() {
  batch_size_ = 32u;
  clear_has_batch_size();
}
inline ::google::protobuf::uint32 TrainConfig::batch_size() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.batch_size)
  return batch_size_;
}
inline void TrainConfig::set_batch_size(::google::protobuf::uint32 value) {
  set_has_batch_size();
  batch_size_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.batch_size)
}

// repeated .object_detection.protos.PreprocessingStep data_augmentation_options = 2;
inline int TrainConfig::data_augmentation_options_size() const {
  return data_augmentation_options_.size();
}
inline void TrainConfig::clear_data_augmentation_options() {
  data_augmentation_options_.Clear();
}
inline const ::object_detection::protos::PreprocessingStep& TrainConfig::data_augmentation_options(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.data_augmentation_options)
  return data_augmentation_options_.Get(index);
}
inline ::object_detection::protos::PreprocessingStep* TrainConfig::mutable_data_augmentation_options(int index) {
  // @@protoc_insertion_point(field_mutable:object_detection.protos.TrainConfig.data_augmentation_options)
  return data_augmentation_options_.Mutable(index);
}
inline ::object_detection::protos::PreprocessingStep* TrainConfig::add_data_augmentation_options() {
  // @@protoc_insertion_point(field_add:object_detection.protos.TrainConfig.data_augmentation_options)
  return data_augmentation_options_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::object_detection::protos::PreprocessingStep >*
TrainConfig::mutable_data_augmentation_options() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.TrainConfig.data_augmentation_options)
  return &data_augmentation_options_;
}
inline const ::google::protobuf::RepeatedPtrField< ::object_detection::protos::PreprocessingStep >&
TrainConfig::data_augmentation_options() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.TrainConfig.data_augmentation_options)
  return data_augmentation_options_;
}

// optional bool sync_replicas = 3 [default = false];
inline bool TrainConfig::has_sync_replicas() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TrainConfig::set_has_sync_replicas() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TrainConfig::clear_has_sync_replicas() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TrainConfig::clear_sync_replicas() {
  sync_replicas_ = false;
  clear_has_sync_replicas();
}
inline bool TrainConfig::sync_replicas() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.sync_replicas)
  return sync_replicas_;
}
inline void TrainConfig::set_sync_replicas(bool value) {
  set_has_sync_replicas();
  sync_replicas_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.sync_replicas)
}

// optional float keep_checkpoint_every_n_hours = 4 [default = 10000];
inline bool TrainConfig::has_keep_checkpoint_every_n_hours() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void TrainConfig::set_has_keep_checkpoint_every_n_hours() {
  _has_bits_[0] |= 0x00010000u;
}
inline void TrainConfig::clear_has_keep_checkpoint_every_n_hours() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void TrainConfig::clear_keep_checkpoint_every_n_hours() {
  keep_checkpoint_every_n_hours_ = 10000;
  clear_has_keep_checkpoint_every_n_hours();
}
inline float TrainConfig::keep_checkpoint_every_n_hours() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.keep_checkpoint_every_n_hours)
  return keep_checkpoint_every_n_hours_;
}
inline void TrainConfig::set_keep_checkpoint_every_n_hours(float value) {
  set_has_keep_checkpoint_every_n_hours();
  keep_checkpoint_every_n_hours_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.keep_checkpoint_every_n_hours)
}

// optional .object_detection.protos.Optimizer optimizer = 5;
inline bool TrainConfig::has_optimizer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrainConfig::set_has_optimizer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrainConfig::clear_has_optimizer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrainConfig::clear_optimizer() {
  if (optimizer_ != NULL) optimizer_->::object_detection::protos::Optimizer::Clear();
  clear_has_optimizer();
}
inline const ::object_detection::protos::Optimizer& TrainConfig::optimizer() const {
  const ::object_detection::protos::Optimizer* p = optimizer_;
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.optimizer)
  return p != NULL ? *p : *reinterpret_cast<const ::object_detection::protos::Optimizer*>(
      &::object_detection::protos::_Optimizer_default_instance_);
}
inline ::object_detection::protos::Optimizer* TrainConfig::mutable_optimizer() {
  set_has_optimizer();
  if (optimizer_ == NULL) {
    optimizer_ = new ::object_detection::protos::Optimizer;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.TrainConfig.optimizer)
  return optimizer_;
}
inline ::object_detection::protos::Optimizer* TrainConfig::release_optimizer() {
  // @@protoc_insertion_point(field_release:object_detection.protos.TrainConfig.optimizer)
  clear_has_optimizer();
  ::object_detection::protos::Optimizer* temp = optimizer_;
  optimizer_ = NULL;
  return temp;
}
inline void TrainConfig::set_allocated_optimizer(::object_detection::protos::Optimizer* optimizer) {
  delete optimizer_;
  optimizer_ = optimizer;
  if (optimizer) {
    set_has_optimizer();
  } else {
    clear_has_optimizer();
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.TrainConfig.optimizer)
}

// optional float gradient_clipping_by_norm = 6 [default = 0];
inline bool TrainConfig::has_gradient_clipping_by_norm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrainConfig::set_has_gradient_clipping_by_norm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrainConfig::clear_has_gradient_clipping_by_norm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrainConfig::clear_gradient_clipping_by_norm() {
  gradient_clipping_by_norm_ = 0;
  clear_has_gradient_clipping_by_norm();
}
inline float TrainConfig::gradient_clipping_by_norm() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.gradient_clipping_by_norm)
  return gradient_clipping_by_norm_;
}
inline void TrainConfig::set_gradient_clipping_by_norm(float value) {
  set_has_gradient_clipping_by_norm();
  gradient_clipping_by_norm_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.gradient_clipping_by_norm)
}

// optional string fine_tune_checkpoint = 7 [default = ""];
inline bool TrainConfig::has_fine_tune_checkpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrainConfig::set_has_fine_tune_checkpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrainConfig::clear_has_fine_tune_checkpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrainConfig::clear_fine_tune_checkpoint() {
  fine_tune_checkpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fine_tune_checkpoint();
}
inline const ::std::string& TrainConfig::fine_tune_checkpoint() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.fine_tune_checkpoint)
  return fine_tune_checkpoint_.GetNoArena();
}
inline void TrainConfig::set_fine_tune_checkpoint(const ::std::string& value) {
  set_has_fine_tune_checkpoint();
  fine_tune_checkpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.fine_tune_checkpoint)
}
#if LANG_CXX11
inline void TrainConfig::set_fine_tune_checkpoint(::std::string&& value) {
  set_has_fine_tune_checkpoint();
  fine_tune_checkpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:object_detection.protos.TrainConfig.fine_tune_checkpoint)
}
#endif
inline void TrainConfig::set_fine_tune_checkpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fine_tune_checkpoint();
  fine_tune_checkpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:object_detection.protos.TrainConfig.fine_tune_checkpoint)
}
inline void TrainConfig::set_fine_tune_checkpoint(const char* value, size_t size) {
  set_has_fine_tune_checkpoint();
  fine_tune_checkpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.TrainConfig.fine_tune_checkpoint)
}
inline ::std::string* TrainConfig::mutable_fine_tune_checkpoint() {
  set_has_fine_tune_checkpoint();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.TrainConfig.fine_tune_checkpoint)
  return fine_tune_checkpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainConfig::release_fine_tune_checkpoint() {
  // @@protoc_insertion_point(field_release:object_detection.protos.TrainConfig.fine_tune_checkpoint)
  clear_has_fine_tune_checkpoint();
  return fine_tune_checkpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainConfig::set_allocated_fine_tune_checkpoint(::std::string* fine_tune_checkpoint) {
  if (fine_tune_checkpoint != NULL) {
    set_has_fine_tune_checkpoint();
  } else {
    clear_has_fine_tune_checkpoint();
  }
  fine_tune_checkpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fine_tune_checkpoint);
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.TrainConfig.fine_tune_checkpoint)
}

// optional string fine_tune_checkpoint_type = 22 [default = ""];
inline bool TrainConfig::has_fine_tune_checkpoint_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrainConfig::set_has_fine_tune_checkpoint_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrainConfig::clear_has_fine_tune_checkpoint_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrainConfig::clear_fine_tune_checkpoint_type() {
  fine_tune_checkpoint_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fine_tune_checkpoint_type();
}
inline const ::std::string& TrainConfig::fine_tune_checkpoint_type() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.fine_tune_checkpoint_type)
  return fine_tune_checkpoint_type_.GetNoArena();
}
inline void TrainConfig::set_fine_tune_checkpoint_type(const ::std::string& value) {
  set_has_fine_tune_checkpoint_type();
  fine_tune_checkpoint_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.fine_tune_checkpoint_type)
}
#if LANG_CXX11
inline void TrainConfig::set_fine_tune_checkpoint_type(::std::string&& value) {
  set_has_fine_tune_checkpoint_type();
  fine_tune_checkpoint_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:object_detection.protos.TrainConfig.fine_tune_checkpoint_type)
}
#endif
inline void TrainConfig::set_fine_tune_checkpoint_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fine_tune_checkpoint_type();
  fine_tune_checkpoint_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:object_detection.protos.TrainConfig.fine_tune_checkpoint_type)
}
inline void TrainConfig::set_fine_tune_checkpoint_type(const char* value, size_t size) {
  set_has_fine_tune_checkpoint_type();
  fine_tune_checkpoint_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.TrainConfig.fine_tune_checkpoint_type)
}
inline ::std::string* TrainConfig::mutable_fine_tune_checkpoint_type() {
  set_has_fine_tune_checkpoint_type();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.TrainConfig.fine_tune_checkpoint_type)
  return fine_tune_checkpoint_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainConfig::release_fine_tune_checkpoint_type() {
  // @@protoc_insertion_point(field_release:object_detection.protos.TrainConfig.fine_tune_checkpoint_type)
  clear_has_fine_tune_checkpoint_type();
  return fine_tune_checkpoint_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainConfig::set_allocated_fine_tune_checkpoint_type(::std::string* fine_tune_checkpoint_type) {
  if (fine_tune_checkpoint_type != NULL) {
    set_has_fine_tune_checkpoint_type();
  } else {
    clear_has_fine_tune_checkpoint_type();
  }
  fine_tune_checkpoint_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fine_tune_checkpoint_type);
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.TrainConfig.fine_tune_checkpoint_type)
}

// optional bool from_detection_checkpoint = 8 [default = false, deprecated = true];
inline bool TrainConfig::has_from_detection_checkpoint() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TrainConfig::set_has_from_detection_checkpoint() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TrainConfig::clear_has_from_detection_checkpoint() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TrainConfig::clear_from_detection_checkpoint() {
  from_detection_checkpoint_ = false;
  clear_has_from_detection_checkpoint();
}
inline bool TrainConfig::from_detection_checkpoint() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.from_detection_checkpoint)
  return from_detection_checkpoint_;
}
inline void TrainConfig::set_from_detection_checkpoint(bool value) {
  set_has_from_detection_checkpoint();
  from_detection_checkpoint_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.from_detection_checkpoint)
}

// optional bool load_all_detection_checkpoint_vars = 19 [default = false];
inline bool TrainConfig::has_load_all_detection_checkpoint_vars() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TrainConfig::set_has_load_all_detection_checkpoint_vars() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TrainConfig::clear_has_load_all_detection_checkpoint_vars() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TrainConfig::clear_load_all_detection_checkpoint_vars() {
  load_all_detection_checkpoint_vars_ = false;
  clear_has_load_all_detection_checkpoint_vars();
}
inline bool TrainConfig::load_all_detection_checkpoint_vars() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.load_all_detection_checkpoint_vars)
  return load_all_detection_checkpoint_vars_;
}
inline void TrainConfig::set_load_all_detection_checkpoint_vars(bool value) {
  set_has_load_all_detection_checkpoint_vars();
  load_all_detection_checkpoint_vars_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.load_all_detection_checkpoint_vars)
}

// optional uint32 num_steps = 9 [default = 0];
inline bool TrainConfig::has_num_steps() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TrainConfig::set_has_num_steps() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TrainConfig::clear_has_num_steps() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TrainConfig::clear_num_steps() {
  num_steps_ = 0u;
  clear_has_num_steps();
}
inline ::google::protobuf::uint32 TrainConfig::num_steps() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.num_steps)
  return num_steps_;
}
inline void TrainConfig::set_num_steps(::google::protobuf::uint32 value) {
  set_has_num_steps();
  num_steps_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.num_steps)
}

// optional float startup_delay_steps = 10 [default = 15];
inline bool TrainConfig::has_startup_delay_steps() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void TrainConfig::set_has_startup_delay_steps() {
  _has_bits_[0] |= 0x00020000u;
}
inline void TrainConfig::clear_has_startup_delay_steps() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void TrainConfig::clear_startup_delay_steps() {
  startup_delay_steps_ = 15;
  clear_has_startup_delay_steps();
}
inline float TrainConfig::startup_delay_steps() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.startup_delay_steps)
  return startup_delay_steps_;
}
inline void TrainConfig::set_startup_delay_steps(float value) {
  set_has_startup_delay_steps();
  startup_delay_steps_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.startup_delay_steps)
}

// optional float bias_grad_multiplier = 11 [default = 0];
inline bool TrainConfig::has_bias_grad_multiplier() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TrainConfig::set_has_bias_grad_multiplier() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TrainConfig::clear_has_bias_grad_multiplier() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TrainConfig::clear_bias_grad_multiplier() {
  bias_grad_multiplier_ = 0;
  clear_has_bias_grad_multiplier();
}
inline float TrainConfig::bias_grad_multiplier() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.bias_grad_multiplier)
  return bias_grad_multiplier_;
}
inline void TrainConfig::set_bias_grad_multiplier(float value) {
  set_has_bias_grad_multiplier();
  bias_grad_multiplier_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.bias_grad_multiplier)
}

// repeated string update_trainable_variables = 25;
inline int TrainConfig::update_trainable_variables_size() const {
  return update_trainable_variables_.size();
}
inline void TrainConfig::clear_update_trainable_variables() {
  update_trainable_variables_.Clear();
}
inline const ::std::string& TrainConfig::update_trainable_variables(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.update_trainable_variables)
  return update_trainable_variables_.Get(index);
}
inline ::std::string* TrainConfig::mutable_update_trainable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:object_detection.protos.TrainConfig.update_trainable_variables)
  return update_trainable_variables_.Mutable(index);
}
inline void TrainConfig::set_update_trainable_variables(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.update_trainable_variables)
  update_trainable_variables_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TrainConfig::set_update_trainable_variables(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.update_trainable_variables)
  update_trainable_variables_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TrainConfig::set_update_trainable_variables(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  update_trainable_variables_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:object_detection.protos.TrainConfig.update_trainable_variables)
}
inline void TrainConfig::set_update_trainable_variables(int index, const char* value, size_t size) {
  update_trainable_variables_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.TrainConfig.update_trainable_variables)
}
inline ::std::string* TrainConfig::add_update_trainable_variables() {
  // @@protoc_insertion_point(field_add_mutable:object_detection.protos.TrainConfig.update_trainable_variables)
  return update_trainable_variables_.Add();
}
inline void TrainConfig::add_update_trainable_variables(const ::std::string& value) {
  update_trainable_variables_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:object_detection.protos.TrainConfig.update_trainable_variables)
}
#if LANG_CXX11
inline void TrainConfig::add_update_trainable_variables(::std::string&& value) {
  update_trainable_variables_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:object_detection.protos.TrainConfig.update_trainable_variables)
}
#endif
inline void TrainConfig::add_update_trainable_variables(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  update_trainable_variables_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:object_detection.protos.TrainConfig.update_trainable_variables)
}
inline void TrainConfig::add_update_trainable_variables(const char* value, size_t size) {
  update_trainable_variables_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:object_detection.protos.TrainConfig.update_trainable_variables)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TrainConfig::update_trainable_variables() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.TrainConfig.update_trainable_variables)
  return update_trainable_variables_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TrainConfig::mutable_update_trainable_variables() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.TrainConfig.update_trainable_variables)
  return &update_trainable_variables_;
}

// repeated string freeze_variables = 12;
inline int TrainConfig::freeze_variables_size() const {
  return freeze_variables_.size();
}
inline void TrainConfig::clear_freeze_variables() {
  freeze_variables_.Clear();
}
inline const ::std::string& TrainConfig::freeze_variables(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.freeze_variables)
  return freeze_variables_.Get(index);
}
inline ::std::string* TrainConfig::mutable_freeze_variables(int index) {
  // @@protoc_insertion_point(field_mutable:object_detection.protos.TrainConfig.freeze_variables)
  return freeze_variables_.Mutable(index);
}
inline void TrainConfig::set_freeze_variables(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.freeze_variables)
  freeze_variables_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TrainConfig::set_freeze_variables(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.freeze_variables)
  freeze_variables_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TrainConfig::set_freeze_variables(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  freeze_variables_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:object_detection.protos.TrainConfig.freeze_variables)
}
inline void TrainConfig::set_freeze_variables(int index, const char* value, size_t size) {
  freeze_variables_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.TrainConfig.freeze_variables)
}
inline ::std::string* TrainConfig::add_freeze_variables() {
  // @@protoc_insertion_point(field_add_mutable:object_detection.protos.TrainConfig.freeze_variables)
  return freeze_variables_.Add();
}
inline void TrainConfig::add_freeze_variables(const ::std::string& value) {
  freeze_variables_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:object_detection.protos.TrainConfig.freeze_variables)
}
#if LANG_CXX11
inline void TrainConfig::add_freeze_variables(::std::string&& value) {
  freeze_variables_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:object_detection.protos.TrainConfig.freeze_variables)
}
#endif
inline void TrainConfig::add_freeze_variables(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  freeze_variables_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:object_detection.protos.TrainConfig.freeze_variables)
}
inline void TrainConfig::add_freeze_variables(const char* value, size_t size) {
  freeze_variables_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:object_detection.protos.TrainConfig.freeze_variables)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TrainConfig::freeze_variables() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.TrainConfig.freeze_variables)
  return freeze_variables_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TrainConfig::mutable_freeze_variables() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.TrainConfig.freeze_variables)
  return &freeze_variables_;
}

// optional int32 replicas_to_aggregate = 13 [default = 1];
inline bool TrainConfig::has_replicas_to_aggregate() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void TrainConfig::set_has_replicas_to_aggregate() {
  _has_bits_[0] |= 0x00040000u;
}
inline void TrainConfig::clear_has_replicas_to_aggregate() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void TrainConfig::clear_replicas_to_aggregate() {
  replicas_to_aggregate_ = 1;
  clear_has_replicas_to_aggregate();
}
inline ::google::protobuf::int32 TrainConfig::replicas_to_aggregate() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.replicas_to_aggregate)
  return replicas_to_aggregate_;
}
inline void TrainConfig::set_replicas_to_aggregate(::google::protobuf::int32 value) {
  set_has_replicas_to_aggregate();
  replicas_to_aggregate_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.replicas_to_aggregate)
}

// optional int32 batch_queue_capacity = 14 [default = 150, deprecated = true];
inline bool TrainConfig::has_batch_queue_capacity() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void TrainConfig::set_has_batch_queue_capacity() {
  _has_bits_[0] |= 0x00080000u;
}
inline void TrainConfig::clear_has_batch_queue_capacity() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void TrainConfig::clear_batch_queue_capacity() {
  batch_queue_capacity_ = 150;
  clear_has_batch_queue_capacity();
}
inline ::google::protobuf::int32 TrainConfig::batch_queue_capacity() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.batch_queue_capacity)
  return batch_queue_capacity_;
}
inline void TrainConfig::set_batch_queue_capacity(::google::protobuf::int32 value) {
  set_has_batch_queue_capacity();
  batch_queue_capacity_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.batch_queue_capacity)
}

// optional int32 num_batch_queue_threads = 15 [default = 8, deprecated = true];
inline bool TrainConfig::has_num_batch_queue_threads() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void TrainConfig::set_has_num_batch_queue_threads() {
  _has_bits_[0] |= 0x00100000u;
}
inline void TrainConfig::clear_has_num_batch_queue_threads() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void TrainConfig::clear_num_batch_queue_threads() {
  num_batch_queue_threads_ = 8;
  clear_has_num_batch_queue_threads();
}
inline ::google::protobuf::int32 TrainConfig::num_batch_queue_threads() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.num_batch_queue_threads)
  return num_batch_queue_threads_;
}
inline void TrainConfig::set_num_batch_queue_threads(::google::protobuf::int32 value) {
  set_has_num_batch_queue_threads();
  num_batch_queue_threads_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.num_batch_queue_threads)
}

// optional int32 prefetch_queue_capacity = 16 [default = 5, deprecated = true];
inline bool TrainConfig::has_prefetch_queue_capacity() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void TrainConfig::set_has_prefetch_queue_capacity() {
  _has_bits_[0] |= 0x00200000u;
}
inline void TrainConfig::clear_has_prefetch_queue_capacity() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void TrainConfig::clear_prefetch_queue_capacity() {
  prefetch_queue_capacity_ = 5;
  clear_has_prefetch_queue_capacity();
}
inline ::google::protobuf::int32 TrainConfig::prefetch_queue_capacity() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.prefetch_queue_capacity)
  return prefetch_queue_capacity_;
}
inline void TrainConfig::set_prefetch_queue_capacity(::google::protobuf::int32 value) {
  set_has_prefetch_queue_capacity();
  prefetch_queue_capacity_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.prefetch_queue_capacity)
}

// optional bool merge_multiple_label_boxes = 17 [default = false];
inline bool TrainConfig::has_merge_multiple_label_boxes() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TrainConfig::set_has_merge_multiple_label_boxes() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TrainConfig::clear_has_merge_multiple_label_boxes() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TrainConfig::clear_merge_multiple_label_boxes() {
  merge_multiple_label_boxes_ = false;
  clear_has_merge_multiple_label_boxes();
}
inline bool TrainConfig::merge_multiple_label_boxes() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.merge_multiple_label_boxes)
  return merge_multiple_label_boxes_;
}
inline void TrainConfig::set_merge_multiple_label_boxes(bool value) {
  set_has_merge_multiple_label_boxes();
  merge_multiple_label_boxes_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.merge_multiple_label_boxes)
}

// optional bool use_multiclass_scores = 24 [default = false];
inline bool TrainConfig::has_use_multiclass_scores() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TrainConfig::set_has_use_multiclass_scores() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TrainConfig::clear_has_use_multiclass_scores() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TrainConfig::clear_use_multiclass_scores() {
  use_multiclass_scores_ = false;
  clear_has_use_multiclass_scores();
}
inline bool TrainConfig::use_multiclass_scores() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.use_multiclass_scores)
  return use_multiclass_scores_;
}
inline void TrainConfig::set_use_multiclass_scores(bool value) {
  set_has_use_multiclass_scores();
  use_multiclass_scores_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.use_multiclass_scores)
}

// optional bool add_regularization_loss = 18 [default = true];
inline bool TrainConfig::has_add_regularization_loss() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void TrainConfig::set_has_add_regularization_loss() {
  _has_bits_[0] |= 0x00400000u;
}
inline void TrainConfig::clear_has_add_regularization_loss() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void TrainConfig::clear_add_regularization_loss() {
  add_regularization_loss_ = true;
  clear_has_add_regularization_loss();
}
inline bool TrainConfig::add_regularization_loss() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.add_regularization_loss)
  return add_regularization_loss_;
}
inline void TrainConfig::set_add_regularization_loss(bool value) {
  set_has_add_regularization_loss();
  add_regularization_loss_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.add_regularization_loss)
}

// optional int32 max_number_of_boxes = 20 [default = 100, deprecated = true];
inline bool TrainConfig::has_max_number_of_boxes() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TrainConfig::set_has_max_number_of_boxes() {
  _has_bits_[0] |= 0x00004000u;
}
inline void TrainConfig::clear_has_max_number_of_boxes() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void TrainConfig::clear_max_number_of_boxes() {
  max_number_of_boxes_ = 100;
  clear_has_max_number_of_boxes();
}
inline ::google::protobuf::int32 TrainConfig::max_number_of_boxes() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.max_number_of_boxes)
  return max_number_of_boxes_;
}
inline void TrainConfig::set_max_number_of_boxes(::google::protobuf::int32 value) {
  set_has_max_number_of_boxes();
  max_number_of_boxes_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.max_number_of_boxes)
}

// optional bool unpad_groundtruth_tensors = 21 [default = true];
inline bool TrainConfig::has_unpad_groundtruth_tensors() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void TrainConfig::set_has_unpad_groundtruth_tensors() {
  _has_bits_[0] |= 0x00800000u;
}
inline void TrainConfig::clear_has_unpad_groundtruth_tensors() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void TrainConfig::clear_unpad_groundtruth_tensors() {
  unpad_groundtruth_tensors_ = true;
  clear_has_unpad_groundtruth_tensors();
}
inline bool TrainConfig::unpad_groundtruth_tensors() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.unpad_groundtruth_tensors)
  return unpad_groundtruth_tensors_;
}
inline void TrainConfig::set_unpad_groundtruth_tensors(bool value) {
  set_has_unpad_groundtruth_tensors();
  unpad_groundtruth_tensors_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.unpad_groundtruth_tensors)
}

// optional bool retain_original_images = 23 [default = false];
inline bool TrainConfig::has_retain_original_images() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TrainConfig::set_has_retain_original_images() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TrainConfig::clear_has_retain_original_images() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TrainConfig::clear_retain_original_images() {
  retain_original_images_ = false;
  clear_has_retain_original_images();
}
inline bool TrainConfig::retain_original_images() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.retain_original_images)
  return retain_original_images_;
}
inline void TrainConfig::set_retain_original_images(bool value) {
  set_has_retain_original_images();
  retain_original_images_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.retain_original_images)
}

// optional bool use_bfloat16 = 26 [default = false];
inline bool TrainConfig::has_use_bfloat16() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TrainConfig::set_has_use_bfloat16() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TrainConfig::clear_has_use_bfloat16() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TrainConfig::clear_use_bfloat16() {
  use_bfloat16_ = false;
  clear_has_use_bfloat16();
}
inline bool TrainConfig::use_bfloat16() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.use_bfloat16)
  return use_bfloat16_;
}
inline void TrainConfig::set_use_bfloat16(bool value) {
  set_has_use_bfloat16();
  use_bfloat16_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.use_bfloat16)
}

// optional bool summarize_gradients = 27 [default = false];
inline bool TrainConfig::has_summarize_gradients() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TrainConfig::set_has_summarize_gradients() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TrainConfig::clear_has_summarize_gradients() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TrainConfig::clear_summarize_gradients() {
  summarize_gradients_ = false;
  clear_has_summarize_gradients();
}
inline bool TrainConfig::summarize_gradients() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.TrainConfig.summarize_gradients)
  return summarize_gradients_;
}
inline void TrainConfig::set_summarize_gradients(bool value) {
  set_has_summarize_gradients();
  summarize_gradients_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.TrainConfig.summarize_gradients)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_object_5fdetection_2fprotos_2ftrain_2eproto__INCLUDED
