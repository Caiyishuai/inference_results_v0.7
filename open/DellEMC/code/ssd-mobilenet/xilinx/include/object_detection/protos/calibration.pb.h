// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/calibration.proto

#ifndef PROTOBUF_object_5fdetection_2fprotos_2fcalibration_2eproto__INCLUDED
#define PROTOBUF_object_5fdetection_2fprotos_2fcalibration_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace object_detection {
namespace protos {
class CalibrationConfig;
class CalibrationConfigDefaultTypeInternal;
extern CalibrationConfigDefaultTypeInternal _CalibrationConfig_default_instance_;
class ClassIdFunctionApproximations;
class ClassIdFunctionApproximationsDefaultTypeInternal;
extern ClassIdFunctionApproximationsDefaultTypeInternal _ClassIdFunctionApproximations_default_instance_;
class ClassIdFunctionApproximations_ClassIdXyPairsMapEntry;
class ClassIdFunctionApproximations_ClassIdXyPairsMapEntryDefaultTypeInternal;
extern ClassIdFunctionApproximations_ClassIdXyPairsMapEntryDefaultTypeInternal _ClassIdFunctionApproximations_ClassIdXyPairsMapEntry_default_instance_;
class ClassIdSigmoidCalibrations;
class ClassIdSigmoidCalibrationsDefaultTypeInternal;
extern ClassIdSigmoidCalibrationsDefaultTypeInternal _ClassIdSigmoidCalibrations_default_instance_;
class ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry;
class ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntryDefaultTypeInternal;
extern ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntryDefaultTypeInternal _ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry_default_instance_;
class FunctionApproximation;
class FunctionApproximationDefaultTypeInternal;
extern FunctionApproximationDefaultTypeInternal _FunctionApproximation_default_instance_;
class SigmoidCalibration;
class SigmoidCalibrationDefaultTypeInternal;
extern SigmoidCalibrationDefaultTypeInternal _SigmoidCalibration_default_instance_;
class SigmoidParameters;
class SigmoidParametersDefaultTypeInternal;
extern SigmoidParametersDefaultTypeInternal _SigmoidParameters_default_instance_;
class XYPairs;
class XYPairsDefaultTypeInternal;
extern XYPairsDefaultTypeInternal _XYPairs_default_instance_;
class XYPairs_XYPair;
class XYPairs_XYPairDefaultTypeInternal;
extern XYPairs_XYPairDefaultTypeInternal _XYPairs_XYPair_default_instance_;
}  // namespace protos
}  // namespace object_detection

namespace object_detection {
namespace protos {

namespace protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto

enum TrainingDataType {
  DATA_TYPE_UNKNOWN = 0,
  ALL_CLASSES = 1,
  CLASS_SPECIFIC = 2
};
bool TrainingDataType_IsValid(int value);
const TrainingDataType TrainingDataType_MIN = DATA_TYPE_UNKNOWN;
const TrainingDataType TrainingDataType_MAX = CLASS_SPECIFIC;
const int TrainingDataType_ARRAYSIZE = TrainingDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TrainingDataType_descriptor();
inline const ::std::string& TrainingDataType_Name(TrainingDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TrainingDataType_descriptor(), value);
}
inline bool TrainingDataType_Parse(
    const ::std::string& name, TrainingDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrainingDataType>(
    TrainingDataType_descriptor(), name, value);
}
// ===================================================================

class CalibrationConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.CalibrationConfig) */ {
 public:
  CalibrationConfig();
  virtual ~CalibrationConfig();

  CalibrationConfig(const CalibrationConfig& from);

  inline CalibrationConfig& operator=(const CalibrationConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalibrationConfig(CalibrationConfig&& from) noexcept
    : CalibrationConfig() {
    *this = ::std::move(from);
  }

  inline CalibrationConfig& operator=(CalibrationConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalibrationConfig& default_instance();

  enum CalibratorCase {
    kFunctionApproximation = 1,
    kClassIdFunctionApproximations = 2,
    kSigmoidCalibration = 3,
    kClassIdSigmoidCalibrations = 4,
    CALIBRATOR_NOT_SET = 0,
  };

  static inline const CalibrationConfig* internal_default_instance() {
    return reinterpret_cast<const CalibrationConfig*>(
               &_CalibrationConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CalibrationConfig* other);
  friend void swap(CalibrationConfig& a, CalibrationConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalibrationConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  CalibrationConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalibrationConfig& from);
  void MergeFrom(const CalibrationConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalibrationConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .object_detection.protos.FunctionApproximation function_approximation = 1;
  bool has_function_approximation() const;
  void clear_function_approximation();
  static const int kFunctionApproximationFieldNumber = 1;
  const ::object_detection::protos::FunctionApproximation& function_approximation() const;
  ::object_detection::protos::FunctionApproximation* mutable_function_approximation();
  ::object_detection::protos::FunctionApproximation* release_function_approximation();
  void set_allocated_function_approximation(::object_detection::protos::FunctionApproximation* function_approximation);

  // optional .object_detection.protos.ClassIdFunctionApproximations class_id_function_approximations = 2;
  bool has_class_id_function_approximations() const;
  void clear_class_id_function_approximations();
  static const int kClassIdFunctionApproximationsFieldNumber = 2;
  const ::object_detection::protos::ClassIdFunctionApproximations& class_id_function_approximations() const;
  ::object_detection::protos::ClassIdFunctionApproximations* mutable_class_id_function_approximations();
  ::object_detection::protos::ClassIdFunctionApproximations* release_class_id_function_approximations();
  void set_allocated_class_id_function_approximations(::object_detection::protos::ClassIdFunctionApproximations* class_id_function_approximations);

  // optional .object_detection.protos.SigmoidCalibration sigmoid_calibration = 3;
  bool has_sigmoid_calibration() const;
  void clear_sigmoid_calibration();
  static const int kSigmoidCalibrationFieldNumber = 3;
  const ::object_detection::protos::SigmoidCalibration& sigmoid_calibration() const;
  ::object_detection::protos::SigmoidCalibration* mutable_sigmoid_calibration();
  ::object_detection::protos::SigmoidCalibration* release_sigmoid_calibration();
  void set_allocated_sigmoid_calibration(::object_detection::protos::SigmoidCalibration* sigmoid_calibration);

  // optional .object_detection.protos.ClassIdSigmoidCalibrations class_id_sigmoid_calibrations = 4;
  bool has_class_id_sigmoid_calibrations() const;
  void clear_class_id_sigmoid_calibrations();
  static const int kClassIdSigmoidCalibrationsFieldNumber = 4;
  const ::object_detection::protos::ClassIdSigmoidCalibrations& class_id_sigmoid_calibrations() const;
  ::object_detection::protos::ClassIdSigmoidCalibrations* mutable_class_id_sigmoid_calibrations();
  ::object_detection::protos::ClassIdSigmoidCalibrations* release_class_id_sigmoid_calibrations();
  void set_allocated_class_id_sigmoid_calibrations(::object_detection::protos::ClassIdSigmoidCalibrations* class_id_sigmoid_calibrations);

  CalibratorCase calibrator_case() const;
  // @@protoc_insertion_point(class_scope:object_detection.protos.CalibrationConfig)
 private:
  void set_has_function_approximation();
  void set_has_class_id_function_approximations();
  void set_has_sigmoid_calibration();
  void set_has_class_id_sigmoid_calibrations();

  inline bool has_calibrator() const;
  void clear_calibrator();
  inline void clear_has_calibrator();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  union CalibratorUnion {
    CalibratorUnion() {}
    ::object_detection::protos::FunctionApproximation* function_approximation_;
    ::object_detection::protos::ClassIdFunctionApproximations* class_id_function_approximations_;
    ::object_detection::protos::SigmoidCalibration* sigmoid_calibration_;
    ::object_detection::protos::ClassIdSigmoidCalibrations* class_id_sigmoid_calibrations_;
  } calibrator_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionApproximation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.FunctionApproximation) */ {
 public:
  FunctionApproximation();
  virtual ~FunctionApproximation();

  FunctionApproximation(const FunctionApproximation& from);

  inline FunctionApproximation& operator=(const FunctionApproximation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionApproximation(FunctionApproximation&& from) noexcept
    : FunctionApproximation() {
    *this = ::std::move(from);
  }

  inline FunctionApproximation& operator=(FunctionApproximation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionApproximation& default_instance();

  static inline const FunctionApproximation* internal_default_instance() {
    return reinterpret_cast<const FunctionApproximation*>(
               &_FunctionApproximation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FunctionApproximation* other);
  friend void swap(FunctionApproximation& a, FunctionApproximation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionApproximation* New() const PROTOBUF_FINAL { return New(NULL); }

  FunctionApproximation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FunctionApproximation& from);
  void MergeFrom(const FunctionApproximation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FunctionApproximation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .object_detection.protos.XYPairs x_y_pairs = 1;
  bool has_x_y_pairs() const;
  void clear_x_y_pairs();
  static const int kXYPairsFieldNumber = 1;
  const ::object_detection::protos::XYPairs& x_y_pairs() const;
  ::object_detection::protos::XYPairs* mutable_x_y_pairs();
  ::object_detection::protos::XYPairs* release_x_y_pairs();
  void set_allocated_x_y_pairs(::object_detection::protos::XYPairs* x_y_pairs);

  // @@protoc_insertion_point(class_scope:object_detection.protos.FunctionApproximation)
 private:
  void set_has_x_y_pairs();
  void clear_has_x_y_pairs();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::object_detection::protos::XYPairs* x_y_pairs_;
  friend struct protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ClassIdFunctionApproximations : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.ClassIdFunctionApproximations) */ {
 public:
  ClassIdFunctionApproximations();
  virtual ~ClassIdFunctionApproximations();

  ClassIdFunctionApproximations(const ClassIdFunctionApproximations& from);

  inline ClassIdFunctionApproximations& operator=(const ClassIdFunctionApproximations& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassIdFunctionApproximations(ClassIdFunctionApproximations&& from) noexcept
    : ClassIdFunctionApproximations() {
    *this = ::std::move(from);
  }

  inline ClassIdFunctionApproximations& operator=(ClassIdFunctionApproximations&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassIdFunctionApproximations& default_instance();

  static inline const ClassIdFunctionApproximations* internal_default_instance() {
    return reinterpret_cast<const ClassIdFunctionApproximations*>(
               &_ClassIdFunctionApproximations_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ClassIdFunctionApproximations* other);
  friend void swap(ClassIdFunctionApproximations& a, ClassIdFunctionApproximations& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassIdFunctionApproximations* New() const PROTOBUF_FINAL { return New(NULL); }

  ClassIdFunctionApproximations* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClassIdFunctionApproximations& from);
  void MergeFrom(const ClassIdFunctionApproximations& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClassIdFunctionApproximations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .object_detection.protos.XYPairs> class_id_xy_pairs_map = 1;
  int class_id_xy_pairs_map_size() const;
  void clear_class_id_xy_pairs_map();
  static const int kClassIdXyPairsMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >&
      class_id_xy_pairs_map() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >*
      mutable_class_id_xy_pairs_map();

  // @@protoc_insertion_point(class_scope:object_detection.protos.ClassIdFunctionApproximations)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  public:
  class ClassIdFunctionApproximations_ClassIdXyPairsMapEntry : public ::google::protobuf::internal::MapEntry<ClassIdFunctionApproximations_ClassIdXyPairsMapEntry, 
      ::google::protobuf::int32, ::object_detection::protos::XYPairs,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ClassIdFunctionApproximations_ClassIdXyPairsMapEntry, 
      ::google::protobuf::int32, ::object_detection::protos::XYPairs,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ClassIdFunctionApproximations_ClassIdXyPairsMapEntry();
    ClassIdFunctionApproximations_ClassIdXyPairsMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ClassIdFunctionApproximations_ClassIdXyPairsMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ClassIdFunctionApproximations_ClassIdXyPairsMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ClassIdFunctionApproximations_ClassIdXyPairsMapEntry,
      ::google::protobuf::int32, ::object_detection::protos::XYPairs,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > class_id_xy_pairs_map_;
  private:
  friend struct protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SigmoidCalibration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.SigmoidCalibration) */ {
 public:
  SigmoidCalibration();
  virtual ~SigmoidCalibration();

  SigmoidCalibration(const SigmoidCalibration& from);

  inline SigmoidCalibration& operator=(const SigmoidCalibration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SigmoidCalibration(SigmoidCalibration&& from) noexcept
    : SigmoidCalibration() {
    *this = ::std::move(from);
  }

  inline SigmoidCalibration& operator=(SigmoidCalibration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SigmoidCalibration& default_instance();

  static inline const SigmoidCalibration* internal_default_instance() {
    return reinterpret_cast<const SigmoidCalibration*>(
               &_SigmoidCalibration_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SigmoidCalibration* other);
  friend void swap(SigmoidCalibration& a, SigmoidCalibration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SigmoidCalibration* New() const PROTOBUF_FINAL { return New(NULL); }

  SigmoidCalibration* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SigmoidCalibration& from);
  void MergeFrom(const SigmoidCalibration& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SigmoidCalibration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .object_detection.protos.SigmoidParameters sigmoid_parameters = 1;
  bool has_sigmoid_parameters() const;
  void clear_sigmoid_parameters();
  static const int kSigmoidParametersFieldNumber = 1;
  const ::object_detection::protos::SigmoidParameters& sigmoid_parameters() const;
  ::object_detection::protos::SigmoidParameters* mutable_sigmoid_parameters();
  ::object_detection::protos::SigmoidParameters* release_sigmoid_parameters();
  void set_allocated_sigmoid_parameters(::object_detection::protos::SigmoidParameters* sigmoid_parameters);

  // @@protoc_insertion_point(class_scope:object_detection.protos.SigmoidCalibration)
 private:
  void set_has_sigmoid_parameters();
  void clear_has_sigmoid_parameters();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::object_detection::protos::SigmoidParameters* sigmoid_parameters_;
  friend struct protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ClassIdSigmoidCalibrations : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.ClassIdSigmoidCalibrations) */ {
 public:
  ClassIdSigmoidCalibrations();
  virtual ~ClassIdSigmoidCalibrations();

  ClassIdSigmoidCalibrations(const ClassIdSigmoidCalibrations& from);

  inline ClassIdSigmoidCalibrations& operator=(const ClassIdSigmoidCalibrations& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassIdSigmoidCalibrations(ClassIdSigmoidCalibrations&& from) noexcept
    : ClassIdSigmoidCalibrations() {
    *this = ::std::move(from);
  }

  inline ClassIdSigmoidCalibrations& operator=(ClassIdSigmoidCalibrations&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassIdSigmoidCalibrations& default_instance();

  static inline const ClassIdSigmoidCalibrations* internal_default_instance() {
    return reinterpret_cast<const ClassIdSigmoidCalibrations*>(
               &_ClassIdSigmoidCalibrations_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ClassIdSigmoidCalibrations* other);
  friend void swap(ClassIdSigmoidCalibrations& a, ClassIdSigmoidCalibrations& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassIdSigmoidCalibrations* New() const PROTOBUF_FINAL { return New(NULL); }

  ClassIdSigmoidCalibrations* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClassIdSigmoidCalibrations& from);
  void MergeFrom(const ClassIdSigmoidCalibrations& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClassIdSigmoidCalibrations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .object_detection.protos.SigmoidParameters> class_id_sigmoid_parameters_map = 1;
  int class_id_sigmoid_parameters_map_size() const;
  void clear_class_id_sigmoid_parameters_map();
  static const int kClassIdSigmoidParametersMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >&
      class_id_sigmoid_parameters_map() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >*
      mutable_class_id_sigmoid_parameters_map();

  // @@protoc_insertion_point(class_scope:object_detection.protos.ClassIdSigmoidCalibrations)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  public:
  class ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry : public ::google::protobuf::internal::MapEntry<ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry, 
      ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry, 
      ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry();
    ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ClassIdSigmoidCalibrations_ClassIdSigmoidParametersMapEntry,
      ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > class_id_sigmoid_parameters_map_;
  private:
  friend struct protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class XYPairs_XYPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.XYPairs.XYPair) */ {
 public:
  XYPairs_XYPair();
  virtual ~XYPairs_XYPair();

  XYPairs_XYPair(const XYPairs_XYPair& from);

  inline XYPairs_XYPair& operator=(const XYPairs_XYPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XYPairs_XYPair(XYPairs_XYPair&& from) noexcept
    : XYPairs_XYPair() {
    *this = ::std::move(from);
  }

  inline XYPairs_XYPair& operator=(XYPairs_XYPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XYPairs_XYPair& default_instance();

  static inline const XYPairs_XYPair* internal_default_instance() {
    return reinterpret_cast<const XYPairs_XYPair*>(
               &_XYPairs_XYPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(XYPairs_XYPair* other);
  friend void swap(XYPairs_XYPair& a, XYPairs_XYPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XYPairs_XYPair* New() const PROTOBUF_FINAL { return New(NULL); }

  XYPairs_XYPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XYPairs_XYPair& from);
  void MergeFrom(const XYPairs_XYPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XYPairs_XYPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:object_detection.protos.XYPairs.XYPair)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float x_;
  float y_;
  friend struct protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class XYPairs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.XYPairs) */ {
 public:
  XYPairs();
  virtual ~XYPairs();

  XYPairs(const XYPairs& from);

  inline XYPairs& operator=(const XYPairs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XYPairs(XYPairs&& from) noexcept
    : XYPairs() {
    *this = ::std::move(from);
  }

  inline XYPairs& operator=(XYPairs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XYPairs& default_instance();

  static inline const XYPairs* internal_default_instance() {
    return reinterpret_cast<const XYPairs*>(
               &_XYPairs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XYPairs* other);
  friend void swap(XYPairs& a, XYPairs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XYPairs* New() const PROTOBUF_FINAL { return New(NULL); }

  XYPairs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XYPairs& from);
  void MergeFrom(const XYPairs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XYPairs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef XYPairs_XYPair XYPair;

  // accessors -------------------------------------------------------

  // repeated .object_detection.protos.XYPairs.XYPair x_y_pair = 1;
  int x_y_pair_size() const;
  void clear_x_y_pair();
  static const int kXYPairFieldNumber = 1;
  const ::object_detection::protos::XYPairs_XYPair& x_y_pair(int index) const;
  ::object_detection::protos::XYPairs_XYPair* mutable_x_y_pair(int index);
  ::object_detection::protos::XYPairs_XYPair* add_x_y_pair();
  ::google::protobuf::RepeatedPtrField< ::object_detection::protos::XYPairs_XYPair >*
      mutable_x_y_pair();
  const ::google::protobuf::RepeatedPtrField< ::object_detection::protos::XYPairs_XYPair >&
      x_y_pair() const;

  // optional .object_detection.protos.TrainingDataType training_data_type = 2;
  bool has_training_data_type() const;
  void clear_training_data_type();
  static const int kTrainingDataTypeFieldNumber = 2;
  ::object_detection::protos::TrainingDataType training_data_type() const;
  void set_training_data_type(::object_detection::protos::TrainingDataType value);

  // @@protoc_insertion_point(class_scope:object_detection.protos.XYPairs)
 private:
  void set_has_training_data_type();
  void clear_has_training_data_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::object_detection::protos::XYPairs_XYPair > x_y_pair_;
  int training_data_type_;
  friend struct protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SigmoidParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.SigmoidParameters) */ {
 public:
  SigmoidParameters();
  virtual ~SigmoidParameters();

  SigmoidParameters(const SigmoidParameters& from);

  inline SigmoidParameters& operator=(const SigmoidParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SigmoidParameters(SigmoidParameters&& from) noexcept
    : SigmoidParameters() {
    *this = ::std::move(from);
  }

  inline SigmoidParameters& operator=(SigmoidParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SigmoidParameters& default_instance();

  static inline const SigmoidParameters* internal_default_instance() {
    return reinterpret_cast<const SigmoidParameters*>(
               &_SigmoidParameters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SigmoidParameters* other);
  friend void swap(SigmoidParameters& a, SigmoidParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SigmoidParameters* New() const PROTOBUF_FINAL { return New(NULL); }

  SigmoidParameters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SigmoidParameters& from);
  void MergeFrom(const SigmoidParameters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SigmoidParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float b = 2 [default = 0];
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 2;
  float b() const;
  void set_b(float value);

  // optional float a = 1 [default = -1];
  bool has_a() const;
  void clear_a();
  static const int kAFieldNumber = 1;
  float a() const;
  void set_a(float value);

  // @@protoc_insertion_point(class_scope:object_detection.protos.SigmoidParameters)
 private:
  void set_has_a();
  void clear_has_a();
  void set_has_b();
  void clear_has_b();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float b_;
  float a_;
  friend struct protobuf_object_5fdetection_2fprotos_2fcalibration_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CalibrationConfig

// optional .object_detection.protos.FunctionApproximation function_approximation = 1;
inline bool CalibrationConfig::has_function_approximation() const {
  return calibrator_case() == kFunctionApproximation;
}
inline void CalibrationConfig::set_has_function_approximation() {
  _oneof_case_[0] = kFunctionApproximation;
}
inline void CalibrationConfig::clear_function_approximation() {
  if (has_function_approximation()) {
    delete calibrator_.function_approximation_;
    clear_has_calibrator();
  }
}
inline  const ::object_detection::protos::FunctionApproximation& CalibrationConfig::function_approximation() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.CalibrationConfig.function_approximation)
  return has_function_approximation()
      ? *calibrator_.function_approximation_
      : ::object_detection::protos::FunctionApproximation::default_instance();
}
inline ::object_detection::protos::FunctionApproximation* CalibrationConfig::mutable_function_approximation() {
  if (!has_function_approximation()) {
    clear_calibrator();
    set_has_function_approximation();
    calibrator_.function_approximation_ = new ::object_detection::protos::FunctionApproximation;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.CalibrationConfig.function_approximation)
  return calibrator_.function_approximation_;
}
inline ::object_detection::protos::FunctionApproximation* CalibrationConfig::release_function_approximation() {
  // @@protoc_insertion_point(field_release:object_detection.protos.CalibrationConfig.function_approximation)
  if (has_function_approximation()) {
    clear_has_calibrator();
    ::object_detection::protos::FunctionApproximation* temp = calibrator_.function_approximation_;
    calibrator_.function_approximation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CalibrationConfig::set_allocated_function_approximation(::object_detection::protos::FunctionApproximation* function_approximation) {
  clear_calibrator();
  if (function_approximation) {
    set_has_function_approximation();
    calibrator_.function_approximation_ = function_approximation;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.CalibrationConfig.function_approximation)
}

// optional .object_detection.protos.ClassIdFunctionApproximations class_id_function_approximations = 2;
inline bool CalibrationConfig::has_class_id_function_approximations() const {
  return calibrator_case() == kClassIdFunctionApproximations;
}
inline void CalibrationConfig::set_has_class_id_function_approximations() {
  _oneof_case_[0] = kClassIdFunctionApproximations;
}
inline void CalibrationConfig::clear_class_id_function_approximations() {
  if (has_class_id_function_approximations()) {
    delete calibrator_.class_id_function_approximations_;
    clear_has_calibrator();
  }
}
inline  const ::object_detection::protos::ClassIdFunctionApproximations& CalibrationConfig::class_id_function_approximations() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.CalibrationConfig.class_id_function_approximations)
  return has_class_id_function_approximations()
      ? *calibrator_.class_id_function_approximations_
      : ::object_detection::protos::ClassIdFunctionApproximations::default_instance();
}
inline ::object_detection::protos::ClassIdFunctionApproximations* CalibrationConfig::mutable_class_id_function_approximations() {
  if (!has_class_id_function_approximations()) {
    clear_calibrator();
    set_has_class_id_function_approximations();
    calibrator_.class_id_function_approximations_ = new ::object_detection::protos::ClassIdFunctionApproximations;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.CalibrationConfig.class_id_function_approximations)
  return calibrator_.class_id_function_approximations_;
}
inline ::object_detection::protos::ClassIdFunctionApproximations* CalibrationConfig::release_class_id_function_approximations() {
  // @@protoc_insertion_point(field_release:object_detection.protos.CalibrationConfig.class_id_function_approximations)
  if (has_class_id_function_approximations()) {
    clear_has_calibrator();
    ::object_detection::protos::ClassIdFunctionApproximations* temp = calibrator_.class_id_function_approximations_;
    calibrator_.class_id_function_approximations_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CalibrationConfig::set_allocated_class_id_function_approximations(::object_detection::protos::ClassIdFunctionApproximations* class_id_function_approximations) {
  clear_calibrator();
  if (class_id_function_approximations) {
    set_has_class_id_function_approximations();
    calibrator_.class_id_function_approximations_ = class_id_function_approximations;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.CalibrationConfig.class_id_function_approximations)
}

// optional .object_detection.protos.SigmoidCalibration sigmoid_calibration = 3;
inline bool CalibrationConfig::has_sigmoid_calibration() const {
  return calibrator_case() == kSigmoidCalibration;
}
inline void CalibrationConfig::set_has_sigmoid_calibration() {
  _oneof_case_[0] = kSigmoidCalibration;
}
inline void CalibrationConfig::clear_sigmoid_calibration() {
  if (has_sigmoid_calibration()) {
    delete calibrator_.sigmoid_calibration_;
    clear_has_calibrator();
  }
}
inline  const ::object_detection::protos::SigmoidCalibration& CalibrationConfig::sigmoid_calibration() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.CalibrationConfig.sigmoid_calibration)
  return has_sigmoid_calibration()
      ? *calibrator_.sigmoid_calibration_
      : ::object_detection::protos::SigmoidCalibration::default_instance();
}
inline ::object_detection::protos::SigmoidCalibration* CalibrationConfig::mutable_sigmoid_calibration() {
  if (!has_sigmoid_calibration()) {
    clear_calibrator();
    set_has_sigmoid_calibration();
    calibrator_.sigmoid_calibration_ = new ::object_detection::protos::SigmoidCalibration;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.CalibrationConfig.sigmoid_calibration)
  return calibrator_.sigmoid_calibration_;
}
inline ::object_detection::protos::SigmoidCalibration* CalibrationConfig::release_sigmoid_calibration() {
  // @@protoc_insertion_point(field_release:object_detection.protos.CalibrationConfig.sigmoid_calibration)
  if (has_sigmoid_calibration()) {
    clear_has_calibrator();
    ::object_detection::protos::SigmoidCalibration* temp = calibrator_.sigmoid_calibration_;
    calibrator_.sigmoid_calibration_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CalibrationConfig::set_allocated_sigmoid_calibration(::object_detection::protos::SigmoidCalibration* sigmoid_calibration) {
  clear_calibrator();
  if (sigmoid_calibration) {
    set_has_sigmoid_calibration();
    calibrator_.sigmoid_calibration_ = sigmoid_calibration;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.CalibrationConfig.sigmoid_calibration)
}

// optional .object_detection.protos.ClassIdSigmoidCalibrations class_id_sigmoid_calibrations = 4;
inline bool CalibrationConfig::has_class_id_sigmoid_calibrations() const {
  return calibrator_case() == kClassIdSigmoidCalibrations;
}
inline void CalibrationConfig::set_has_class_id_sigmoid_calibrations() {
  _oneof_case_[0] = kClassIdSigmoidCalibrations;
}
inline void CalibrationConfig::clear_class_id_sigmoid_calibrations() {
  if (has_class_id_sigmoid_calibrations()) {
    delete calibrator_.class_id_sigmoid_calibrations_;
    clear_has_calibrator();
  }
}
inline  const ::object_detection::protos::ClassIdSigmoidCalibrations& CalibrationConfig::class_id_sigmoid_calibrations() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.CalibrationConfig.class_id_sigmoid_calibrations)
  return has_class_id_sigmoid_calibrations()
      ? *calibrator_.class_id_sigmoid_calibrations_
      : ::object_detection::protos::ClassIdSigmoidCalibrations::default_instance();
}
inline ::object_detection::protos::ClassIdSigmoidCalibrations* CalibrationConfig::mutable_class_id_sigmoid_calibrations() {
  if (!has_class_id_sigmoid_calibrations()) {
    clear_calibrator();
    set_has_class_id_sigmoid_calibrations();
    calibrator_.class_id_sigmoid_calibrations_ = new ::object_detection::protos::ClassIdSigmoidCalibrations;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.CalibrationConfig.class_id_sigmoid_calibrations)
  return calibrator_.class_id_sigmoid_calibrations_;
}
inline ::object_detection::protos::ClassIdSigmoidCalibrations* CalibrationConfig::release_class_id_sigmoid_calibrations() {
  // @@protoc_insertion_point(field_release:object_detection.protos.CalibrationConfig.class_id_sigmoid_calibrations)
  if (has_class_id_sigmoid_calibrations()) {
    clear_has_calibrator();
    ::object_detection::protos::ClassIdSigmoidCalibrations* temp = calibrator_.class_id_sigmoid_calibrations_;
    calibrator_.class_id_sigmoid_calibrations_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CalibrationConfig::set_allocated_class_id_sigmoid_calibrations(::object_detection::protos::ClassIdSigmoidCalibrations* class_id_sigmoid_calibrations) {
  clear_calibrator();
  if (class_id_sigmoid_calibrations) {
    set_has_class_id_sigmoid_calibrations();
    calibrator_.class_id_sigmoid_calibrations_ = class_id_sigmoid_calibrations;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.CalibrationConfig.class_id_sigmoid_calibrations)
}

inline bool CalibrationConfig::has_calibrator() const {
  return calibrator_case() != CALIBRATOR_NOT_SET;
}
inline void CalibrationConfig::clear_has_calibrator() {
  _oneof_case_[0] = CALIBRATOR_NOT_SET;
}
inline CalibrationConfig::CalibratorCase CalibrationConfig::calibrator_case() const {
  return CalibrationConfig::CalibratorCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// FunctionApproximation

// optional .object_detection.protos.XYPairs x_y_pairs = 1;
inline bool FunctionApproximation::has_x_y_pairs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionApproximation::set_has_x_y_pairs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionApproximation::clear_has_x_y_pairs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionApproximation::clear_x_y_pairs() {
  if (x_y_pairs_ != NULL) x_y_pairs_->::object_detection::protos::XYPairs::Clear();
  clear_has_x_y_pairs();
}
inline const ::object_detection::protos::XYPairs& FunctionApproximation::x_y_pairs() const {
  const ::object_detection::protos::XYPairs* p = x_y_pairs_;
  // @@protoc_insertion_point(field_get:object_detection.protos.FunctionApproximation.x_y_pairs)
  return p != NULL ? *p : *reinterpret_cast<const ::object_detection::protos::XYPairs*>(
      &::object_detection::protos::_XYPairs_default_instance_);
}
inline ::object_detection::protos::XYPairs* FunctionApproximation::mutable_x_y_pairs() {
  set_has_x_y_pairs();
  if (x_y_pairs_ == NULL) {
    x_y_pairs_ = new ::object_detection::protos::XYPairs;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FunctionApproximation.x_y_pairs)
  return x_y_pairs_;
}
inline ::object_detection::protos::XYPairs* FunctionApproximation::release_x_y_pairs() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FunctionApproximation.x_y_pairs)
  clear_has_x_y_pairs();
  ::object_detection::protos::XYPairs* temp = x_y_pairs_;
  x_y_pairs_ = NULL;
  return temp;
}
inline void FunctionApproximation::set_allocated_x_y_pairs(::object_detection::protos::XYPairs* x_y_pairs) {
  delete x_y_pairs_;
  x_y_pairs_ = x_y_pairs;
  if (x_y_pairs) {
    set_has_x_y_pairs();
  } else {
    clear_has_x_y_pairs();
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FunctionApproximation.x_y_pairs)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ClassIdFunctionApproximations

// map<int32, .object_detection.protos.XYPairs> class_id_xy_pairs_map = 1;
inline int ClassIdFunctionApproximations::class_id_xy_pairs_map_size() const {
  return class_id_xy_pairs_map_.size();
}
inline void ClassIdFunctionApproximations::clear_class_id_xy_pairs_map() {
  class_id_xy_pairs_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >&
ClassIdFunctionApproximations::class_id_xy_pairs_map() const {
  // @@protoc_insertion_point(field_map:object_detection.protos.ClassIdFunctionApproximations.class_id_xy_pairs_map)
  return class_id_xy_pairs_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::XYPairs >*
ClassIdFunctionApproximations::mutable_class_id_xy_pairs_map() {
  // @@protoc_insertion_point(field_mutable_map:object_detection.protos.ClassIdFunctionApproximations.class_id_xy_pairs_map)
  return class_id_xy_pairs_map_.MutableMap();
}

// -------------------------------------------------------------------

// SigmoidCalibration

// optional .object_detection.protos.SigmoidParameters sigmoid_parameters = 1;
inline bool SigmoidCalibration::has_sigmoid_parameters() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SigmoidCalibration::set_has_sigmoid_parameters() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SigmoidCalibration::clear_has_sigmoid_parameters() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SigmoidCalibration::clear_sigmoid_parameters() {
  if (sigmoid_parameters_ != NULL) sigmoid_parameters_->::object_detection::protos::SigmoidParameters::Clear();
  clear_has_sigmoid_parameters();
}
inline const ::object_detection::protos::SigmoidParameters& SigmoidCalibration::sigmoid_parameters() const {
  const ::object_detection::protos::SigmoidParameters* p = sigmoid_parameters_;
  // @@protoc_insertion_point(field_get:object_detection.protos.SigmoidCalibration.sigmoid_parameters)
  return p != NULL ? *p : *reinterpret_cast<const ::object_detection::protos::SigmoidParameters*>(
      &::object_detection::protos::_SigmoidParameters_default_instance_);
}
inline ::object_detection::protos::SigmoidParameters* SigmoidCalibration::mutable_sigmoid_parameters() {
  set_has_sigmoid_parameters();
  if (sigmoid_parameters_ == NULL) {
    sigmoid_parameters_ = new ::object_detection::protos::SigmoidParameters;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.SigmoidCalibration.sigmoid_parameters)
  return sigmoid_parameters_;
}
inline ::object_detection::protos::SigmoidParameters* SigmoidCalibration::release_sigmoid_parameters() {
  // @@protoc_insertion_point(field_release:object_detection.protos.SigmoidCalibration.sigmoid_parameters)
  clear_has_sigmoid_parameters();
  ::object_detection::protos::SigmoidParameters* temp = sigmoid_parameters_;
  sigmoid_parameters_ = NULL;
  return temp;
}
inline void SigmoidCalibration::set_allocated_sigmoid_parameters(::object_detection::protos::SigmoidParameters* sigmoid_parameters) {
  delete sigmoid_parameters_;
  sigmoid_parameters_ = sigmoid_parameters;
  if (sigmoid_parameters) {
    set_has_sigmoid_parameters();
  } else {
    clear_has_sigmoid_parameters();
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.SigmoidCalibration.sigmoid_parameters)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ClassIdSigmoidCalibrations

// map<int32, .object_detection.protos.SigmoidParameters> class_id_sigmoid_parameters_map = 1;
inline int ClassIdSigmoidCalibrations::class_id_sigmoid_parameters_map_size() const {
  return class_id_sigmoid_parameters_map_.size();
}
inline void ClassIdSigmoidCalibrations::clear_class_id_sigmoid_parameters_map() {
  class_id_sigmoid_parameters_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >&
ClassIdSigmoidCalibrations::class_id_sigmoid_parameters_map() const {
  // @@protoc_insertion_point(field_map:object_detection.protos.ClassIdSigmoidCalibrations.class_id_sigmoid_parameters_map)
  return class_id_sigmoid_parameters_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::object_detection::protos::SigmoidParameters >*
ClassIdSigmoidCalibrations::mutable_class_id_sigmoid_parameters_map() {
  // @@protoc_insertion_point(field_mutable_map:object_detection.protos.ClassIdSigmoidCalibrations.class_id_sigmoid_parameters_map)
  return class_id_sigmoid_parameters_map_.MutableMap();
}

// -------------------------------------------------------------------

// XYPairs_XYPair

// optional float x = 1;
inline bool XYPairs_XYPair::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XYPairs_XYPair::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XYPairs_XYPair::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XYPairs_XYPair::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float XYPairs_XYPair::x() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.XYPairs.XYPair.x)
  return x_;
}
inline void XYPairs_XYPair::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.XYPairs.XYPair.x)
}

// optional float y = 2;
inline bool XYPairs_XYPair::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XYPairs_XYPair::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XYPairs_XYPair::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XYPairs_XYPair::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float XYPairs_XYPair::y() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.XYPairs.XYPair.y)
  return y_;
}
inline void XYPairs_XYPair::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.XYPairs.XYPair.y)
}

// -------------------------------------------------------------------

// XYPairs

// repeated .object_detection.protos.XYPairs.XYPair x_y_pair = 1;
inline int XYPairs::x_y_pair_size() const {
  return x_y_pair_.size();
}
inline void XYPairs::clear_x_y_pair() {
  x_y_pair_.Clear();
}
inline const ::object_detection::protos::XYPairs_XYPair& XYPairs::x_y_pair(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.XYPairs.x_y_pair)
  return x_y_pair_.Get(index);
}
inline ::object_detection::protos::XYPairs_XYPair* XYPairs::mutable_x_y_pair(int index) {
  // @@protoc_insertion_point(field_mutable:object_detection.protos.XYPairs.x_y_pair)
  return x_y_pair_.Mutable(index);
}
inline ::object_detection::protos::XYPairs_XYPair* XYPairs::add_x_y_pair() {
  // @@protoc_insertion_point(field_add:object_detection.protos.XYPairs.x_y_pair)
  return x_y_pair_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::object_detection::protos::XYPairs_XYPair >*
XYPairs::mutable_x_y_pair() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.XYPairs.x_y_pair)
  return &x_y_pair_;
}
inline const ::google::protobuf::RepeatedPtrField< ::object_detection::protos::XYPairs_XYPair >&
XYPairs::x_y_pair() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.XYPairs.x_y_pair)
  return x_y_pair_;
}

// optional .object_detection.protos.TrainingDataType training_data_type = 2;
inline bool XYPairs::has_training_data_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XYPairs::set_has_training_data_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XYPairs::clear_has_training_data_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XYPairs::clear_training_data_type() {
  training_data_type_ = 0;
  clear_has_training_data_type();
}
inline ::object_detection::protos::TrainingDataType XYPairs::training_data_type() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.XYPairs.training_data_type)
  return static_cast< ::object_detection::protos::TrainingDataType >(training_data_type_);
}
inline void XYPairs::set_training_data_type(::object_detection::protos::TrainingDataType value) {
  assert(::object_detection::protos::TrainingDataType_IsValid(value));
  set_has_training_data_type();
  training_data_type_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.XYPairs.training_data_type)
}

// -------------------------------------------------------------------

// SigmoidParameters

// optional float a = 1 [default = -1];
inline bool SigmoidParameters::has_a() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SigmoidParameters::set_has_a() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SigmoidParameters::clear_has_a() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SigmoidParameters::clear_a() {
  a_ = -1;
  clear_has_a();
}
inline float SigmoidParameters::a() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.SigmoidParameters.a)
  return a_;
}
inline void SigmoidParameters::set_a(float value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.SigmoidParameters.a)
}

// optional float b = 2 [default = 0];
inline bool SigmoidParameters::has_b() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SigmoidParameters::set_has_b() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SigmoidParameters::clear_has_b() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SigmoidParameters::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline float SigmoidParameters::b() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.SigmoidParameters.b)
  return b_;
}
inline void SigmoidParameters::set_b(float value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.SigmoidParameters.b)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace object_detection

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::object_detection::protos::TrainingDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::object_detection::protos::TrainingDataType>() {
  return ::object_detection::protos::TrainingDataType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_object_5fdetection_2fprotos_2fcalibration_2eproto__INCLUDED
