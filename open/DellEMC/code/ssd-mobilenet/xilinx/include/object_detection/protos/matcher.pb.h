// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/matcher.proto

#ifndef PROTOBUF_object_5fdetection_2fprotos_2fmatcher_2eproto__INCLUDED
#define PROTOBUF_object_5fdetection_2fprotos_2fmatcher_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "object_detection/protos/argmax_matcher.pb.h"
#include "object_detection/protos/bipartite_matcher.pb.h"
// @@protoc_insertion_point(includes)
namespace object_detection {
namespace protos {
class Matcher;
class MatcherDefaultTypeInternal;
extern MatcherDefaultTypeInternal _Matcher_default_instance_;
}  // namespace protos
}  // namespace object_detection

namespace object_detection {
namespace protos {

namespace protobuf_object_5fdetection_2fprotos_2fmatcher_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_object_5fdetection_2fprotos_2fmatcher_2eproto

// ===================================================================

class Matcher : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.Matcher) */ {
 public:
  Matcher();
  virtual ~Matcher();

  Matcher(const Matcher& from);

  inline Matcher& operator=(const Matcher& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Matcher(Matcher&& from) noexcept
    : Matcher() {
    *this = ::std::move(from);
  }

  inline Matcher& operator=(Matcher&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Matcher& default_instance();

  enum MatcherOneofCase {
    kArgmaxMatcher = 1,
    kBipartiteMatcher = 2,
    MATCHER_ONEOF_NOT_SET = 0,
  };

  static inline const Matcher* internal_default_instance() {
    return reinterpret_cast<const Matcher*>(
               &_Matcher_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Matcher* other);
  friend void swap(Matcher& a, Matcher& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Matcher* New() const PROTOBUF_FINAL { return New(NULL); }

  Matcher* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Matcher& from);
  void MergeFrom(const Matcher& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Matcher* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .object_detection.protos.ArgMaxMatcher argmax_matcher = 1;
  bool has_argmax_matcher() const;
  void clear_argmax_matcher();
  static const int kArgmaxMatcherFieldNumber = 1;
  const ::object_detection::protos::ArgMaxMatcher& argmax_matcher() const;
  ::object_detection::protos::ArgMaxMatcher* mutable_argmax_matcher();
  ::object_detection::protos::ArgMaxMatcher* release_argmax_matcher();
  void set_allocated_argmax_matcher(::object_detection::protos::ArgMaxMatcher* argmax_matcher);

  // optional .object_detection.protos.BipartiteMatcher bipartite_matcher = 2;
  bool has_bipartite_matcher() const;
  void clear_bipartite_matcher();
  static const int kBipartiteMatcherFieldNumber = 2;
  const ::object_detection::protos::BipartiteMatcher& bipartite_matcher() const;
  ::object_detection::protos::BipartiteMatcher* mutable_bipartite_matcher();
  ::object_detection::protos::BipartiteMatcher* release_bipartite_matcher();
  void set_allocated_bipartite_matcher(::object_detection::protos::BipartiteMatcher* bipartite_matcher);

  MatcherOneofCase matcher_oneof_case() const;
  // @@protoc_insertion_point(class_scope:object_detection.protos.Matcher)
 private:
  void set_has_argmax_matcher();
  void set_has_bipartite_matcher();

  inline bool has_matcher_oneof() const;
  void clear_matcher_oneof();
  inline void clear_has_matcher_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  union MatcherOneofUnion {
    MatcherOneofUnion() {}
    ::object_detection::protos::ArgMaxMatcher* argmax_matcher_;
    ::object_detection::protos::BipartiteMatcher* bipartite_matcher_;
  } matcher_oneof_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_object_5fdetection_2fprotos_2fmatcher_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Matcher

// optional .object_detection.protos.ArgMaxMatcher argmax_matcher = 1;
inline bool Matcher::has_argmax_matcher() const {
  return matcher_oneof_case() == kArgmaxMatcher;
}
inline void Matcher::set_has_argmax_matcher() {
  _oneof_case_[0] = kArgmaxMatcher;
}
inline void Matcher::clear_argmax_matcher() {
  if (has_argmax_matcher()) {
    delete matcher_oneof_.argmax_matcher_;
    clear_has_matcher_oneof();
  }
}
inline  const ::object_detection::protos::ArgMaxMatcher& Matcher::argmax_matcher() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.Matcher.argmax_matcher)
  return has_argmax_matcher()
      ? *matcher_oneof_.argmax_matcher_
      : ::object_detection::protos::ArgMaxMatcher::default_instance();
}
inline ::object_detection::protos::ArgMaxMatcher* Matcher::mutable_argmax_matcher() {
  if (!has_argmax_matcher()) {
    clear_matcher_oneof();
    set_has_argmax_matcher();
    matcher_oneof_.argmax_matcher_ = new ::object_detection::protos::ArgMaxMatcher;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.Matcher.argmax_matcher)
  return matcher_oneof_.argmax_matcher_;
}
inline ::object_detection::protos::ArgMaxMatcher* Matcher::release_argmax_matcher() {
  // @@protoc_insertion_point(field_release:object_detection.protos.Matcher.argmax_matcher)
  if (has_argmax_matcher()) {
    clear_has_matcher_oneof();
    ::object_detection::protos::ArgMaxMatcher* temp = matcher_oneof_.argmax_matcher_;
    matcher_oneof_.argmax_matcher_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Matcher::set_allocated_argmax_matcher(::object_detection::protos::ArgMaxMatcher* argmax_matcher) {
  clear_matcher_oneof();
  if (argmax_matcher) {
    set_has_argmax_matcher();
    matcher_oneof_.argmax_matcher_ = argmax_matcher;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.Matcher.argmax_matcher)
}

// optional .object_detection.protos.BipartiteMatcher bipartite_matcher = 2;
inline bool Matcher::has_bipartite_matcher() const {
  return matcher_oneof_case() == kBipartiteMatcher;
}
inline void Matcher::set_has_bipartite_matcher() {
  _oneof_case_[0] = kBipartiteMatcher;
}
inline void Matcher::clear_bipartite_matcher() {
  if (has_bipartite_matcher()) {
    delete matcher_oneof_.bipartite_matcher_;
    clear_has_matcher_oneof();
  }
}
inline  const ::object_detection::protos::BipartiteMatcher& Matcher::bipartite_matcher() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.Matcher.bipartite_matcher)
  return has_bipartite_matcher()
      ? *matcher_oneof_.bipartite_matcher_
      : ::object_detection::protos::BipartiteMatcher::default_instance();
}
inline ::object_detection::protos::BipartiteMatcher* Matcher::mutable_bipartite_matcher() {
  if (!has_bipartite_matcher()) {
    clear_matcher_oneof();
    set_has_bipartite_matcher();
    matcher_oneof_.bipartite_matcher_ = new ::object_detection::protos::BipartiteMatcher;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.Matcher.bipartite_matcher)
  return matcher_oneof_.bipartite_matcher_;
}
inline ::object_detection::protos::BipartiteMatcher* Matcher::release_bipartite_matcher() {
  // @@protoc_insertion_point(field_release:object_detection.protos.Matcher.bipartite_matcher)
  if (has_bipartite_matcher()) {
    clear_has_matcher_oneof();
    ::object_detection::protos::BipartiteMatcher* temp = matcher_oneof_.bipartite_matcher_;
    matcher_oneof_.bipartite_matcher_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Matcher::set_allocated_bipartite_matcher(::object_detection::protos::BipartiteMatcher* bipartite_matcher) {
  clear_matcher_oneof();
  if (bipartite_matcher) {
    set_has_bipartite_matcher();
    matcher_oneof_.bipartite_matcher_ = bipartite_matcher;
  }
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.Matcher.bipartite_matcher)
}

inline bool Matcher::has_matcher_oneof() const {
  return matcher_oneof_case() != MATCHER_ONEOF_NOT_SET;
}
inline void Matcher::clear_has_matcher_oneof() {
  _oneof_case_[0] = MATCHER_ONEOF_NOT_SET;
}
inline Matcher::MatcherOneofCase Matcher::matcher_oneof_case() const {
  return Matcher::MatcherOneofCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_object_5fdetection_2fprotos_2fmatcher_2eproto__INCLUDED
