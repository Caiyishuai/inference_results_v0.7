// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dpu_model_param.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dpu_model_param.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace vitis {
namespace ai {
namespace proto {
class YoloV3ParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<YoloV3Param>
     _instance;
} _YoloV3Param_default_instance_;
class PriorBoxParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PriorBoxParam>
     _instance;
} _PriorBoxParam_default_instance_;
class SSDParam_OutputInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SSDParam_OutputInfo>
     _instance;
} _SSDParam_OutputInfo_default_instance_;
class SSDParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SSDParam>
     _instance;
} _SSDParam_default_instance_;
class RefineDetParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RefineDetParam>
     _instance;
} _RefineDetParam_default_instance_;
class ClassificationParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClassificationParam>
     _instance;
} _ClassificationParam_default_instance_;
class DenseBoxParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DenseBoxParam>
     _instance;
} _DenseBoxParam_default_instance_;
class MultiTaskParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MultiTaskParam>
     _instance;
} _MultiTaskParam_default_instance_;
class RoadlineParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RoadlineParam>
     _instance;
} _RoadlineParam_default_instance_;
class RoadlineDeephiParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RoadlineDeephiParam>
     _instance;
} _RoadlineDeephiParam_default_instance_;
class SegmentationParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SegmentationParam>
     _instance;
} _SegmentationParam_default_instance_;
class LaneParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LaneParam>
     _instance;
} _LaneParam_default_instance_;
class BlinkerParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlinkerParam>
     _instance;
} _BlinkerParam_default_instance_;
class SegdetParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SegdetParam>
     _instance;
} _SegdetParam_default_instance_;
class FaceQuality5ptParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FaceQuality5ptParam>
     _instance;
} _FaceQuality5ptParam_default_instance_;
class DpuKernelParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DpuKernelParam>
     _instance;
} _DpuKernelParam_default_instance_;
class TfssdParam_OutputInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TfssdParam_OutputInfo>
     _instance;
} _TfssdParam_OutputInfo_default_instance_;
class TfssdParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TfssdParam>
     _instance;
} _TfssdParam_default_instance_;
class DpuModelParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DpuModelParam>
     _instance;
} _DpuModelParam_default_instance_;
class DpuModelParamListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DpuModelParamList>
     _instance;
} _DpuModelParamList_default_instance_;
class FaceFixFeatureDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FaceFixFeature>
     _instance;
} _FaceFixFeature_default_instance_;
class FaceFloatFeatureDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FaceFloatFeature>
     _instance;
} _FaceFloatFeature_default_instance_;
class AttributeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Attribute>
     _instance;
} _Attribute_default_instance_;
class PointDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Point>
     _instance;
} _Point_default_instance_;
class BoundingBoxDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BoundingBox>
     _instance;
} _BoundingBox_default_instance_;
class AttributeResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AttributeResult>
     _instance;
} _AttributeResult_default_instance_;
class LandmarkResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LandmarkResult>
     _instance;
} _LandmarkResult_default_instance_;
class DetectResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DetectResult>
     _instance;
} _DetectResult_default_instance_;
class RefineDetResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RefineDetResult>
     _instance;
} _RefineDetResult_default_instance_;
class LineAttDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LineAtt>
     _instance;
} _LineAtt_default_instance_;
class RoadlineResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RoadlineResult>
     _instance;
} _RoadlineResult_default_instance_;
class ScoreDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Score>
     _instance;
} _Score_default_instance_;
class ClassificationResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClassificationResult>
     _instance;
} _ClassificationResult_default_instance_;
class DpuModelResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DpuModelResult>
     _instance;
  const ::vitis::ai::proto::LandmarkResult* landmark_result_;
  const ::vitis::ai::proto::DetectResult* detect_result_;
  const ::vitis::ai::proto::AttributeResult* attribute_result_;
  const ::vitis::ai::proto::RefineDetResult* refine_det_result_;
  const ::vitis::ai::proto::ClassificationResult* classification_result_;
  const ::vitis::ai::proto::RoadlineResult* roadline_result_;
} _DpuModelResult_default_instance_;

namespace protobuf_dpu_5fmodel_5fparam_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[34];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoloV3Param, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoloV3Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoloV3Param, num_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoloV3Param, anchorcnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoloV3Param, conf_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoloV3Param, nms_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoloV3Param, biases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoloV3Param, test_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoloV3Param, layer_name_),
  0,
  1,
  2,
  3,
  ~0u,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, layer_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, layer_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, variances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, min_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, max_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, aspect_ratios_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, step_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, step_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, flip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorBoxParam, clip_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam_OutputInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam_OutputInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam_OutputInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam_OutputInfo, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam_OutputInfo, name_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, prior_box_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, num_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, nms_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, conf_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, keep_top_k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, top_k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, is_mlperf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, bbox_layer_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSDParam, output_info_),
  ~0u,
  0,
  1,
  ~0u,
  2,
  3,
  4,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetParam, prior_box_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetParam, num_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetParam, nms_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetParam, conf_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetParam, keep_top_k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetParam, top_k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetParam, layer_name_),
  ~0u,
  0,
  1,
  ~0u,
  2,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassificationParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassificationParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassificationParam, top_k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassificationParam, test_accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassificationParam, preprocess_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassificationParam, layer_name_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseBoxParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseBoxParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseBoxParam, num_of_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseBoxParam, nms_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseBoxParam, det_threshold_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, th_conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, num_of_detection_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, num_of_segmentation_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, keep_top_k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, top_k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, nms_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, prior_box_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, loc_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, conf_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiTaskParam, seg_name_),
  ~0u,
  3,
  4,
  5,
  6,
  7,
  ~0u,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, ipm_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, ipm_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, ipm_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, ipm_right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, ipm_top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, ipm_bottom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, ipm_interpolation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, ipm_vp_portion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, focal_length_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, focal_length_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, optical_center_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, optical_center_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, camera_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineParam, layer_name_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineDeephiParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineDeephiParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineDeephiParam, resize_w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineDeephiParam, resize_h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineDeephiParam, crop_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineDeephiParam, crop_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineDeephiParam, crop_w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineDeephiParam, crop_h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineDeephiParam, area_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineDeephiParam, epow_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentationParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentationParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentationParam, color1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentationParam, color2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentationParam, color3_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneParam, roi_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneParam, roi_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneParam, expect_height_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlinkerParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlinkerParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlinkerParam, prior_box_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlinkerParam, num_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlinkerParam, nms_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlinkerParam, conf_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlinkerParam, keep_top_k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlinkerParam, top_k_),
  ~0u,
  0,
  1,
  ~0u,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegdetParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegdetParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegdetParam, prior_box_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegdetParam, num_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegdetParam, nms_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegdetParam, conf_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegdetParam, keep_top_k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegdetParam, top_k_),
  ~0u,
  0,
  1,
  ~0u,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceQuality5ptParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceQuality5ptParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceQuality5ptParam, use_day_night_mode_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuKernelParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuKernelParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuKernelParam, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuKernelParam, mean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuKernelParam, scale_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TfssdParam_OutputInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TfssdParam_OutputInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TfssdParam_OutputInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TfssdParam_OutputInfo, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TfssdParam_OutputInfo, name_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TfssdParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TfssdParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TfssdParam, output_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TfssdParam, feature_map_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TfssdParam, official_cfg_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, kernel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, model_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, refine_det_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, yolo_v3_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, ssd_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, classification_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, dense_box_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, multi_task_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, roadline_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, segmentation_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, lane_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, blinker_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, segdet_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, roadline_dp_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, is_tf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, face_quality5pt_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParam, tfssd_param_),
  0,
  ~0u,
  15,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  16,
  13,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParamList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParamList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelParamList, model_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceFixFeature, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceFixFeature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceFixFeature, feature_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceFloatFeature, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceFloatFeature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceFloatFeature, feature_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attribute, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attribute, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attribute, score_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoundingBox, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoundingBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoundingBox, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoundingBox, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoundingBox, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoundingBox, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoundingBox, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoundingBox, height_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeResult, attribute_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LandmarkResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LandmarkResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LandmarkResult, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LandmarkResult, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LandmarkResult, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LandmarkResult, age_),
  0,
  ~0u,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectResult, bounding_box_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineDetResult, bounding_box_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineAtt, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineAtt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineAtt, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineAtt, point_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoadlineResult, line_att_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Score, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Score, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Score, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Score, score_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassificationResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassificationResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassificationResult, score_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelResult, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelResult, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(DpuModelResultDefaultTypeInternal, landmark_result_),
  offsetof(DpuModelResultDefaultTypeInternal, detect_result_),
  offsetof(DpuModelResultDefaultTypeInternal, attribute_result_),
  offsetof(DpuModelResultDefaultTypeInternal, refine_det_result_),
  offsetof(DpuModelResultDefaultTypeInternal, classification_result_),
  offsetof(DpuModelResultDefaultTypeInternal, roadline_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DpuModelResult, dpu_model_result_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(YoloV3Param)},
  { 19, 35, sizeof(PriorBoxParam)},
  { 46, 54, sizeof(SSDParam_OutputInfo)},
  { 57, 71, sizeof(SSDParam)},
  { 80, 92, sizeof(RefineDetParam)},
  { 99, 108, sizeof(ClassificationParam)},
  { 112, 120, sizeof(DenseBoxParam)},
  { 123, 138, sizeof(MultiTaskParam)},
  { 148, 170, sizeof(RoadlineParam)},
  { 187, 200, sizeof(RoadlineDeephiParam)},
  { 208, 216, sizeof(SegmentationParam)},
  { 219, 227, sizeof(LaneParam)},
  { 230, 241, sizeof(BlinkerParam)},
  { 247, 258, sizeof(SegdetParam)},
  { 264, 270, sizeof(FaceQuality5ptParam)},
  { 271, 279, sizeof(DpuKernelParam)},
  { 282, 290, sizeof(TfssdParam_OutputInfo)},
  { 293, 301, sizeof(TfssdParam)},
  { 304, 327, sizeof(DpuModelParam)},
  { 345, 351, sizeof(DpuModelParamList)},
  { 352, 358, sizeof(FaceFixFeature)},
  { 359, 365, sizeof(FaceFloatFeature)},
  { 366, 374, sizeof(Attribute)},
  { 377, 384, sizeof(Point)},
  { 386, 397, sizeof(BoundingBox)},
  { 403, 409, sizeof(AttributeResult)},
  { 410, 419, sizeof(LandmarkResult)},
  { 423, 429, sizeof(DetectResult)},
  { 430, 436, sizeof(RefineDetResult)},
  { 437, 444, sizeof(LineAtt)},
  { 446, 452, sizeof(RoadlineResult)},
  { 453, 460, sizeof(Score)},
  { 462, 468, sizeof(ClassificationResult)},
  { 469, 481, sizeof(DpuModelResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_YoloV3Param_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PriorBoxParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SSDParam_OutputInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SSDParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RefineDetParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClassificationParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DenseBoxParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MultiTaskParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoadlineParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoadlineDeephiParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SegmentationParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LaneParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlinkerParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SegdetParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FaceQuality5ptParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DpuKernelParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TfssdParam_OutputInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TfssdParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DpuModelParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DpuModelParamList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FaceFixFeature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FaceFloatFeature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Attribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BoundingBox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AttributeResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LandmarkResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DetectResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RefineDetResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LineAtt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoadlineResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Score_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClassificationResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DpuModelResult_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dpu_model_param.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 34);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _YoloV3Param_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_YoloV3Param_default_instance_);_PriorBoxParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PriorBoxParam_default_instance_);_SSDParam_OutputInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SSDParam_OutputInfo_default_instance_);_SSDParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SSDParam_default_instance_);_RefineDetParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RefineDetParam_default_instance_);_ClassificationParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClassificationParam_default_instance_);_DenseBoxParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DenseBoxParam_default_instance_);_MultiTaskParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MultiTaskParam_default_instance_);_RoadlineParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RoadlineParam_default_instance_);_RoadlineDeephiParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RoadlineDeephiParam_default_instance_);_SegmentationParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SegmentationParam_default_instance_);_LaneParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LaneParam_default_instance_);_BlinkerParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlinkerParam_default_instance_);_SegdetParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SegdetParam_default_instance_);_FaceQuality5ptParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FaceQuality5ptParam_default_instance_);_DpuKernelParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DpuKernelParam_default_instance_);_TfssdParam_OutputInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TfssdParam_OutputInfo_default_instance_);_TfssdParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TfssdParam_default_instance_);_DpuModelParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DpuModelParam_default_instance_);_DpuModelParamList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DpuModelParamList_default_instance_);_FaceFixFeature_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FaceFixFeature_default_instance_);_FaceFloatFeature_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FaceFloatFeature_default_instance_);_Attribute_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Attribute_default_instance_);_Point_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Point_default_instance_);_BoundingBox_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BoundingBox_default_instance_);_AttributeResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AttributeResult_default_instance_);_LandmarkResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LandmarkResult_default_instance_);_DetectResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DetectResult_default_instance_);_RefineDetResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RefineDetResult_default_instance_);_LineAtt_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LineAtt_default_instance_);_RoadlineResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RoadlineResult_default_instance_);_Score_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Score_default_instance_);_ClassificationResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClassificationResult_default_instance_);_DpuModelResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DpuModelResult_default_instance_);_DpuModelParam_default_instance_._instance.get_mutable()->refine_det_param_ = const_cast< ::vitis::ai::proto::RefineDetParam*>(
      ::vitis::ai::proto::RefineDetParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->yolo_v3_param_ = const_cast< ::vitis::ai::proto::YoloV3Param*>(
      ::vitis::ai::proto::YoloV3Param::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->ssd_param_ = const_cast< ::vitis::ai::proto::SSDParam*>(
      ::vitis::ai::proto::SSDParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->classification_param_ = const_cast< ::vitis::ai::proto::ClassificationParam*>(
      ::vitis::ai::proto::ClassificationParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->dense_box_param_ = const_cast< ::vitis::ai::proto::DenseBoxParam*>(
      ::vitis::ai::proto::DenseBoxParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->multi_task_param_ = const_cast< ::vitis::ai::proto::MultiTaskParam*>(
      ::vitis::ai::proto::MultiTaskParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->roadline_param_ = const_cast< ::vitis::ai::proto::RoadlineParam*>(
      ::vitis::ai::proto::RoadlineParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->segmentation_param_ = const_cast< ::vitis::ai::proto::SegmentationParam*>(
      ::vitis::ai::proto::SegmentationParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->lane_param_ = const_cast< ::vitis::ai::proto::LaneParam*>(
      ::vitis::ai::proto::LaneParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->blinker_param_ = const_cast< ::vitis::ai::proto::BlinkerParam*>(
      ::vitis::ai::proto::BlinkerParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->segdet_param_ = const_cast< ::vitis::ai::proto::SegdetParam*>(
      ::vitis::ai::proto::SegdetParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->roadline_dp_param_ = const_cast< ::vitis::ai::proto::RoadlineDeephiParam*>(
      ::vitis::ai::proto::RoadlineDeephiParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->face_quality5pt_param_ = const_cast< ::vitis::ai::proto::FaceQuality5ptParam*>(
      ::vitis::ai::proto::FaceQuality5ptParam::internal_default_instance());
  _DpuModelParam_default_instance_._instance.get_mutable()->tfssd_param_ = const_cast< ::vitis::ai::proto::TfssdParam*>(
      ::vitis::ai::proto::TfssdParam::internal_default_instance());
  _DpuModelResult_default_instance_.landmark_result_ = const_cast< ::vitis::ai::proto::LandmarkResult*>(
      ::vitis::ai::proto::LandmarkResult::internal_default_instance());
  _DpuModelResult_default_instance_.detect_result_ = const_cast< ::vitis::ai::proto::DetectResult*>(
      ::vitis::ai::proto::DetectResult::internal_default_instance());
  _DpuModelResult_default_instance_.attribute_result_ = const_cast< ::vitis::ai::proto::AttributeResult*>(
      ::vitis::ai::proto::AttributeResult::internal_default_instance());
  _DpuModelResult_default_instance_.refine_det_result_ = const_cast< ::vitis::ai::proto::RefineDetResult*>(
      ::vitis::ai::proto::RefineDetResult::internal_default_instance());
  _DpuModelResult_default_instance_.classification_result_ = const_cast< ::vitis::ai::proto::ClassificationResult*>(
      ::vitis::ai::proto::ClassificationResult::internal_default_instance());
  _DpuModelResult_default_instance_.roadline_result_ = const_cast< ::vitis::ai::proto::RoadlineResult*>(
      ::vitis::ai::proto::RoadlineResult::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025dpu_model_param.proto\022\016vitis.ai.proto\""
      "\232\001\n\013YoloV3Param\022\023\n\013num_classes\030\001 \001(\005\022\021\n\t"
      "anchorCnt\030\002 \001(\005\022\026\n\016conf_threshold\030\003 \001(\002\022"
      "\025\n\rnms_threshold\030\004 \001(\002\022\016\n\006biases\030\005 \003(\002\022\020"
      "\n\010test_mAP\030\006 \001(\010\022\022\n\nlayer_name\030\007 \003(\t\"\337\001\n"
      "\rPriorBoxParam\022\023\n\013layer_width\030\001 \001(\005\022\024\n\014l"
      "ayer_height\030\002 \001(\005\022\021\n\tvariances\030\004 \003(\002\022\021\n\t"
      "min_sizes\030\005 \003(\002\022\021\n\tmax_sizes\030\006 \003(\002\022\025\n\ras"
      "pect_ratios\030\007 \003(\002\022\016\n\006offset\030\010 \001(\002\022\022\n\nste"
      "p_width\030\t \001(\002\022\023\n\013step_height\030\n \001(\002\022\014\n\004fl"
      "ip\030\013 \001(\010\022\014\n\004clip\030\014 \001(\010\"\235\003\n\010SSDParam\0226\n\017p"
      "rior_box_param\030\001 \003(\0132\035.vitis.ai.proto.Pr"
      "iorBoxParam\022\023\n\013num_classes\030\002 \001(\005\022\025\n\rnms_"
      "threshold\030\003 \001(\002\022\026\n\016conf_threshold\030\004 \003(\002\022"
      "\022\n\nkeep_top_k\030\005 \001(\005\022\r\n\005top_k\030\006 \001(\005\022\021\n\tis"
      "_mlperf\030\007 \001(\010\022\030\n\020bbox_layer_index\030\010 \003(\005\022"
      "8\n\013output_info\030\t \003(\0132#.vitis.ai.proto.SS"
      "DParam.OutputInfo\032\\\n\nOutputInfo\0221\n\004type\030"
      "\001 \001(\0162#.vitis.ai.proto.SSDParam.OutputTy"
      "pe\022\r\n\005order\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\"-\n\nOutpu"
      "tType\022\013\n\007USELESS\020\000\022\010\n\004CONF\020\001\022\010\n\004BBOX\020\002\"\303"
      "\001\n\016RefineDetParam\0226\n\017prior_box_param\030\001 \003"
      "(\0132\035.vitis.ai.proto.PriorBoxParam\022\023\n\013num"
      "_classes\030\002 \001(\005\022\025\n\rnms_threshold\030\003 \001(\002\022\026\n"
      "\016conf_threshold\030\004 \003(\002\022\022\n\nkeep_top_k\030\005 \001("
      "\005\022\r\n\005top_k\030\006 \001(\005\022\022\n\nlayer_name\030\007 \003(\t\"\371\001\n"
      "\023ClassificationParam\022\r\n\005top_k\030\001 \001(\005\022\025\n\rt"
      "est_accuracy\030\002 \001(\010\022K\n\017preprocess_type\030\003 "
      "\001(\01622.vitis.ai.proto.ClassificationParam"
      ".PreprocessType\022\022\n\nlayer_name\030\004 \001(\t\"[\n\016P"
      "reprocessType\022\020\n\014UNKNOWN_TYPE\020\000\022\t\n\005CAFFE"
      "\020\001\022\022\n\016VGG_PREPROCESS\020\002\022\030\n\024INCEPTION_PREP"
      "ROCESS\020\003\"U\n\rDenseBoxParam\022\026\n\016num_of_clas"
      "ses\030\001 \001(\005\022\025\n\rnms_threshold\030\002 \001(\002\022\025\n\rdet_"
      "threshold\030\003 \001(\002\"\221\002\n\016MultiTaskParam\022\017\n\007th"
      "_conf\030\001 \003(\002\022 \n\030num_of_detection_classes\030"
      "\002 \001(\005\022#\n\033num_of_segmentation_classes\030\003 \001"
      "(\005\022\022\n\nkeep_top_k\030\004 \001(\005\022\r\n\005top_k\030\005 \001(\005\022\025\n"
      "\rnms_threshold\030\006 \001(\002\0226\n\017prior_box_param\030"
      "\007 \003(\0132\035.vitis.ai.proto.PriorBoxParam\022\020\n\010"
      "loc_name\030\010 \001(\t\022\021\n\tconf_name\030\t \001(\t\022\020\n\010seg"
      "_name\030\n \001(\t\"\355\002\n\rRoadlineParam\022\r\n\005ratio\030\001"
      " \001(\005\022\021\n\tipm_width\030\002 \001(\002\022\022\n\nipm_height\030\003 "
      "\001(\002\022\020\n\010ipm_left\030\004 \001(\002\022\021\n\tipm_right\030\005 \001(\002"
      "\022\017\n\007ipm_top\030\006 \001(\002\022\022\n\nipm_bottom\030\007 \001(\002\022\031\n"
      "\021ipm_interpolation\030\010 \001(\002\022\026\n\016ipm_vp_porti"
      "on\030\t \001(\002\022\026\n\016focal_length_x\030\n \001(\002\022\026\n\016foca"
      "l_length_y\030\013 \001(\002\022\030\n\020optical_center_x\030\014 \001"
      "(\002\022\030\n\020optical_center_y\030\r \001(\002\022\025\n\rcamera_h"
      "eight\030\016 \001(\002\022\r\n\005pitch\030\017 \001(\002\022\013\n\003yaw\030\020 \001(\002\022"
      "\022\n\nlayer_name\030\021 \003(\t\"\237\001\n\023RoadlineDeephiPa"
      "ram\022\020\n\010resize_w\030\001 \001(\005\022\020\n\010resize_h\030\002 \001(\005\022"
      "\016\n\006crop_x\030\003 \001(\005\022\016\n\006crop_y\030\004 \001(\005\022\016\n\006crop_"
      "w\030\005 \001(\005\022\016\n\006crop_h\030\006 \001(\005\022\026\n\016area_threshol"
      "d\030\007 \001(\005\022\014\n\004epow\030\010 \001(\005\"C\n\021SegmentationPar"
      "am\022\016\n\006color1\030\001 \001(\t\022\016\n\006color2\030\002 \001(\t\022\016\n\006co"
      "lor3\030\003 \001(\t\"@\n\tLaneParam\022\r\n\005roi_x\030\001 \001(\005\022\r"
      "\n\005roi_y\030\002 \001(\005\022\025\n\rexpect_height\030\003 \001(\005\"\255\001\n"
      "\014BlinkerParam\0226\n\017prior_box_param\030\001 \003(\0132\035"
      ".vitis.ai.proto.PriorBoxParam\022\023\n\013num_cla"
      "sses\030\002 \001(\005\022\025\n\rnms_threshold\030\003 \001(\002\022\026\n\016con"
      "f_threshold\030\004 \003(\002\022\022\n\nkeep_top_k\030\005 \001(\005\022\r\n"
      "\005top_k\030\006 \001(\005\"\254\001\n\013SegdetParam\0226\n\017prior_bo"
      "x_param\030\001 \003(\0132\035.vitis.ai.proto.PriorBoxP"
      "aram\022\023\n\013num_classes\030\002 \001(\005\022\025\n\rnms_thresho"
      "ld\030\003 \001(\002\022\026\n\016conf_threshold\030\004 \003(\002\022\022\n\nkeep"
      "_top_k\030\005 \001(\005\022\r\n\005top_k\030\006 \001(\005\"1\n\023FaceQuali"
      "ty5ptParam\022\032\n\022use_day_night_mode\030\001 \001(\010\";"
      "\n\016DpuKernelParam\022\014\n\004name\030\001 \001(\t\022\014\n\004mean\030\002"
      " \003(\002\022\r\n\005scale\030\003 \003(\002\"\207\002\n\nTfssdParam\022:\n\013ou"
      "tput_info\030\001 \003(\0132%.vitis.ai.proto.TfssdPa"
      "ram.OutputInfo\022\030\n\020feature_map_list\030\002 \003(\005"
      "\022\024\n\014official_cfg\030\003 \001(\t\032^\n\nOutputInfo\0223\n\004"
      "type\030\001 \001(\0162%.vitis.ai.proto.TfssdParam.O"
      "utputType\022\r\n\005order\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\"-"
      "\n\nOutputType\022\013\n\007USELESS\020\000\022\010\n\004CONF\020\001\022\010\n\004B"
      "BOX\020\002\"\266\t\n\rDpuModelParam\022\014\n\004name\030\001 \001(\t\022.\n"
      "\006kernel\030\002 \003(\0132\036.vitis.ai.proto.DpuKernel"
      "Param\022;\n\nmodel_type\030\003 \001(\0162\'.vitis.ai.pro"
      "to.DpuModelParam.ModelType\0228\n\020refine_det"
      "_param\030\004 \001(\0132\036.vitis.ai.proto.RefineDetP"
      "aram\0222\n\ryolo_v3_param\030\005 \001(\0132\033.vitis.ai.p"
      "roto.YoloV3Param\022+\n\tssd_param\030\006 \001(\0132\030.vi"
      "tis.ai.proto.SSDParam\022A\n\024classification_"
      "param\030\007 \001(\0132#.vitis.ai.proto.Classificat"
      "ionParam\0226\n\017dense_box_param\030\010 \001(\0132\035.viti"
      "s.ai.proto.DenseBoxParam\0228\n\020multi_task_p"
      "aram\030\t \001(\0132\036.vitis.ai.proto.MultiTaskPar"
      "am\0225\n\016roadline_param\030\n \001(\0132\035.vitis.ai.pr"
      "oto.RoadlineParam\022=\n\022segmentation_param\030"
      "\013 \001(\0132!.vitis.ai.proto.SegmentationParam"
      "\022-\n\nlane_param\030\014 \001(\0132\031.vitis.ai.proto.La"
      "neParam\0223\n\rblinker_param\030\r \001(\0132\034.vitis.a"
      "i.proto.BlinkerParam\0221\n\014segdet_param\030\016 \001"
      "(\0132\033.vitis.ai.proto.SegdetParam\022>\n\021roadl"
      "ine_dp_param\030\017 \001(\0132#.vitis.ai.proto.Road"
      "lineDeephiParam\022\r\n\005is_tf\030\020 \001(\010\022B\n\025face_q"
      "uality5pt_param\030\021 \001(\0132#.vitis.ai.proto.F"
      "aceQuality5ptParam\022/\n\013tfssd_param\030\022 \001(\0132"
      "\032.vitis.ai.proto.TfssdParam\"\210\002\n\tModelTyp"
      "e\022\020\n\014UNKNOWN_TYPE\020\000\022\r\n\tREFINEDET\020\001\022\007\n\003SS"
      "D\020\002\022\n\n\006YOLOv3\020\003\022\022\n\016CLASSIFICATION\020\004\022\r\n\tD"
      "ENSE_BOX\020\005\022\016\n\nMULTI_TASK\020\006\022\014\n\010OPENPOSE\020\007"
      "\022\014\n\010ROADLINE\020\010\022\020\n\014SEGMENTATION\020\t\022\016\n\nPOSE"
      "DETECT\020\n\022\010\n\004LANE\020\013\022\013\n\007BLINKER\020\014\022\n\n\006SEGDE"
      "T\020\r\022\023\n\017ROADLINE_DEEPHI\020\016\022\022\n\016FACEQUALITY5"
      "PT\020\017\022\010\n\004REID\020\020\"A\n\021DpuModelParamList\022,\n\005m"
      "odel\030\001 \003(\0132\035.vitis.ai.proto.DpuModelPara"
      "m\"!\n\016FaceFixFeature\022\017\n\007feature\030\001 \003(\005\"#\n\020"
      "FaceFloatFeature\022\017\n\007feature\030\001 \003(\002\"8\n\tAtt"
      "ribute\022\r\n\005label\030\001 \001(\t\022\r\n\005value\030\002 \001(\r\022\r\n\005"
      "score\030\003 \001(\002\"\035\n\005Point\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001"
      "(\002\"`\n\013BoundingBox\022\r\n\005label\030\001 \001(\r\022\r\n\005scor"
      "e\030\002 \001(\002\022\t\n\001x\030\003 \001(\002\022\t\n\001y\030\004 \001(\002\022\r\n\005width\030\005"
      " \001(\002\022\016\n\006height\030\006 \001(\002\"\?\n\017AttributeResult\022"
      ",\n\tattribute\030\001 \003(\0132\031.vitis.ai.proto.Attr"
      "ibute\"b\n\016LandmarkResult\022\r\n\005score\030\001 \001(\002\022$"
      "\n\005point\030\002 \003(\0132\025.vitis.ai.proto.Point\022\016\n\006"
      "gender\030\003 \001(\r\022\013\n\003age\030\004 \001(\r\"A\n\014DetectResul"
      "t\0221\n\014bounding_box\030\001 \003(\0132\033.vitis.ai.proto"
      ".BoundingBox\"D\n\017RefineDetResult\0221\n\014bound"
      "ing_box\030\001 \003(\0132\033.vitis.ai.proto.BoundingB"
      "ox\"=\n\007LineAtt\022\014\n\004type\030\001 \001(\r\022$\n\005point\030\002 \003"
      "(\0132\025.vitis.ai.proto.Point\";\n\016RoadlineRes"
      "ult\022)\n\010line_att\030\001 \003(\0132\027.vitis.ai.proto.L"
      "ineAtt\"%\n\005Score\022\r\n\005index\030\001 \001(\005\022\r\n\005score\030"
      "\002 \001(\002\"<\n\024ClassificationResult\022$\n\005score\030\001"
      " \003(\0132\025.vitis.ai.proto.Score\"\223\003\n\016DpuModel"
      "Result\0229\n\017landmark_result\030\001 \001(\0132\036.vitis."
      "ai.proto.LandmarkResultH\000\0225\n\rdetect_resu"
      "lt\030\002 \001(\0132\034.vitis.ai.proto.DetectResultH\000"
      "\022;\n\020attribute_result\030\003 \001(\0132\037.vitis.ai.pr"
      "oto.AttributeResultH\000\022<\n\021refine_det_resu"
      "lt\030\004 \001(\0132\037.vitis.ai.proto.RefineDetResul"
      "tH\000\022E\n\025classification_result\030\005 \001(\0132$.vit"
      "is.ai.proto.ClassificationResultH\000\0229\n\017ro"
      "adline_result\030\006 \001(\0132\036.vitis.ai.proto.Roa"
      "dlineResultH\000B\022\n\020dpu_model_result"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5513);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dpu_model_param.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_dpu_5fmodel_5fparam_2eproto

const ::google::protobuf::EnumDescriptor* SSDParam_OutputType_descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_enum_descriptors[0];
}
bool SSDParam_OutputType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SSDParam_OutputType SSDParam::USELESS;
const SSDParam_OutputType SSDParam::CONF;
const SSDParam_OutputType SSDParam::BBOX;
const SSDParam_OutputType SSDParam::OutputType_MIN;
const SSDParam_OutputType SSDParam::OutputType_MAX;
const int SSDParam::OutputType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClassificationParam_PreprocessType_descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_enum_descriptors[1];
}
bool ClassificationParam_PreprocessType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClassificationParam_PreprocessType ClassificationParam::UNKNOWN_TYPE;
const ClassificationParam_PreprocessType ClassificationParam::CAFFE;
const ClassificationParam_PreprocessType ClassificationParam::VGG_PREPROCESS;
const ClassificationParam_PreprocessType ClassificationParam::INCEPTION_PREPROCESS;
const ClassificationParam_PreprocessType ClassificationParam::PreprocessType_MIN;
const ClassificationParam_PreprocessType ClassificationParam::PreprocessType_MAX;
const int ClassificationParam::PreprocessType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TfssdParam_OutputType_descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_enum_descriptors[2];
}
bool TfssdParam_OutputType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TfssdParam_OutputType TfssdParam::USELESS;
const TfssdParam_OutputType TfssdParam::CONF;
const TfssdParam_OutputType TfssdParam::BBOX;
const TfssdParam_OutputType TfssdParam::OutputType_MIN;
const TfssdParam_OutputType TfssdParam::OutputType_MAX;
const int TfssdParam::OutputType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DpuModelParam_ModelType_descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_enum_descriptors[3];
}
bool DpuModelParam_ModelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DpuModelParam_ModelType DpuModelParam::UNKNOWN_TYPE;
const DpuModelParam_ModelType DpuModelParam::REFINEDET;
const DpuModelParam_ModelType DpuModelParam::SSD;
const DpuModelParam_ModelType DpuModelParam::YOLOv3;
const DpuModelParam_ModelType DpuModelParam::CLASSIFICATION;
const DpuModelParam_ModelType DpuModelParam::DENSE_BOX;
const DpuModelParam_ModelType DpuModelParam::MULTI_TASK;
const DpuModelParam_ModelType DpuModelParam::OPENPOSE;
const DpuModelParam_ModelType DpuModelParam::ROADLINE;
const DpuModelParam_ModelType DpuModelParam::SEGMENTATION;
const DpuModelParam_ModelType DpuModelParam::POSEDETECT;
const DpuModelParam_ModelType DpuModelParam::LANE;
const DpuModelParam_ModelType DpuModelParam::BLINKER;
const DpuModelParam_ModelType DpuModelParam::SEGDET;
const DpuModelParam_ModelType DpuModelParam::ROADLINE_DEEPHI;
const DpuModelParam_ModelType DpuModelParam::FACEQUALITY5PT;
const DpuModelParam_ModelType DpuModelParam::REID;
const DpuModelParam_ModelType DpuModelParam::ModelType_MIN;
const DpuModelParam_ModelType DpuModelParam::ModelType_MAX;
const int DpuModelParam::ModelType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YoloV3Param::kNumClassesFieldNumber;
const int YoloV3Param::kAnchorCntFieldNumber;
const int YoloV3Param::kConfThresholdFieldNumber;
const int YoloV3Param::kNmsThresholdFieldNumber;
const int YoloV3Param::kBiasesFieldNumber;
const int YoloV3Param::kTestMAPFieldNumber;
const int YoloV3Param::kLayerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YoloV3Param::YoloV3Param()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.YoloV3Param)
}
YoloV3Param::YoloV3Param(const YoloV3Param& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      biases_(from.biases_),
      layer_name_(from.layer_name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_classes_, &from.num_classes_,
    static_cast<size_t>(reinterpret_cast<char*>(&test_map_) -
    reinterpret_cast<char*>(&num_classes_)) + sizeof(test_map_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.YoloV3Param)
}

void YoloV3Param::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&num_classes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_map_) -
      reinterpret_cast<char*>(&num_classes_)) + sizeof(test_map_));
}

YoloV3Param::~YoloV3Param() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.YoloV3Param)
  SharedDtor();
}

void YoloV3Param::SharedDtor() {
}

void YoloV3Param::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YoloV3Param::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YoloV3Param& YoloV3Param::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

YoloV3Param* YoloV3Param::New(::google::protobuf::Arena* arena) const {
  YoloV3Param* n = new YoloV3Param;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YoloV3Param::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.YoloV3Param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  biases_.Clear();
  layer_name_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&num_classes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&test_map_) -
        reinterpret_cast<char*>(&num_classes_)) + sizeof(test_map_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool YoloV3Param::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.YoloV3Param)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_classes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_num_classes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_classes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 anchorCnt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_anchorcnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &anchorcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float conf_threshold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_conf_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &conf_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float nms_threshold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_nms_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nms_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float biases = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 45u, input, this->mutable_biases())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_biases())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool test_mAP = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_test_map();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &test_map_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string layer_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_layer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer_name(this->layer_name_size() - 1).data(),
            static_cast<int>(this->layer_name(this->layer_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.YoloV3Param.layer_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.YoloV3Param)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.YoloV3Param)
  return false;
#undef DO_
}

void YoloV3Param::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.YoloV3Param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_classes(), output);
  }

  // optional int32 anchorCnt = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->anchorcnt(), output);
  }

  // optional float conf_threshold = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->conf_threshold(), output);
  }

  // optional float nms_threshold = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->nms_threshold(), output);
  }

  // repeated float biases = 5;
  for (int i = 0, n = this->biases_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      5, this->biases(i), output);
  }

  // optional bool test_mAP = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->test_map(), output);
  }

  // repeated string layer_name = 7;
  for (int i = 0, n = this->layer_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_name(i).data(), static_cast<int>(this->layer_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.YoloV3Param.layer_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->layer_name(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.YoloV3Param)
}

::google::protobuf::uint8* YoloV3Param::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.YoloV3Param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_classes(), target);
  }

  // optional int32 anchorCnt = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->anchorcnt(), target);
  }

  // optional float conf_threshold = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->conf_threshold(), target);
  }

  // optional float nms_threshold = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->nms_threshold(), target);
  }

  // repeated float biases = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(5, this->biases_, target);

  // optional bool test_mAP = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->test_map(), target);
  }

  // repeated string layer_name = 7;
  for (int i = 0, n = this->layer_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_name(i).data(), static_cast<int>(this->layer_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.YoloV3Param.layer_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->layer_name(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.YoloV3Param)
  return target;
}

size_t YoloV3Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.YoloV3Param)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float biases = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->biases_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->biases_size());
    total_size += data_size;
  }

  // repeated string layer_name = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->layer_name_size());
  for (int i = 0, n = this->layer_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->layer_name(i));
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 num_classes = 1;
    if (has_num_classes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_classes());
    }

    // optional int32 anchorCnt = 2;
    if (has_anchorcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->anchorcnt());
    }

    // optional float conf_threshold = 3;
    if (has_conf_threshold()) {
      total_size += 1 + 4;
    }

    // optional float nms_threshold = 4;
    if (has_nms_threshold()) {
      total_size += 1 + 4;
    }

    // optional bool test_mAP = 6;
    if (has_test_map()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YoloV3Param::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.YoloV3Param)
  GOOGLE_DCHECK_NE(&from, this);
  const YoloV3Param* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YoloV3Param>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.YoloV3Param)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.YoloV3Param)
    MergeFrom(*source);
  }
}

void YoloV3Param::MergeFrom(const YoloV3Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.YoloV3Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  biases_.MergeFrom(from.biases_);
  layer_name_.MergeFrom(from.layer_name_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      num_classes_ = from.num_classes_;
    }
    if (cached_has_bits & 0x00000002u) {
      anchorcnt_ = from.anchorcnt_;
    }
    if (cached_has_bits & 0x00000004u) {
      conf_threshold_ = from.conf_threshold_;
    }
    if (cached_has_bits & 0x00000008u) {
      nms_threshold_ = from.nms_threshold_;
    }
    if (cached_has_bits & 0x00000010u) {
      test_map_ = from.test_map_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void YoloV3Param::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.YoloV3Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YoloV3Param::CopyFrom(const YoloV3Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.YoloV3Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YoloV3Param::IsInitialized() const {
  return true;
}

void YoloV3Param::Swap(YoloV3Param* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YoloV3Param::InternalSwap(YoloV3Param* other) {
  using std::swap;
  biases_.InternalSwap(&other->biases_);
  layer_name_.InternalSwap(&other->layer_name_);
  swap(num_classes_, other->num_classes_);
  swap(anchorcnt_, other->anchorcnt_);
  swap(conf_threshold_, other->conf_threshold_);
  swap(nms_threshold_, other->nms_threshold_);
  swap(test_map_, other->test_map_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YoloV3Param::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YoloV3Param

// optional int32 num_classes = 1;
bool YoloV3Param::has_num_classes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YoloV3Param::set_has_num_classes() {
  _has_bits_[0] |= 0x00000001u;
}
void YoloV3Param::clear_has_num_classes() {
  _has_bits_[0] &= ~0x00000001u;
}
void YoloV3Param::clear_num_classes() {
  num_classes_ = 0;
  clear_has_num_classes();
}
::google::protobuf::int32 YoloV3Param::num_classes() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.YoloV3Param.num_classes)
  return num_classes_;
}
void YoloV3Param::set_num_classes(::google::protobuf::int32 value) {
  set_has_num_classes();
  num_classes_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.YoloV3Param.num_classes)
}

// optional int32 anchorCnt = 2;
bool YoloV3Param::has_anchorcnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YoloV3Param::set_has_anchorcnt() {
  _has_bits_[0] |= 0x00000002u;
}
void YoloV3Param::clear_has_anchorcnt() {
  _has_bits_[0] &= ~0x00000002u;
}
void YoloV3Param::clear_anchorcnt() {
  anchorcnt_ = 0;
  clear_has_anchorcnt();
}
::google::protobuf::int32 YoloV3Param::anchorcnt() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.YoloV3Param.anchorCnt)
  return anchorcnt_;
}
void YoloV3Param::set_anchorcnt(::google::protobuf::int32 value) {
  set_has_anchorcnt();
  anchorcnt_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.YoloV3Param.anchorCnt)
}

// optional float conf_threshold = 3;
bool YoloV3Param::has_conf_threshold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YoloV3Param::set_has_conf_threshold() {
  _has_bits_[0] |= 0x00000004u;
}
void YoloV3Param::clear_has_conf_threshold() {
  _has_bits_[0] &= ~0x00000004u;
}
void YoloV3Param::clear_conf_threshold() {
  conf_threshold_ = 0;
  clear_has_conf_threshold();
}
float YoloV3Param::conf_threshold() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.YoloV3Param.conf_threshold)
  return conf_threshold_;
}
void YoloV3Param::set_conf_threshold(float value) {
  set_has_conf_threshold();
  conf_threshold_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.YoloV3Param.conf_threshold)
}

// optional float nms_threshold = 4;
bool YoloV3Param::has_nms_threshold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void YoloV3Param::set_has_nms_threshold() {
  _has_bits_[0] |= 0x00000008u;
}
void YoloV3Param::clear_has_nms_threshold() {
  _has_bits_[0] &= ~0x00000008u;
}
void YoloV3Param::clear_nms_threshold() {
  nms_threshold_ = 0;
  clear_has_nms_threshold();
}
float YoloV3Param::nms_threshold() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.YoloV3Param.nms_threshold)
  return nms_threshold_;
}
void YoloV3Param::set_nms_threshold(float value) {
  set_has_nms_threshold();
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.YoloV3Param.nms_threshold)
}

// repeated float biases = 5;
int YoloV3Param::biases_size() const {
  return biases_.size();
}
void YoloV3Param::clear_biases() {
  biases_.Clear();
}
float YoloV3Param::biases(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.YoloV3Param.biases)
  return biases_.Get(index);
}
void YoloV3Param::set_biases(int index, float value) {
  biases_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.YoloV3Param.biases)
}
void YoloV3Param::add_biases(float value) {
  biases_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.YoloV3Param.biases)
}
const ::google::protobuf::RepeatedField< float >&
YoloV3Param::biases() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.YoloV3Param.biases)
  return biases_;
}
::google::protobuf::RepeatedField< float >*
YoloV3Param::mutable_biases() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.YoloV3Param.biases)
  return &biases_;
}

// optional bool test_mAP = 6;
bool YoloV3Param::has_test_map() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void YoloV3Param::set_has_test_map() {
  _has_bits_[0] |= 0x00000010u;
}
void YoloV3Param::clear_has_test_map() {
  _has_bits_[0] &= ~0x00000010u;
}
void YoloV3Param::clear_test_map() {
  test_map_ = false;
  clear_has_test_map();
}
bool YoloV3Param::test_map() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.YoloV3Param.test_mAP)
  return test_map_;
}
void YoloV3Param::set_test_map(bool value) {
  set_has_test_map();
  test_map_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.YoloV3Param.test_mAP)
}

// repeated string layer_name = 7;
int YoloV3Param::layer_name_size() const {
  return layer_name_.size();
}
void YoloV3Param::clear_layer_name() {
  layer_name_.Clear();
}
const ::std::string& YoloV3Param::layer_name(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.YoloV3Param.layer_name)
  return layer_name_.Get(index);
}
::std::string* YoloV3Param::mutable_layer_name(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.YoloV3Param.layer_name)
  return layer_name_.Mutable(index);
}
void YoloV3Param::set_layer_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:vitis.ai.proto.YoloV3Param.layer_name)
  layer_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void YoloV3Param::set_layer_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:vitis.ai.proto.YoloV3Param.layer_name)
  layer_name_.Mutable(index)->assign(std::move(value));
}
#endif
void YoloV3Param::set_layer_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  layer_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.YoloV3Param.layer_name)
}
void YoloV3Param::set_layer_name(int index, const char* value, size_t size) {
  layer_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.YoloV3Param.layer_name)
}
::std::string* YoloV3Param::add_layer_name() {
  // @@protoc_insertion_point(field_add_mutable:vitis.ai.proto.YoloV3Param.layer_name)
  return layer_name_.Add();
}
void YoloV3Param::add_layer_name(const ::std::string& value) {
  layer_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.YoloV3Param.layer_name)
}
#if LANG_CXX11
void YoloV3Param::add_layer_name(::std::string&& value) {
  layer_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:vitis.ai.proto.YoloV3Param.layer_name)
}
#endif
void YoloV3Param::add_layer_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  layer_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:vitis.ai.proto.YoloV3Param.layer_name)
}
void YoloV3Param::add_layer_name(const char* value, size_t size) {
  layer_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:vitis.ai.proto.YoloV3Param.layer_name)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
YoloV3Param::layer_name() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.YoloV3Param.layer_name)
  return layer_name_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
YoloV3Param::mutable_layer_name() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.YoloV3Param.layer_name)
  return &layer_name_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriorBoxParam::kLayerWidthFieldNumber;
const int PriorBoxParam::kLayerHeightFieldNumber;
const int PriorBoxParam::kVariancesFieldNumber;
const int PriorBoxParam::kMinSizesFieldNumber;
const int PriorBoxParam::kMaxSizesFieldNumber;
const int PriorBoxParam::kAspectRatiosFieldNumber;
const int PriorBoxParam::kOffsetFieldNumber;
const int PriorBoxParam::kStepWidthFieldNumber;
const int PriorBoxParam::kStepHeightFieldNumber;
const int PriorBoxParam::kFlipFieldNumber;
const int PriorBoxParam::kClipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriorBoxParam::PriorBoxParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.PriorBoxParam)
}
PriorBoxParam::PriorBoxParam(const PriorBoxParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      variances_(from.variances_),
      min_sizes_(from.min_sizes_),
      max_sizes_(from.max_sizes_),
      aspect_ratios_(from.aspect_ratios_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&layer_width_, &from.layer_width_,
    static_cast<size_t>(reinterpret_cast<char*>(&clip_) -
    reinterpret_cast<char*>(&layer_width_)) + sizeof(clip_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.PriorBoxParam)
}

void PriorBoxParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&layer_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clip_) -
      reinterpret_cast<char*>(&layer_width_)) + sizeof(clip_));
}

PriorBoxParam::~PriorBoxParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.PriorBoxParam)
  SharedDtor();
}

void PriorBoxParam::SharedDtor() {
}

void PriorBoxParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PriorBoxParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PriorBoxParam& PriorBoxParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

PriorBoxParam* PriorBoxParam::New(::google::protobuf::Arena* arena) const {
  PriorBoxParam* n = new PriorBoxParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PriorBoxParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.PriorBoxParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variances_.Clear();
  min_sizes_.Clear();
  max_sizes_.Clear();
  aspect_ratios_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&layer_width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clip_) -
        reinterpret_cast<char*>(&layer_width_)) + sizeof(clip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PriorBoxParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.PriorBoxParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 layer_width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_layer_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layer_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 layer_height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_layer_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layer_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float variances = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37u, input, this->mutable_variances())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_variances())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float min_sizes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 45u, input, this->mutable_min_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_min_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float max_sizes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 53u, input, this->mutable_max_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_max_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float aspect_ratios = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 61u, input, this->mutable_aspect_ratios())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_aspect_ratios())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float offset = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float step_width = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_step_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &step_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float step_height = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          set_has_step_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &step_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool flip = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_flip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool clip = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_clip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.PriorBoxParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.PriorBoxParam)
  return false;
#undef DO_
}

void PriorBoxParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.PriorBoxParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 layer_width = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->layer_width(), output);
  }

  // optional int32 layer_height = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->layer_height(), output);
  }

  // repeated float variances = 4;
  for (int i = 0, n = this->variances_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->variances(i), output);
  }

  // repeated float min_sizes = 5;
  for (int i = 0, n = this->min_sizes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      5, this->min_sizes(i), output);
  }

  // repeated float max_sizes = 6;
  for (int i = 0, n = this->max_sizes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      6, this->max_sizes(i), output);
  }

  // repeated float aspect_ratios = 7;
  for (int i = 0, n = this->aspect_ratios_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      7, this->aspect_ratios(i), output);
  }

  // optional float offset = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->offset(), output);
  }

  // optional float step_width = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->step_width(), output);
  }

  // optional float step_height = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->step_height(), output);
  }

  // optional bool flip = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->flip(), output);
  }

  // optional bool clip = 12;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->clip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.PriorBoxParam)
}

::google::protobuf::uint8* PriorBoxParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.PriorBoxParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 layer_width = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->layer_width(), target);
  }

  // optional int32 layer_height = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->layer_height(), target);
  }

  // repeated float variances = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(4, this->variances_, target);

  // repeated float min_sizes = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(5, this->min_sizes_, target);

  // repeated float max_sizes = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(6, this->max_sizes_, target);

  // repeated float aspect_ratios = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(7, this->aspect_ratios_, target);

  // optional float offset = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->offset(), target);
  }

  // optional float step_width = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->step_width(), target);
  }

  // optional float step_height = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->step_height(), target);
  }

  // optional bool flip = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->flip(), target);
  }

  // optional bool clip = 12;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->clip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.PriorBoxParam)
  return target;
}

size_t PriorBoxParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.PriorBoxParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float variances = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->variances_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->variances_size());
    total_size += data_size;
  }

  // repeated float min_sizes = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->min_sizes_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->min_sizes_size());
    total_size += data_size;
  }

  // repeated float max_sizes = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->max_sizes_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->max_sizes_size());
    total_size += data_size;
  }

  // repeated float aspect_ratios = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->aspect_ratios_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->aspect_ratios_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 layer_width = 1;
    if (has_layer_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->layer_width());
    }

    // optional int32 layer_height = 2;
    if (has_layer_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->layer_height());
    }

    // optional float offset = 8;
    if (has_offset()) {
      total_size += 1 + 4;
    }

    // optional float step_width = 9;
    if (has_step_width()) {
      total_size += 1 + 4;
    }

    // optional float step_height = 10;
    if (has_step_height()) {
      total_size += 1 + 4;
    }

    // optional bool flip = 11;
    if (has_flip()) {
      total_size += 1 + 1;
    }

    // optional bool clip = 12;
    if (has_clip()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PriorBoxParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.PriorBoxParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PriorBoxParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PriorBoxParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.PriorBoxParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.PriorBoxParam)
    MergeFrom(*source);
  }
}

void PriorBoxParam::MergeFrom(const PriorBoxParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.PriorBoxParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variances_.MergeFrom(from.variances_);
  min_sizes_.MergeFrom(from.min_sizes_);
  max_sizes_.MergeFrom(from.max_sizes_);
  aspect_ratios_.MergeFrom(from.aspect_ratios_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      layer_width_ = from.layer_width_;
    }
    if (cached_has_bits & 0x00000002u) {
      layer_height_ = from.layer_height_;
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      step_width_ = from.step_width_;
    }
    if (cached_has_bits & 0x00000010u) {
      step_height_ = from.step_height_;
    }
    if (cached_has_bits & 0x00000020u) {
      flip_ = from.flip_;
    }
    if (cached_has_bits & 0x00000040u) {
      clip_ = from.clip_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PriorBoxParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.PriorBoxParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriorBoxParam::CopyFrom(const PriorBoxParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.PriorBoxParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriorBoxParam::IsInitialized() const {
  return true;
}

void PriorBoxParam::Swap(PriorBoxParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriorBoxParam::InternalSwap(PriorBoxParam* other) {
  using std::swap;
  variances_.InternalSwap(&other->variances_);
  min_sizes_.InternalSwap(&other->min_sizes_);
  max_sizes_.InternalSwap(&other->max_sizes_);
  aspect_ratios_.InternalSwap(&other->aspect_ratios_);
  swap(layer_width_, other->layer_width_);
  swap(layer_height_, other->layer_height_);
  swap(offset_, other->offset_);
  swap(step_width_, other->step_width_);
  swap(step_height_, other->step_height_);
  swap(flip_, other->flip_);
  swap(clip_, other->clip_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PriorBoxParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PriorBoxParam

// optional int32 layer_width = 1;
bool PriorBoxParam::has_layer_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PriorBoxParam::set_has_layer_width() {
  _has_bits_[0] |= 0x00000001u;
}
void PriorBoxParam::clear_has_layer_width() {
  _has_bits_[0] &= ~0x00000001u;
}
void PriorBoxParam::clear_layer_width() {
  layer_width_ = 0;
  clear_has_layer_width();
}
::google::protobuf::int32 PriorBoxParam::layer_width() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.layer_width)
  return layer_width_;
}
void PriorBoxParam::set_layer_width(::google::protobuf::int32 value) {
  set_has_layer_width();
  layer_width_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.layer_width)
}

// optional int32 layer_height = 2;
bool PriorBoxParam::has_layer_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PriorBoxParam::set_has_layer_height() {
  _has_bits_[0] |= 0x00000002u;
}
void PriorBoxParam::clear_has_layer_height() {
  _has_bits_[0] &= ~0x00000002u;
}
void PriorBoxParam::clear_layer_height() {
  layer_height_ = 0;
  clear_has_layer_height();
}
::google::protobuf::int32 PriorBoxParam::layer_height() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.layer_height)
  return layer_height_;
}
void PriorBoxParam::set_layer_height(::google::protobuf::int32 value) {
  set_has_layer_height();
  layer_height_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.layer_height)
}

// repeated float variances = 4;
int PriorBoxParam::variances_size() const {
  return variances_.size();
}
void PriorBoxParam::clear_variances() {
  variances_.Clear();
}
float PriorBoxParam::variances(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.variances)
  return variances_.Get(index);
}
void PriorBoxParam::set_variances(int index, float value) {
  variances_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.variances)
}
void PriorBoxParam::add_variances(float value) {
  variances_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.PriorBoxParam.variances)
}
const ::google::protobuf::RepeatedField< float >&
PriorBoxParam::variances() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.PriorBoxParam.variances)
  return variances_;
}
::google::protobuf::RepeatedField< float >*
PriorBoxParam::mutable_variances() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.PriorBoxParam.variances)
  return &variances_;
}

// repeated float min_sizes = 5;
int PriorBoxParam::min_sizes_size() const {
  return min_sizes_.size();
}
void PriorBoxParam::clear_min_sizes() {
  min_sizes_.Clear();
}
float PriorBoxParam::min_sizes(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.min_sizes)
  return min_sizes_.Get(index);
}
void PriorBoxParam::set_min_sizes(int index, float value) {
  min_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.min_sizes)
}
void PriorBoxParam::add_min_sizes(float value) {
  min_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.PriorBoxParam.min_sizes)
}
const ::google::protobuf::RepeatedField< float >&
PriorBoxParam::min_sizes() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.PriorBoxParam.min_sizes)
  return min_sizes_;
}
::google::protobuf::RepeatedField< float >*
PriorBoxParam::mutable_min_sizes() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.PriorBoxParam.min_sizes)
  return &min_sizes_;
}

// repeated float max_sizes = 6;
int PriorBoxParam::max_sizes_size() const {
  return max_sizes_.size();
}
void PriorBoxParam::clear_max_sizes() {
  max_sizes_.Clear();
}
float PriorBoxParam::max_sizes(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.max_sizes)
  return max_sizes_.Get(index);
}
void PriorBoxParam::set_max_sizes(int index, float value) {
  max_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.max_sizes)
}
void PriorBoxParam::add_max_sizes(float value) {
  max_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.PriorBoxParam.max_sizes)
}
const ::google::protobuf::RepeatedField< float >&
PriorBoxParam::max_sizes() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.PriorBoxParam.max_sizes)
  return max_sizes_;
}
::google::protobuf::RepeatedField< float >*
PriorBoxParam::mutable_max_sizes() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.PriorBoxParam.max_sizes)
  return &max_sizes_;
}

// repeated float aspect_ratios = 7;
int PriorBoxParam::aspect_ratios_size() const {
  return aspect_ratios_.size();
}
void PriorBoxParam::clear_aspect_ratios() {
  aspect_ratios_.Clear();
}
float PriorBoxParam::aspect_ratios(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.aspect_ratios)
  return aspect_ratios_.Get(index);
}
void PriorBoxParam::set_aspect_ratios(int index, float value) {
  aspect_ratios_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.aspect_ratios)
}
void PriorBoxParam::add_aspect_ratios(float value) {
  aspect_ratios_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.PriorBoxParam.aspect_ratios)
}
const ::google::protobuf::RepeatedField< float >&
PriorBoxParam::aspect_ratios() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.PriorBoxParam.aspect_ratios)
  return aspect_ratios_;
}
::google::protobuf::RepeatedField< float >*
PriorBoxParam::mutable_aspect_ratios() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.PriorBoxParam.aspect_ratios)
  return &aspect_ratios_;
}

// optional float offset = 8;
bool PriorBoxParam::has_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PriorBoxParam::set_has_offset() {
  _has_bits_[0] |= 0x00000004u;
}
void PriorBoxParam::clear_has_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
void PriorBoxParam::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
float PriorBoxParam::offset() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.offset)
  return offset_;
}
void PriorBoxParam::set_offset(float value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.offset)
}

// optional float step_width = 9;
bool PriorBoxParam::has_step_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PriorBoxParam::set_has_step_width() {
  _has_bits_[0] |= 0x00000008u;
}
void PriorBoxParam::clear_has_step_width() {
  _has_bits_[0] &= ~0x00000008u;
}
void PriorBoxParam::clear_step_width() {
  step_width_ = 0;
  clear_has_step_width();
}
float PriorBoxParam::step_width() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.step_width)
  return step_width_;
}
void PriorBoxParam::set_step_width(float value) {
  set_has_step_width();
  step_width_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.step_width)
}

// optional float step_height = 10;
bool PriorBoxParam::has_step_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PriorBoxParam::set_has_step_height() {
  _has_bits_[0] |= 0x00000010u;
}
void PriorBoxParam::clear_has_step_height() {
  _has_bits_[0] &= ~0x00000010u;
}
void PriorBoxParam::clear_step_height() {
  step_height_ = 0;
  clear_has_step_height();
}
float PriorBoxParam::step_height() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.step_height)
  return step_height_;
}
void PriorBoxParam::set_step_height(float value) {
  set_has_step_height();
  step_height_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.step_height)
}

// optional bool flip = 11;
bool PriorBoxParam::has_flip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PriorBoxParam::set_has_flip() {
  _has_bits_[0] |= 0x00000020u;
}
void PriorBoxParam::clear_has_flip() {
  _has_bits_[0] &= ~0x00000020u;
}
void PriorBoxParam::clear_flip() {
  flip_ = false;
  clear_has_flip();
}
bool PriorBoxParam::flip() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.flip)
  return flip_;
}
void PriorBoxParam::set_flip(bool value) {
  set_has_flip();
  flip_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.flip)
}

// optional bool clip = 12;
bool PriorBoxParam::has_clip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PriorBoxParam::set_has_clip() {
  _has_bits_[0] |= 0x00000040u;
}
void PriorBoxParam::clear_has_clip() {
  _has_bits_[0] &= ~0x00000040u;
}
void PriorBoxParam::clear_clip() {
  clip_ = false;
  clear_has_clip();
}
bool PriorBoxParam::clip() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.PriorBoxParam.clip)
  return clip_;
}
void PriorBoxParam::set_clip(bool value) {
  set_has_clip();
  clip_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.PriorBoxParam.clip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SSDParam_OutputInfo::kTypeFieldNumber;
const int SSDParam_OutputInfo::kOrderFieldNumber;
const int SSDParam_OutputInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SSDParam_OutputInfo::SSDParam_OutputInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.SSDParam.OutputInfo)
}
SSDParam_OutputInfo::SSDParam_OutputInfo(const SSDParam_OutputInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&order_) -
    reinterpret_cast<char*>(&type_)) + sizeof(order_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.SSDParam.OutputInfo)
}

void SSDParam_OutputInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order_) -
      reinterpret_cast<char*>(&type_)) + sizeof(order_));
}

SSDParam_OutputInfo::~SSDParam_OutputInfo() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.SSDParam.OutputInfo)
  SharedDtor();
}

void SSDParam_OutputInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SSDParam_OutputInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSDParam_OutputInfo::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SSDParam_OutputInfo& SSDParam_OutputInfo::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

SSDParam_OutputInfo* SSDParam_OutputInfo::New(::google::protobuf::Arena* arena) const {
  SSDParam_OutputInfo* n = new SSDParam_OutputInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SSDParam_OutputInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.SSDParam.OutputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&order_) -
        reinterpret_cast<char*>(&type_)) + sizeof(order_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SSDParam_OutputInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.SSDParam.OutputInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .vitis.ai.proto.SSDParam.OutputType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::vitis::ai::proto::SSDParam_OutputType_IsValid(value)) {
            set_type(static_cast< ::vitis::ai::proto::SSDParam_OutputType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 order = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.SSDParam.OutputInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.SSDParam.OutputInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.SSDParam.OutputInfo)
  return false;
#undef DO_
}

void SSDParam_OutputInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.SSDParam.OutputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .vitis.ai.proto.SSDParam.OutputType type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 order = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->order(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.SSDParam.OutputInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.SSDParam.OutputInfo)
}

::google::protobuf::uint8* SSDParam_OutputInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.SSDParam.OutputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .vitis.ai.proto.SSDParam.OutputType type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 order = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->order(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.SSDParam.OutputInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.SSDParam.OutputInfo)
  return target;
}

size_t SSDParam_OutputInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.SSDParam.OutputInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .vitis.ai.proto.SSDParam.OutputType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 order = 2;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSDParam_OutputInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.SSDParam.OutputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SSDParam_OutputInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SSDParam_OutputInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.SSDParam.OutputInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.SSDParam.OutputInfo)
    MergeFrom(*source);
  }
}

void SSDParam_OutputInfo::MergeFrom(const SSDParam_OutputInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.SSDParam.OutputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      order_ = from.order_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SSDParam_OutputInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.SSDParam.OutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSDParam_OutputInfo::CopyFrom(const SSDParam_OutputInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.SSDParam.OutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSDParam_OutputInfo::IsInitialized() const {
  return true;
}

void SSDParam_OutputInfo::Swap(SSDParam_OutputInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SSDParam_OutputInfo::InternalSwap(SSDParam_OutputInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(type_, other->type_);
  swap(order_, other->order_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SSDParam_OutputInfo::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SSDParam_OutputInfo

// optional .vitis.ai.proto.SSDParam.OutputType type = 1;
bool SSDParam_OutputInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SSDParam_OutputInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void SSDParam_OutputInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void SSDParam_OutputInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
::vitis::ai::proto::SSDParam_OutputType SSDParam_OutputInfo::type() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.OutputInfo.type)
  return static_cast< ::vitis::ai::proto::SSDParam_OutputType >(type_);
}
void SSDParam_OutputInfo::set_type(::vitis::ai::proto::SSDParam_OutputType value) {
  assert(::vitis::ai::proto::SSDParam_OutputType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SSDParam.OutputInfo.type)
}

// optional int32 order = 2;
bool SSDParam_OutputInfo::has_order() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SSDParam_OutputInfo::set_has_order() {
  _has_bits_[0] |= 0x00000004u;
}
void SSDParam_OutputInfo::clear_has_order() {
  _has_bits_[0] &= ~0x00000004u;
}
void SSDParam_OutputInfo::clear_order() {
  order_ = 0;
  clear_has_order();
}
::google::protobuf::int32 SSDParam_OutputInfo::order() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.OutputInfo.order)
  return order_;
}
void SSDParam_OutputInfo::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SSDParam.OutputInfo.order)
}

// optional string name = 3;
bool SSDParam_OutputInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SSDParam_OutputInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SSDParam_OutputInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SSDParam_OutputInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& SSDParam_OutputInfo::name() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.OutputInfo.name)
  return name_.GetNoArena();
}
void SSDParam_OutputInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SSDParam.OutputInfo.name)
}
#if LANG_CXX11
void SSDParam_OutputInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.SSDParam.OutputInfo.name)
}
#endif
void SSDParam_OutputInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.SSDParam.OutputInfo.name)
}
void SSDParam_OutputInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.SSDParam.OutputInfo.name)
}
::std::string* SSDParam_OutputInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.SSDParam.OutputInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SSDParam_OutputInfo::release_name() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.SSDParam.OutputInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SSDParam_OutputInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.SSDParam.OutputInfo.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SSDParam::kPriorBoxParamFieldNumber;
const int SSDParam::kNumClassesFieldNumber;
const int SSDParam::kNmsThresholdFieldNumber;
const int SSDParam::kConfThresholdFieldNumber;
const int SSDParam::kKeepTopKFieldNumber;
const int SSDParam::kTopKFieldNumber;
const int SSDParam::kIsMlperfFieldNumber;
const int SSDParam::kBboxLayerIndexFieldNumber;
const int SSDParam::kOutputInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SSDParam::SSDParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.SSDParam)
}
SSDParam::SSDParam(const SSDParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      prior_box_param_(from.prior_box_param_),
      conf_threshold_(from.conf_threshold_),
      bbox_layer_index_(from.bbox_layer_index_),
      output_info_(from.output_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_classes_, &from.num_classes_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_mlperf_) -
    reinterpret_cast<char*>(&num_classes_)) + sizeof(is_mlperf_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.SSDParam)
}

void SSDParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&num_classes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_mlperf_) -
      reinterpret_cast<char*>(&num_classes_)) + sizeof(is_mlperf_));
}

SSDParam::~SSDParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.SSDParam)
  SharedDtor();
}

void SSDParam::SharedDtor() {
}

void SSDParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSDParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SSDParam& SSDParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

SSDParam* SSDParam::New(::google::protobuf::Arena* arena) const {
  SSDParam* n = new SSDParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SSDParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.SSDParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prior_box_param_.Clear();
  conf_threshold_.Clear();
  bbox_layer_index_.Clear();
  output_info_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&num_classes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_mlperf_) -
        reinterpret_cast<char*>(&num_classes_)) + sizeof(is_mlperf_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SSDParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.SSDParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prior_box_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_classes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_classes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_classes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float nms_threshold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_nms_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nms_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float conf_threshold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37u, input, this->mutable_conf_threshold())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_conf_threshold())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 keep_top_k = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_keep_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keep_top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 top_k = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_mlperf = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_mlperf();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_mlperf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 bbox_layer_index = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64u, input, this->mutable_bbox_layer_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_bbox_layer_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vitis.ai.proto.SSDParam.OutputInfo output_info = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_output_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.SSDParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.SSDParam)
  return false;
#undef DO_
}

void SSDParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.SSDParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prior_box_param_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prior_box_param(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_classes(), output);
  }

  // optional float nms_threshold = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->nms_threshold(), output);
  }

  // repeated float conf_threshold = 4;
  for (int i = 0, n = this->conf_threshold_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->conf_threshold(i), output);
  }

  // optional int32 keep_top_k = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->keep_top_k(), output);
  }

  // optional int32 top_k = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->top_k(), output);
  }

  // optional bool is_mlperf = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_mlperf(), output);
  }

  // repeated int32 bbox_layer_index = 8;
  for (int i = 0, n = this->bbox_layer_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->bbox_layer_index(i), output);
  }

  // repeated .vitis.ai.proto.SSDParam.OutputInfo output_info = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->output_info(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.SSDParam)
}

::google::protobuf::uint8* SSDParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.SSDParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prior_box_param_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->prior_box_param(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_classes(), target);
  }

  // optional float nms_threshold = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->nms_threshold(), target);
  }

  // repeated float conf_threshold = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(4, this->conf_threshold_, target);

  // optional int32 keep_top_k = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->keep_top_k(), target);
  }

  // optional int32 top_k = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->top_k(), target);
  }

  // optional bool is_mlperf = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_mlperf(), target);
  }

  // repeated int32 bbox_layer_index = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(8, this->bbox_layer_index_, target);

  // repeated .vitis.ai.proto.SSDParam.OutputInfo output_info = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->output_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.SSDParam)
  return target;
}

size_t SSDParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.SSDParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->prior_box_param_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prior_box_param(static_cast<int>(i)));
    }
  }

  // repeated float conf_threshold = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->conf_threshold_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->conf_threshold_size());
    total_size += data_size;
  }

  // repeated int32 bbox_layer_index = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->bbox_layer_index_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->bbox_layer_index_size());
    total_size += data_size;
  }

  // repeated .vitis.ai.proto.SSDParam.OutputInfo output_info = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->output_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output_info(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 num_classes = 2;
    if (has_num_classes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_classes());
    }

    // optional float nms_threshold = 3;
    if (has_nms_threshold()) {
      total_size += 1 + 4;
    }

    // optional int32 keep_top_k = 5;
    if (has_keep_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keep_top_k());
    }

    // optional int32 top_k = 6;
    if (has_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_k());
    }

    // optional bool is_mlperf = 7;
    if (has_is_mlperf()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSDParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.SSDParam)
  GOOGLE_DCHECK_NE(&from, this);
  const SSDParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SSDParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.SSDParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.SSDParam)
    MergeFrom(*source);
  }
}

void SSDParam::MergeFrom(const SSDParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.SSDParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prior_box_param_.MergeFrom(from.prior_box_param_);
  conf_threshold_.MergeFrom(from.conf_threshold_);
  bbox_layer_index_.MergeFrom(from.bbox_layer_index_);
  output_info_.MergeFrom(from.output_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      num_classes_ = from.num_classes_;
    }
    if (cached_has_bits & 0x00000002u) {
      nms_threshold_ = from.nms_threshold_;
    }
    if (cached_has_bits & 0x00000004u) {
      keep_top_k_ = from.keep_top_k_;
    }
    if (cached_has_bits & 0x00000008u) {
      top_k_ = from.top_k_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_mlperf_ = from.is_mlperf_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SSDParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.SSDParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSDParam::CopyFrom(const SSDParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.SSDParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSDParam::IsInitialized() const {
  return true;
}

void SSDParam::Swap(SSDParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SSDParam::InternalSwap(SSDParam* other) {
  using std::swap;
  prior_box_param_.InternalSwap(&other->prior_box_param_);
  conf_threshold_.InternalSwap(&other->conf_threshold_);
  bbox_layer_index_.InternalSwap(&other->bbox_layer_index_);
  output_info_.InternalSwap(&other->output_info_);
  swap(num_classes_, other->num_classes_);
  swap(nms_threshold_, other->nms_threshold_);
  swap(keep_top_k_, other->keep_top_k_);
  swap(top_k_, other->top_k_);
  swap(is_mlperf_, other->is_mlperf_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SSDParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SSDParam

// repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
int SSDParam::prior_box_param_size() const {
  return prior_box_param_.size();
}
void SSDParam::clear_prior_box_param() {
  prior_box_param_.Clear();
}
const ::vitis::ai::proto::PriorBoxParam& SSDParam::prior_box_param(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.prior_box_param)
  return prior_box_param_.Get(index);
}
::vitis::ai::proto::PriorBoxParam* SSDParam::mutable_prior_box_param(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.SSDParam.prior_box_param)
  return prior_box_param_.Mutable(index);
}
::vitis::ai::proto::PriorBoxParam* SSDParam::add_prior_box_param() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.SSDParam.prior_box_param)
  return prior_box_param_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::PriorBoxParam >*
SSDParam::mutable_prior_box_param() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.SSDParam.prior_box_param)
  return &prior_box_param_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::PriorBoxParam >&
SSDParam::prior_box_param() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.SSDParam.prior_box_param)
  return prior_box_param_;
}

// optional int32 num_classes = 2;
bool SSDParam::has_num_classes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SSDParam::set_has_num_classes() {
  _has_bits_[0] |= 0x00000001u;
}
void SSDParam::clear_has_num_classes() {
  _has_bits_[0] &= ~0x00000001u;
}
void SSDParam::clear_num_classes() {
  num_classes_ = 0;
  clear_has_num_classes();
}
::google::protobuf::int32 SSDParam::num_classes() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.num_classes)
  return num_classes_;
}
void SSDParam::set_num_classes(::google::protobuf::int32 value) {
  set_has_num_classes();
  num_classes_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SSDParam.num_classes)
}

// optional float nms_threshold = 3;
bool SSDParam::has_nms_threshold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SSDParam::set_has_nms_threshold() {
  _has_bits_[0] |= 0x00000002u;
}
void SSDParam::clear_has_nms_threshold() {
  _has_bits_[0] &= ~0x00000002u;
}
void SSDParam::clear_nms_threshold() {
  nms_threshold_ = 0;
  clear_has_nms_threshold();
}
float SSDParam::nms_threshold() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.nms_threshold)
  return nms_threshold_;
}
void SSDParam::set_nms_threshold(float value) {
  set_has_nms_threshold();
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SSDParam.nms_threshold)
}

// repeated float conf_threshold = 4;
int SSDParam::conf_threshold_size() const {
  return conf_threshold_.size();
}
void SSDParam::clear_conf_threshold() {
  conf_threshold_.Clear();
}
float SSDParam::conf_threshold(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.conf_threshold)
  return conf_threshold_.Get(index);
}
void SSDParam::set_conf_threshold(int index, float value) {
  conf_threshold_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SSDParam.conf_threshold)
}
void SSDParam::add_conf_threshold(float value) {
  conf_threshold_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.SSDParam.conf_threshold)
}
const ::google::protobuf::RepeatedField< float >&
SSDParam::conf_threshold() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.SSDParam.conf_threshold)
  return conf_threshold_;
}
::google::protobuf::RepeatedField< float >*
SSDParam::mutable_conf_threshold() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.SSDParam.conf_threshold)
  return &conf_threshold_;
}

// optional int32 keep_top_k = 5;
bool SSDParam::has_keep_top_k() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SSDParam::set_has_keep_top_k() {
  _has_bits_[0] |= 0x00000004u;
}
void SSDParam::clear_has_keep_top_k() {
  _has_bits_[0] &= ~0x00000004u;
}
void SSDParam::clear_keep_top_k() {
  keep_top_k_ = 0;
  clear_has_keep_top_k();
}
::google::protobuf::int32 SSDParam::keep_top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.keep_top_k)
  return keep_top_k_;
}
void SSDParam::set_keep_top_k(::google::protobuf::int32 value) {
  set_has_keep_top_k();
  keep_top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SSDParam.keep_top_k)
}

// optional int32 top_k = 6;
bool SSDParam::has_top_k() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SSDParam::set_has_top_k() {
  _has_bits_[0] |= 0x00000008u;
}
void SSDParam::clear_has_top_k() {
  _has_bits_[0] &= ~0x00000008u;
}
void SSDParam::clear_top_k() {
  top_k_ = 0;
  clear_has_top_k();
}
::google::protobuf::int32 SSDParam::top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.top_k)
  return top_k_;
}
void SSDParam::set_top_k(::google::protobuf::int32 value) {
  set_has_top_k();
  top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SSDParam.top_k)
}

// optional bool is_mlperf = 7;
bool SSDParam::has_is_mlperf() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SSDParam::set_has_is_mlperf() {
  _has_bits_[0] |= 0x00000010u;
}
void SSDParam::clear_has_is_mlperf() {
  _has_bits_[0] &= ~0x00000010u;
}
void SSDParam::clear_is_mlperf() {
  is_mlperf_ = false;
  clear_has_is_mlperf();
}
bool SSDParam::is_mlperf() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.is_mlperf)
  return is_mlperf_;
}
void SSDParam::set_is_mlperf(bool value) {
  set_has_is_mlperf();
  is_mlperf_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SSDParam.is_mlperf)
}

// repeated int32 bbox_layer_index = 8;
int SSDParam::bbox_layer_index_size() const {
  return bbox_layer_index_.size();
}
void SSDParam::clear_bbox_layer_index() {
  bbox_layer_index_.Clear();
}
::google::protobuf::int32 SSDParam::bbox_layer_index(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.bbox_layer_index)
  return bbox_layer_index_.Get(index);
}
void SSDParam::set_bbox_layer_index(int index, ::google::protobuf::int32 value) {
  bbox_layer_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SSDParam.bbox_layer_index)
}
void SSDParam::add_bbox_layer_index(::google::protobuf::int32 value) {
  bbox_layer_index_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.SSDParam.bbox_layer_index)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SSDParam::bbox_layer_index() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.SSDParam.bbox_layer_index)
  return bbox_layer_index_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SSDParam::mutable_bbox_layer_index() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.SSDParam.bbox_layer_index)
  return &bbox_layer_index_;
}

// repeated .vitis.ai.proto.SSDParam.OutputInfo output_info = 9;
int SSDParam::output_info_size() const {
  return output_info_.size();
}
void SSDParam::clear_output_info() {
  output_info_.Clear();
}
const ::vitis::ai::proto::SSDParam_OutputInfo& SSDParam::output_info(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SSDParam.output_info)
  return output_info_.Get(index);
}
::vitis::ai::proto::SSDParam_OutputInfo* SSDParam::mutable_output_info(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.SSDParam.output_info)
  return output_info_.Mutable(index);
}
::vitis::ai::proto::SSDParam_OutputInfo* SSDParam::add_output_info() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.SSDParam.output_info)
  return output_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::SSDParam_OutputInfo >*
SSDParam::mutable_output_info() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.SSDParam.output_info)
  return &output_info_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::SSDParam_OutputInfo >&
SSDParam::output_info() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.SSDParam.output_info)
  return output_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefineDetParam::kPriorBoxParamFieldNumber;
const int RefineDetParam::kNumClassesFieldNumber;
const int RefineDetParam::kNmsThresholdFieldNumber;
const int RefineDetParam::kConfThresholdFieldNumber;
const int RefineDetParam::kKeepTopKFieldNumber;
const int RefineDetParam::kTopKFieldNumber;
const int RefineDetParam::kLayerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefineDetParam::RefineDetParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.RefineDetParam)
}
RefineDetParam::RefineDetParam(const RefineDetParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      prior_box_param_(from.prior_box_param_),
      conf_threshold_(from.conf_threshold_),
      layer_name_(from.layer_name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_classes_, &from.num_classes_,
    static_cast<size_t>(reinterpret_cast<char*>(&top_k_) -
    reinterpret_cast<char*>(&num_classes_)) + sizeof(top_k_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.RefineDetParam)
}

void RefineDetParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&num_classes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&top_k_) -
      reinterpret_cast<char*>(&num_classes_)) + sizeof(top_k_));
}

RefineDetParam::~RefineDetParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.RefineDetParam)
  SharedDtor();
}

void RefineDetParam::SharedDtor() {
}

void RefineDetParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefineDetParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefineDetParam& RefineDetParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

RefineDetParam* RefineDetParam::New(::google::protobuf::Arena* arena) const {
  RefineDetParam* n = new RefineDetParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefineDetParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.RefineDetParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prior_box_param_.Clear();
  conf_threshold_.Clear();
  layer_name_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&num_classes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&top_k_) -
        reinterpret_cast<char*>(&num_classes_)) + sizeof(top_k_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RefineDetParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.RefineDetParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prior_box_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_classes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_classes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_classes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float nms_threshold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_nms_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nms_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float conf_threshold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37u, input, this->mutable_conf_threshold())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_conf_threshold())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 keep_top_k = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_keep_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keep_top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 top_k = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string layer_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_layer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer_name(this->layer_name_size() - 1).data(),
            static_cast<int>(this->layer_name(this->layer_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.RefineDetParam.layer_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.RefineDetParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.RefineDetParam)
  return false;
#undef DO_
}

void RefineDetParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.RefineDetParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prior_box_param_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prior_box_param(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_classes(), output);
  }

  // optional float nms_threshold = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->nms_threshold(), output);
  }

  // repeated float conf_threshold = 4;
  for (int i = 0, n = this->conf_threshold_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->conf_threshold(i), output);
  }

  // optional int32 keep_top_k = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->keep_top_k(), output);
  }

  // optional int32 top_k = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->top_k(), output);
  }

  // repeated string layer_name = 7;
  for (int i = 0, n = this->layer_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_name(i).data(), static_cast<int>(this->layer_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.RefineDetParam.layer_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->layer_name(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.RefineDetParam)
}

::google::protobuf::uint8* RefineDetParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.RefineDetParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prior_box_param_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->prior_box_param(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_classes(), target);
  }

  // optional float nms_threshold = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->nms_threshold(), target);
  }

  // repeated float conf_threshold = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(4, this->conf_threshold_, target);

  // optional int32 keep_top_k = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->keep_top_k(), target);
  }

  // optional int32 top_k = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->top_k(), target);
  }

  // repeated string layer_name = 7;
  for (int i = 0, n = this->layer_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_name(i).data(), static_cast<int>(this->layer_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.RefineDetParam.layer_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->layer_name(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.RefineDetParam)
  return target;
}

size_t RefineDetParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.RefineDetParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->prior_box_param_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prior_box_param(static_cast<int>(i)));
    }
  }

  // repeated float conf_threshold = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->conf_threshold_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->conf_threshold_size());
    total_size += data_size;
  }

  // repeated string layer_name = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->layer_name_size());
  for (int i = 0, n = this->layer_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->layer_name(i));
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 num_classes = 2;
    if (has_num_classes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_classes());
    }

    // optional float nms_threshold = 3;
    if (has_nms_threshold()) {
      total_size += 1 + 4;
    }

    // optional int32 keep_top_k = 5;
    if (has_keep_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keep_top_k());
    }

    // optional int32 top_k = 6;
    if (has_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_k());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefineDetParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.RefineDetParam)
  GOOGLE_DCHECK_NE(&from, this);
  const RefineDetParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefineDetParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.RefineDetParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.RefineDetParam)
    MergeFrom(*source);
  }
}

void RefineDetParam::MergeFrom(const RefineDetParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.RefineDetParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prior_box_param_.MergeFrom(from.prior_box_param_);
  conf_threshold_.MergeFrom(from.conf_threshold_);
  layer_name_.MergeFrom(from.layer_name_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      num_classes_ = from.num_classes_;
    }
    if (cached_has_bits & 0x00000002u) {
      nms_threshold_ = from.nms_threshold_;
    }
    if (cached_has_bits & 0x00000004u) {
      keep_top_k_ = from.keep_top_k_;
    }
    if (cached_has_bits & 0x00000008u) {
      top_k_ = from.top_k_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RefineDetParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.RefineDetParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefineDetParam::CopyFrom(const RefineDetParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.RefineDetParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefineDetParam::IsInitialized() const {
  return true;
}

void RefineDetParam::Swap(RefineDetParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefineDetParam::InternalSwap(RefineDetParam* other) {
  using std::swap;
  prior_box_param_.InternalSwap(&other->prior_box_param_);
  conf_threshold_.InternalSwap(&other->conf_threshold_);
  layer_name_.InternalSwap(&other->layer_name_);
  swap(num_classes_, other->num_classes_);
  swap(nms_threshold_, other->nms_threshold_);
  swap(keep_top_k_, other->keep_top_k_);
  swap(top_k_, other->top_k_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefineDetParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefineDetParam

// repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
int RefineDetParam::prior_box_param_size() const {
  return prior_box_param_.size();
}
void RefineDetParam::clear_prior_box_param() {
  prior_box_param_.Clear();
}
const ::vitis::ai::proto::PriorBoxParam& RefineDetParam::prior_box_param(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RefineDetParam.prior_box_param)
  return prior_box_param_.Get(index);
}
::vitis::ai::proto::PriorBoxParam* RefineDetParam::mutable_prior_box_param(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.RefineDetParam.prior_box_param)
  return prior_box_param_.Mutable(index);
}
::vitis::ai::proto::PriorBoxParam* RefineDetParam::add_prior_box_param() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.RefineDetParam.prior_box_param)
  return prior_box_param_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::PriorBoxParam >*
RefineDetParam::mutable_prior_box_param() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.RefineDetParam.prior_box_param)
  return &prior_box_param_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::PriorBoxParam >&
RefineDetParam::prior_box_param() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.RefineDetParam.prior_box_param)
  return prior_box_param_;
}

// optional int32 num_classes = 2;
bool RefineDetParam::has_num_classes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RefineDetParam::set_has_num_classes() {
  _has_bits_[0] |= 0x00000001u;
}
void RefineDetParam::clear_has_num_classes() {
  _has_bits_[0] &= ~0x00000001u;
}
void RefineDetParam::clear_num_classes() {
  num_classes_ = 0;
  clear_has_num_classes();
}
::google::protobuf::int32 RefineDetParam::num_classes() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RefineDetParam.num_classes)
  return num_classes_;
}
void RefineDetParam::set_num_classes(::google::protobuf::int32 value) {
  set_has_num_classes();
  num_classes_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RefineDetParam.num_classes)
}

// optional float nms_threshold = 3;
bool RefineDetParam::has_nms_threshold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RefineDetParam::set_has_nms_threshold() {
  _has_bits_[0] |= 0x00000002u;
}
void RefineDetParam::clear_has_nms_threshold() {
  _has_bits_[0] &= ~0x00000002u;
}
void RefineDetParam::clear_nms_threshold() {
  nms_threshold_ = 0;
  clear_has_nms_threshold();
}
float RefineDetParam::nms_threshold() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RefineDetParam.nms_threshold)
  return nms_threshold_;
}
void RefineDetParam::set_nms_threshold(float value) {
  set_has_nms_threshold();
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RefineDetParam.nms_threshold)
}

// repeated float conf_threshold = 4;
int RefineDetParam::conf_threshold_size() const {
  return conf_threshold_.size();
}
void RefineDetParam::clear_conf_threshold() {
  conf_threshold_.Clear();
}
float RefineDetParam::conf_threshold(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RefineDetParam.conf_threshold)
  return conf_threshold_.Get(index);
}
void RefineDetParam::set_conf_threshold(int index, float value) {
  conf_threshold_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RefineDetParam.conf_threshold)
}
void RefineDetParam::add_conf_threshold(float value) {
  conf_threshold_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.RefineDetParam.conf_threshold)
}
const ::google::protobuf::RepeatedField< float >&
RefineDetParam::conf_threshold() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.RefineDetParam.conf_threshold)
  return conf_threshold_;
}
::google::protobuf::RepeatedField< float >*
RefineDetParam::mutable_conf_threshold() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.RefineDetParam.conf_threshold)
  return &conf_threshold_;
}

// optional int32 keep_top_k = 5;
bool RefineDetParam::has_keep_top_k() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RefineDetParam::set_has_keep_top_k() {
  _has_bits_[0] |= 0x00000004u;
}
void RefineDetParam::clear_has_keep_top_k() {
  _has_bits_[0] &= ~0x00000004u;
}
void RefineDetParam::clear_keep_top_k() {
  keep_top_k_ = 0;
  clear_has_keep_top_k();
}
::google::protobuf::int32 RefineDetParam::keep_top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RefineDetParam.keep_top_k)
  return keep_top_k_;
}
void RefineDetParam::set_keep_top_k(::google::protobuf::int32 value) {
  set_has_keep_top_k();
  keep_top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RefineDetParam.keep_top_k)
}

// optional int32 top_k = 6;
bool RefineDetParam::has_top_k() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RefineDetParam::set_has_top_k() {
  _has_bits_[0] |= 0x00000008u;
}
void RefineDetParam::clear_has_top_k() {
  _has_bits_[0] &= ~0x00000008u;
}
void RefineDetParam::clear_top_k() {
  top_k_ = 0;
  clear_has_top_k();
}
::google::protobuf::int32 RefineDetParam::top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RefineDetParam.top_k)
  return top_k_;
}
void RefineDetParam::set_top_k(::google::protobuf::int32 value) {
  set_has_top_k();
  top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RefineDetParam.top_k)
}

// repeated string layer_name = 7;
int RefineDetParam::layer_name_size() const {
  return layer_name_.size();
}
void RefineDetParam::clear_layer_name() {
  layer_name_.Clear();
}
const ::std::string& RefineDetParam::layer_name(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RefineDetParam.layer_name)
  return layer_name_.Get(index);
}
::std::string* RefineDetParam::mutable_layer_name(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.RefineDetParam.layer_name)
  return layer_name_.Mutable(index);
}
void RefineDetParam::set_layer_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RefineDetParam.layer_name)
  layer_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void RefineDetParam::set_layer_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RefineDetParam.layer_name)
  layer_name_.Mutable(index)->assign(std::move(value));
}
#endif
void RefineDetParam::set_layer_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  layer_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.RefineDetParam.layer_name)
}
void RefineDetParam::set_layer_name(int index, const char* value, size_t size) {
  layer_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.RefineDetParam.layer_name)
}
::std::string* RefineDetParam::add_layer_name() {
  // @@protoc_insertion_point(field_add_mutable:vitis.ai.proto.RefineDetParam.layer_name)
  return layer_name_.Add();
}
void RefineDetParam::add_layer_name(const ::std::string& value) {
  layer_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.RefineDetParam.layer_name)
}
#if LANG_CXX11
void RefineDetParam::add_layer_name(::std::string&& value) {
  layer_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:vitis.ai.proto.RefineDetParam.layer_name)
}
#endif
void RefineDetParam::add_layer_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  layer_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:vitis.ai.proto.RefineDetParam.layer_name)
}
void RefineDetParam::add_layer_name(const char* value, size_t size) {
  layer_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:vitis.ai.proto.RefineDetParam.layer_name)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RefineDetParam::layer_name() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.RefineDetParam.layer_name)
  return layer_name_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RefineDetParam::mutable_layer_name() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.RefineDetParam.layer_name)
  return &layer_name_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassificationParam::kTopKFieldNumber;
const int ClassificationParam::kTestAccuracyFieldNumber;
const int ClassificationParam::kPreprocessTypeFieldNumber;
const int ClassificationParam::kLayerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassificationParam::ClassificationParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.ClassificationParam)
}
ClassificationParam::ClassificationParam(const ClassificationParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  layer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_layer_name()) {
    layer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layer_name_);
  }
  ::memcpy(&top_k_, &from.top_k_,
    static_cast<size_t>(reinterpret_cast<char*>(&preprocess_type_) -
    reinterpret_cast<char*>(&top_k_)) + sizeof(preprocess_type_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.ClassificationParam)
}

void ClassificationParam::SharedCtor() {
  _cached_size_ = 0;
  layer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&top_k_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preprocess_type_) -
      reinterpret_cast<char*>(&top_k_)) + sizeof(preprocess_type_));
}

ClassificationParam::~ClassificationParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.ClassificationParam)
  SharedDtor();
}

void ClassificationParam::SharedDtor() {
  layer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClassificationParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassificationParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassificationParam& ClassificationParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClassificationParam* ClassificationParam::New(::google::protobuf::Arena* arena) const {
  ClassificationParam* n = new ClassificationParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassificationParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.ClassificationParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_layer_name()) {
    GOOGLE_DCHECK(!layer_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*layer_name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 14u) {
    ::memset(&top_k_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&preprocess_type_) -
        reinterpret_cast<char*>(&top_k_)) + sizeof(preprocess_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClassificationParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.ClassificationParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 top_k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool test_accuracy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_test_accuracy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &test_accuracy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.ClassificationParam.PreprocessType preprocess_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::vitis::ai::proto::ClassificationParam_PreprocessType_IsValid(value)) {
            set_preprocess_type(static_cast< ::vitis::ai::proto::ClassificationParam_PreprocessType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string layer_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer_name().data(), static_cast<int>(this->layer_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.ClassificationParam.layer_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.ClassificationParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.ClassificationParam)
  return false;
#undef DO_
}

void ClassificationParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.ClassificationParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 top_k = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->top_k(), output);
  }

  // optional bool test_accuracy = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->test_accuracy(), output);
  }

  // optional .vitis.ai.proto.ClassificationParam.PreprocessType preprocess_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->preprocess_type(), output);
  }

  // optional string layer_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_name().data(), static_cast<int>(this->layer_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.ClassificationParam.layer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->layer_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.ClassificationParam)
}

::google::protobuf::uint8* ClassificationParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.ClassificationParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 top_k = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->top_k(), target);
  }

  // optional bool test_accuracy = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->test_accuracy(), target);
  }

  // optional .vitis.ai.proto.ClassificationParam.PreprocessType preprocess_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->preprocess_type(), target);
  }

  // optional string layer_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_name().data(), static_cast<int>(this->layer_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.ClassificationParam.layer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->layer_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.ClassificationParam)
  return target;
}

size_t ClassificationParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.ClassificationParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string layer_name = 4;
    if (has_layer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer_name());
    }

    // optional int32 top_k = 1;
    if (has_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_k());
    }

    // optional bool test_accuracy = 2;
    if (has_test_accuracy()) {
      total_size += 1 + 1;
    }

    // optional .vitis.ai.proto.ClassificationParam.PreprocessType preprocess_type = 3;
    if (has_preprocess_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->preprocess_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassificationParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.ClassificationParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassificationParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassificationParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.ClassificationParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.ClassificationParam)
    MergeFrom(*source);
  }
}

void ClassificationParam::MergeFrom(const ClassificationParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.ClassificationParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_layer_name();
      layer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layer_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      top_k_ = from.top_k_;
    }
    if (cached_has_bits & 0x00000004u) {
      test_accuracy_ = from.test_accuracy_;
    }
    if (cached_has_bits & 0x00000008u) {
      preprocess_type_ = from.preprocess_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClassificationParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.ClassificationParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassificationParam::CopyFrom(const ClassificationParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.ClassificationParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassificationParam::IsInitialized() const {
  return true;
}

void ClassificationParam::Swap(ClassificationParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassificationParam::InternalSwap(ClassificationParam* other) {
  using std::swap;
  layer_name_.Swap(&other->layer_name_);
  swap(top_k_, other->top_k_);
  swap(test_accuracy_, other->test_accuracy_);
  swap(preprocess_type_, other->preprocess_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassificationParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClassificationParam

// optional int32 top_k = 1;
bool ClassificationParam::has_top_k() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ClassificationParam::set_has_top_k() {
  _has_bits_[0] |= 0x00000002u;
}
void ClassificationParam::clear_has_top_k() {
  _has_bits_[0] &= ~0x00000002u;
}
void ClassificationParam::clear_top_k() {
  top_k_ = 0;
  clear_has_top_k();
}
::google::protobuf::int32 ClassificationParam::top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.ClassificationParam.top_k)
  return top_k_;
}
void ClassificationParam::set_top_k(::google::protobuf::int32 value) {
  set_has_top_k();
  top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.ClassificationParam.top_k)
}

// optional bool test_accuracy = 2;
bool ClassificationParam::has_test_accuracy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ClassificationParam::set_has_test_accuracy() {
  _has_bits_[0] |= 0x00000004u;
}
void ClassificationParam::clear_has_test_accuracy() {
  _has_bits_[0] &= ~0x00000004u;
}
void ClassificationParam::clear_test_accuracy() {
  test_accuracy_ = false;
  clear_has_test_accuracy();
}
bool ClassificationParam::test_accuracy() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.ClassificationParam.test_accuracy)
  return test_accuracy_;
}
void ClassificationParam::set_test_accuracy(bool value) {
  set_has_test_accuracy();
  test_accuracy_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.ClassificationParam.test_accuracy)
}

// optional .vitis.ai.proto.ClassificationParam.PreprocessType preprocess_type = 3;
bool ClassificationParam::has_preprocess_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ClassificationParam::set_has_preprocess_type() {
  _has_bits_[0] |= 0x00000008u;
}
void ClassificationParam::clear_has_preprocess_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void ClassificationParam::clear_preprocess_type() {
  preprocess_type_ = 0;
  clear_has_preprocess_type();
}
::vitis::ai::proto::ClassificationParam_PreprocessType ClassificationParam::preprocess_type() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.ClassificationParam.preprocess_type)
  return static_cast< ::vitis::ai::proto::ClassificationParam_PreprocessType >(preprocess_type_);
}
void ClassificationParam::set_preprocess_type(::vitis::ai::proto::ClassificationParam_PreprocessType value) {
  assert(::vitis::ai::proto::ClassificationParam_PreprocessType_IsValid(value));
  set_has_preprocess_type();
  preprocess_type_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.ClassificationParam.preprocess_type)
}

// optional string layer_name = 4;
bool ClassificationParam::has_layer_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ClassificationParam::set_has_layer_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ClassificationParam::clear_has_layer_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ClassificationParam::clear_layer_name() {
  layer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_layer_name();
}
const ::std::string& ClassificationParam::layer_name() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.ClassificationParam.layer_name)
  return layer_name_.GetNoArena();
}
void ClassificationParam::set_layer_name(const ::std::string& value) {
  set_has_layer_name();
  layer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.ClassificationParam.layer_name)
}
#if LANG_CXX11
void ClassificationParam::set_layer_name(::std::string&& value) {
  set_has_layer_name();
  layer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.ClassificationParam.layer_name)
}
#endif
void ClassificationParam::set_layer_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_layer_name();
  layer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.ClassificationParam.layer_name)
}
void ClassificationParam::set_layer_name(const char* value, size_t size) {
  set_has_layer_name();
  layer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.ClassificationParam.layer_name)
}
::std::string* ClassificationParam::mutable_layer_name() {
  set_has_layer_name();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.ClassificationParam.layer_name)
  return layer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClassificationParam::release_layer_name() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.ClassificationParam.layer_name)
  clear_has_layer_name();
  return layer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClassificationParam::set_allocated_layer_name(::std::string* layer_name) {
  if (layer_name != NULL) {
    set_has_layer_name();
  } else {
    clear_has_layer_name();
  }
  layer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layer_name);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.ClassificationParam.layer_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DenseBoxParam::kNumOfClassesFieldNumber;
const int DenseBoxParam::kNmsThresholdFieldNumber;
const int DenseBoxParam::kDetThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DenseBoxParam::DenseBoxParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.DenseBoxParam)
}
DenseBoxParam::DenseBoxParam(const DenseBoxParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_of_classes_, &from.num_of_classes_,
    static_cast<size_t>(reinterpret_cast<char*>(&det_threshold_) -
    reinterpret_cast<char*>(&num_of_classes_)) + sizeof(det_threshold_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.DenseBoxParam)
}

void DenseBoxParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&num_of_classes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&det_threshold_) -
      reinterpret_cast<char*>(&num_of_classes_)) + sizeof(det_threshold_));
}

DenseBoxParam::~DenseBoxParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.DenseBoxParam)
  SharedDtor();
}

void DenseBoxParam::SharedDtor() {
}

void DenseBoxParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DenseBoxParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DenseBoxParam& DenseBoxParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

DenseBoxParam* DenseBoxParam::New(::google::protobuf::Arena* arena) const {
  DenseBoxParam* n = new DenseBoxParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DenseBoxParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.DenseBoxParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&num_of_classes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&det_threshold_) -
        reinterpret_cast<char*>(&num_of_classes_)) + sizeof(det_threshold_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DenseBoxParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.DenseBoxParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_of_classes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_num_of_classes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_of_classes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float nms_threshold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_nms_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nms_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float det_threshold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_det_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &det_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.DenseBoxParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.DenseBoxParam)
  return false;
#undef DO_
}

void DenseBoxParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.DenseBoxParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_of_classes = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_of_classes(), output);
  }

  // optional float nms_threshold = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->nms_threshold(), output);
  }

  // optional float det_threshold = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->det_threshold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.DenseBoxParam)
}

::google::protobuf::uint8* DenseBoxParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.DenseBoxParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_of_classes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_of_classes(), target);
  }

  // optional float nms_threshold = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->nms_threshold(), target);
  }

  // optional float det_threshold = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->det_threshold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.DenseBoxParam)
  return target;
}

size_t DenseBoxParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.DenseBoxParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 num_of_classes = 1;
    if (has_num_of_classes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_of_classes());
    }

    // optional float nms_threshold = 2;
    if (has_nms_threshold()) {
      total_size += 1 + 4;
    }

    // optional float det_threshold = 3;
    if (has_det_threshold()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DenseBoxParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.DenseBoxParam)
  GOOGLE_DCHECK_NE(&from, this);
  const DenseBoxParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DenseBoxParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.DenseBoxParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.DenseBoxParam)
    MergeFrom(*source);
  }
}

void DenseBoxParam::MergeFrom(const DenseBoxParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.DenseBoxParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      num_of_classes_ = from.num_of_classes_;
    }
    if (cached_has_bits & 0x00000002u) {
      nms_threshold_ = from.nms_threshold_;
    }
    if (cached_has_bits & 0x00000004u) {
      det_threshold_ = from.det_threshold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DenseBoxParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.DenseBoxParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DenseBoxParam::CopyFrom(const DenseBoxParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.DenseBoxParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DenseBoxParam::IsInitialized() const {
  return true;
}

void DenseBoxParam::Swap(DenseBoxParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DenseBoxParam::InternalSwap(DenseBoxParam* other) {
  using std::swap;
  swap(num_of_classes_, other->num_of_classes_);
  swap(nms_threshold_, other->nms_threshold_);
  swap(det_threshold_, other->det_threshold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DenseBoxParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DenseBoxParam

// optional int32 num_of_classes = 1;
bool DenseBoxParam::has_num_of_classes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DenseBoxParam::set_has_num_of_classes() {
  _has_bits_[0] |= 0x00000001u;
}
void DenseBoxParam::clear_has_num_of_classes() {
  _has_bits_[0] &= ~0x00000001u;
}
void DenseBoxParam::clear_num_of_classes() {
  num_of_classes_ = 0;
  clear_has_num_of_classes();
}
::google::protobuf::int32 DenseBoxParam::num_of_classes() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DenseBoxParam.num_of_classes)
  return num_of_classes_;
}
void DenseBoxParam::set_num_of_classes(::google::protobuf::int32 value) {
  set_has_num_of_classes();
  num_of_classes_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.DenseBoxParam.num_of_classes)
}

// optional float nms_threshold = 2;
bool DenseBoxParam::has_nms_threshold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DenseBoxParam::set_has_nms_threshold() {
  _has_bits_[0] |= 0x00000002u;
}
void DenseBoxParam::clear_has_nms_threshold() {
  _has_bits_[0] &= ~0x00000002u;
}
void DenseBoxParam::clear_nms_threshold() {
  nms_threshold_ = 0;
  clear_has_nms_threshold();
}
float DenseBoxParam::nms_threshold() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DenseBoxParam.nms_threshold)
  return nms_threshold_;
}
void DenseBoxParam::set_nms_threshold(float value) {
  set_has_nms_threshold();
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.DenseBoxParam.nms_threshold)
}

// optional float det_threshold = 3;
bool DenseBoxParam::has_det_threshold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DenseBoxParam::set_has_det_threshold() {
  _has_bits_[0] |= 0x00000004u;
}
void DenseBoxParam::clear_has_det_threshold() {
  _has_bits_[0] &= ~0x00000004u;
}
void DenseBoxParam::clear_det_threshold() {
  det_threshold_ = 0;
  clear_has_det_threshold();
}
float DenseBoxParam::det_threshold() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DenseBoxParam.det_threshold)
  return det_threshold_;
}
void DenseBoxParam::set_det_threshold(float value) {
  set_has_det_threshold();
  det_threshold_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.DenseBoxParam.det_threshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiTaskParam::kThConfFieldNumber;
const int MultiTaskParam::kNumOfDetectionClassesFieldNumber;
const int MultiTaskParam::kNumOfSegmentationClassesFieldNumber;
const int MultiTaskParam::kKeepTopKFieldNumber;
const int MultiTaskParam::kTopKFieldNumber;
const int MultiTaskParam::kNmsThresholdFieldNumber;
const int MultiTaskParam::kPriorBoxParamFieldNumber;
const int MultiTaskParam::kLocNameFieldNumber;
const int MultiTaskParam::kConfNameFieldNumber;
const int MultiTaskParam::kSegNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiTaskParam::MultiTaskParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.MultiTaskParam)
}
MultiTaskParam::MultiTaskParam(const MultiTaskParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      th_conf_(from.th_conf_),
      prior_box_param_(from.prior_box_param_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_loc_name()) {
    loc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loc_name_);
  }
  conf_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_conf_name()) {
    conf_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_name_);
  }
  seg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_seg_name()) {
    seg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seg_name_);
  }
  ::memcpy(&num_of_detection_classes_, &from.num_of_detection_classes_,
    static_cast<size_t>(reinterpret_cast<char*>(&nms_threshold_) -
    reinterpret_cast<char*>(&num_of_detection_classes_)) + sizeof(nms_threshold_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.MultiTaskParam)
}

void MultiTaskParam::SharedCtor() {
  _cached_size_ = 0;
  loc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_of_detection_classes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nms_threshold_) -
      reinterpret_cast<char*>(&num_of_detection_classes_)) + sizeof(nms_threshold_));
}

MultiTaskParam::~MultiTaskParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.MultiTaskParam)
  SharedDtor();
}

void MultiTaskParam::SharedDtor() {
  loc_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seg_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MultiTaskParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultiTaskParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiTaskParam& MultiTaskParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

MultiTaskParam* MultiTaskParam::New(::google::protobuf::Arena* arena) const {
  MultiTaskParam* n = new MultiTaskParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MultiTaskParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.MultiTaskParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  th_conf_.Clear();
  prior_box_param_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!loc_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*loc_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!conf_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*conf_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!seg_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*seg_name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&num_of_detection_classes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nms_threshold_) -
        reinterpret_cast<char*>(&num_of_detection_classes_)) + sizeof(nms_threshold_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MultiTaskParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.MultiTaskParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float th_conf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_th_conf())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_th_conf())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_of_detection_classes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_of_detection_classes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_of_detection_classes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_of_segmentation_classes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_of_segmentation_classes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_of_segmentation_classes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 keep_top_k = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_keep_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keep_top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 top_k = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float nms_threshold = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_nms_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nms_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prior_box_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string loc_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loc_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loc_name().data(), static_cast<int>(this->loc_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.MultiTaskParam.loc_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string conf_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conf_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->conf_name().data(), static_cast<int>(this->conf_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.MultiTaskParam.conf_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string seg_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seg_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->seg_name().data(), static_cast<int>(this->seg_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.MultiTaskParam.seg_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.MultiTaskParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.MultiTaskParam)
  return false;
#undef DO_
}

void MultiTaskParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.MultiTaskParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float th_conf = 1;
  for (int i = 0, n = this->th_conf_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->th_conf(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 num_of_detection_classes = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_of_detection_classes(), output);
  }

  // optional int32 num_of_segmentation_classes = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_of_segmentation_classes(), output);
  }

  // optional int32 keep_top_k = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->keep_top_k(), output);
  }

  // optional int32 top_k = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->top_k(), output);
  }

  // optional float nms_threshold = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->nms_threshold(), output);
  }

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prior_box_param_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->prior_box_param(static_cast<int>(i)), output);
  }

  // optional string loc_name = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loc_name().data(), static_cast<int>(this->loc_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.MultiTaskParam.loc_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->loc_name(), output);
  }

  // optional string conf_name = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->conf_name().data(), static_cast<int>(this->conf_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.MultiTaskParam.conf_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->conf_name(), output);
  }

  // optional string seg_name = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->seg_name().data(), static_cast<int>(this->seg_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.MultiTaskParam.seg_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->seg_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.MultiTaskParam)
}

::google::protobuf::uint8* MultiTaskParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.MultiTaskParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float th_conf = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->th_conf_, target);

  cached_has_bits = _has_bits_[0];
  // optional int32 num_of_detection_classes = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_of_detection_classes(), target);
  }

  // optional int32 num_of_segmentation_classes = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_of_segmentation_classes(), target);
  }

  // optional int32 keep_top_k = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->keep_top_k(), target);
  }

  // optional int32 top_k = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->top_k(), target);
  }

  // optional float nms_threshold = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->nms_threshold(), target);
  }

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prior_box_param_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->prior_box_param(static_cast<int>(i)), deterministic, target);
  }

  // optional string loc_name = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loc_name().data(), static_cast<int>(this->loc_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.MultiTaskParam.loc_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->loc_name(), target);
  }

  // optional string conf_name = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->conf_name().data(), static_cast<int>(this->conf_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.MultiTaskParam.conf_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->conf_name(), target);
  }

  // optional string seg_name = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->seg_name().data(), static_cast<int>(this->seg_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.MultiTaskParam.seg_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->seg_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.MultiTaskParam)
  return target;
}

size_t MultiTaskParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.MultiTaskParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float th_conf = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->th_conf_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->th_conf_size());
    total_size += data_size;
  }

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->prior_box_param_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prior_box_param(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string loc_name = 8;
    if (has_loc_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->loc_name());
    }

    // optional string conf_name = 9;
    if (has_conf_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->conf_name());
    }

    // optional string seg_name = 10;
    if (has_seg_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->seg_name());
    }

    // optional int32 num_of_detection_classes = 2;
    if (has_num_of_detection_classes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_of_detection_classes());
    }

    // optional int32 num_of_segmentation_classes = 3;
    if (has_num_of_segmentation_classes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_of_segmentation_classes());
    }

    // optional int32 keep_top_k = 4;
    if (has_keep_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keep_top_k());
    }

    // optional int32 top_k = 5;
    if (has_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_k());
    }

    // optional float nms_threshold = 6;
    if (has_nms_threshold()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MultiTaskParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.MultiTaskParam)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiTaskParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiTaskParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.MultiTaskParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.MultiTaskParam)
    MergeFrom(*source);
  }
}

void MultiTaskParam::MergeFrom(const MultiTaskParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.MultiTaskParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  th_conf_.MergeFrom(from.th_conf_);
  prior_box_param_.MergeFrom(from.prior_box_param_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_loc_name();
      loc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loc_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_conf_name();
      conf_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_seg_name();
      seg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seg_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      num_of_detection_classes_ = from.num_of_detection_classes_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_of_segmentation_classes_ = from.num_of_segmentation_classes_;
    }
    if (cached_has_bits & 0x00000020u) {
      keep_top_k_ = from.keep_top_k_;
    }
    if (cached_has_bits & 0x00000040u) {
      top_k_ = from.top_k_;
    }
    if (cached_has_bits & 0x00000080u) {
      nms_threshold_ = from.nms_threshold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MultiTaskParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.MultiTaskParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiTaskParam::CopyFrom(const MultiTaskParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.MultiTaskParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiTaskParam::IsInitialized() const {
  return true;
}

void MultiTaskParam::Swap(MultiTaskParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiTaskParam::InternalSwap(MultiTaskParam* other) {
  using std::swap;
  th_conf_.InternalSwap(&other->th_conf_);
  prior_box_param_.InternalSwap(&other->prior_box_param_);
  loc_name_.Swap(&other->loc_name_);
  conf_name_.Swap(&other->conf_name_);
  seg_name_.Swap(&other->seg_name_);
  swap(num_of_detection_classes_, other->num_of_detection_classes_);
  swap(num_of_segmentation_classes_, other->num_of_segmentation_classes_);
  swap(keep_top_k_, other->keep_top_k_);
  swap(top_k_, other->top_k_);
  swap(nms_threshold_, other->nms_threshold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MultiTaskParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MultiTaskParam

// repeated float th_conf = 1;
int MultiTaskParam::th_conf_size() const {
  return th_conf_.size();
}
void MultiTaskParam::clear_th_conf() {
  th_conf_.Clear();
}
float MultiTaskParam::th_conf(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.MultiTaskParam.th_conf)
  return th_conf_.Get(index);
}
void MultiTaskParam::set_th_conf(int index, float value) {
  th_conf_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.MultiTaskParam.th_conf)
}
void MultiTaskParam::add_th_conf(float value) {
  th_conf_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.MultiTaskParam.th_conf)
}
const ::google::protobuf::RepeatedField< float >&
MultiTaskParam::th_conf() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.MultiTaskParam.th_conf)
  return th_conf_;
}
::google::protobuf::RepeatedField< float >*
MultiTaskParam::mutable_th_conf() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.MultiTaskParam.th_conf)
  return &th_conf_;
}

// optional int32 num_of_detection_classes = 2;
bool MultiTaskParam::has_num_of_detection_classes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MultiTaskParam::set_has_num_of_detection_classes() {
  _has_bits_[0] |= 0x00000008u;
}
void MultiTaskParam::clear_has_num_of_detection_classes() {
  _has_bits_[0] &= ~0x00000008u;
}
void MultiTaskParam::clear_num_of_detection_classes() {
  num_of_detection_classes_ = 0;
  clear_has_num_of_detection_classes();
}
::google::protobuf::int32 MultiTaskParam::num_of_detection_classes() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.MultiTaskParam.num_of_detection_classes)
  return num_of_detection_classes_;
}
void MultiTaskParam::set_num_of_detection_classes(::google::protobuf::int32 value) {
  set_has_num_of_detection_classes();
  num_of_detection_classes_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.MultiTaskParam.num_of_detection_classes)
}

// optional int32 num_of_segmentation_classes = 3;
bool MultiTaskParam::has_num_of_segmentation_classes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MultiTaskParam::set_has_num_of_segmentation_classes() {
  _has_bits_[0] |= 0x00000010u;
}
void MultiTaskParam::clear_has_num_of_segmentation_classes() {
  _has_bits_[0] &= ~0x00000010u;
}
void MultiTaskParam::clear_num_of_segmentation_classes() {
  num_of_segmentation_classes_ = 0;
  clear_has_num_of_segmentation_classes();
}
::google::protobuf::int32 MultiTaskParam::num_of_segmentation_classes() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.MultiTaskParam.num_of_segmentation_classes)
  return num_of_segmentation_classes_;
}
void MultiTaskParam::set_num_of_segmentation_classes(::google::protobuf::int32 value) {
  set_has_num_of_segmentation_classes();
  num_of_segmentation_classes_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.MultiTaskParam.num_of_segmentation_classes)
}

// optional int32 keep_top_k = 4;
bool MultiTaskParam::has_keep_top_k() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MultiTaskParam::set_has_keep_top_k() {
  _has_bits_[0] |= 0x00000020u;
}
void MultiTaskParam::clear_has_keep_top_k() {
  _has_bits_[0] &= ~0x00000020u;
}
void MultiTaskParam::clear_keep_top_k() {
  keep_top_k_ = 0;
  clear_has_keep_top_k();
}
::google::protobuf::int32 MultiTaskParam::keep_top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.MultiTaskParam.keep_top_k)
  return keep_top_k_;
}
void MultiTaskParam::set_keep_top_k(::google::protobuf::int32 value) {
  set_has_keep_top_k();
  keep_top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.MultiTaskParam.keep_top_k)
}

// optional int32 top_k = 5;
bool MultiTaskParam::has_top_k() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MultiTaskParam::set_has_top_k() {
  _has_bits_[0] |= 0x00000040u;
}
void MultiTaskParam::clear_has_top_k() {
  _has_bits_[0] &= ~0x00000040u;
}
void MultiTaskParam::clear_top_k() {
  top_k_ = 0;
  clear_has_top_k();
}
::google::protobuf::int32 MultiTaskParam::top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.MultiTaskParam.top_k)
  return top_k_;
}
void MultiTaskParam::set_top_k(::google::protobuf::int32 value) {
  set_has_top_k();
  top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.MultiTaskParam.top_k)
}

// optional float nms_threshold = 6;
bool MultiTaskParam::has_nms_threshold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MultiTaskParam::set_has_nms_threshold() {
  _has_bits_[0] |= 0x00000080u;
}
void MultiTaskParam::clear_has_nms_threshold() {
  _has_bits_[0] &= ~0x00000080u;
}
void MultiTaskParam::clear_nms_threshold() {
  nms_threshold_ = 0;
  clear_has_nms_threshold();
}
float MultiTaskParam::nms_threshold() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.MultiTaskParam.nms_threshold)
  return nms_threshold_;
}
void MultiTaskParam::set_nms_threshold(float value) {
  set_has_nms_threshold();
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.MultiTaskParam.nms_threshold)
}

// repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 7;
int MultiTaskParam::prior_box_param_size() const {
  return prior_box_param_.size();
}
void MultiTaskParam::clear_prior_box_param() {
  prior_box_param_.Clear();
}
const ::vitis::ai::proto::PriorBoxParam& MultiTaskParam::prior_box_param(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.MultiTaskParam.prior_box_param)
  return prior_box_param_.Get(index);
}
::vitis::ai::proto::PriorBoxParam* MultiTaskParam::mutable_prior_box_param(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.MultiTaskParam.prior_box_param)
  return prior_box_param_.Mutable(index);
}
::vitis::ai::proto::PriorBoxParam* MultiTaskParam::add_prior_box_param() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.MultiTaskParam.prior_box_param)
  return prior_box_param_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::PriorBoxParam >*
MultiTaskParam::mutable_prior_box_param() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.MultiTaskParam.prior_box_param)
  return &prior_box_param_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::PriorBoxParam >&
MultiTaskParam::prior_box_param() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.MultiTaskParam.prior_box_param)
  return prior_box_param_;
}

// optional string loc_name = 8;
bool MultiTaskParam::has_loc_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MultiTaskParam::set_has_loc_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MultiTaskParam::clear_has_loc_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MultiTaskParam::clear_loc_name() {
  loc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_loc_name();
}
const ::std::string& MultiTaskParam::loc_name() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.MultiTaskParam.loc_name)
  return loc_name_.GetNoArena();
}
void MultiTaskParam::set_loc_name(const ::std::string& value) {
  set_has_loc_name();
  loc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.MultiTaskParam.loc_name)
}
#if LANG_CXX11
void MultiTaskParam::set_loc_name(::std::string&& value) {
  set_has_loc_name();
  loc_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.MultiTaskParam.loc_name)
}
#endif
void MultiTaskParam::set_loc_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_loc_name();
  loc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.MultiTaskParam.loc_name)
}
void MultiTaskParam::set_loc_name(const char* value, size_t size) {
  set_has_loc_name();
  loc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.MultiTaskParam.loc_name)
}
::std::string* MultiTaskParam::mutable_loc_name() {
  set_has_loc_name();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.MultiTaskParam.loc_name)
  return loc_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MultiTaskParam::release_loc_name() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.MultiTaskParam.loc_name)
  clear_has_loc_name();
  return loc_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MultiTaskParam::set_allocated_loc_name(::std::string* loc_name) {
  if (loc_name != NULL) {
    set_has_loc_name();
  } else {
    clear_has_loc_name();
  }
  loc_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loc_name);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.MultiTaskParam.loc_name)
}

// optional string conf_name = 9;
bool MultiTaskParam::has_conf_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MultiTaskParam::set_has_conf_name() {
  _has_bits_[0] |= 0x00000002u;
}
void MultiTaskParam::clear_has_conf_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void MultiTaskParam::clear_conf_name() {
  conf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_conf_name();
}
const ::std::string& MultiTaskParam::conf_name() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.MultiTaskParam.conf_name)
  return conf_name_.GetNoArena();
}
void MultiTaskParam::set_conf_name(const ::std::string& value) {
  set_has_conf_name();
  conf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.MultiTaskParam.conf_name)
}
#if LANG_CXX11
void MultiTaskParam::set_conf_name(::std::string&& value) {
  set_has_conf_name();
  conf_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.MultiTaskParam.conf_name)
}
#endif
void MultiTaskParam::set_conf_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_conf_name();
  conf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.MultiTaskParam.conf_name)
}
void MultiTaskParam::set_conf_name(const char* value, size_t size) {
  set_has_conf_name();
  conf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.MultiTaskParam.conf_name)
}
::std::string* MultiTaskParam::mutable_conf_name() {
  set_has_conf_name();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.MultiTaskParam.conf_name)
  return conf_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MultiTaskParam::release_conf_name() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.MultiTaskParam.conf_name)
  clear_has_conf_name();
  return conf_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MultiTaskParam::set_allocated_conf_name(::std::string* conf_name) {
  if (conf_name != NULL) {
    set_has_conf_name();
  } else {
    clear_has_conf_name();
  }
  conf_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conf_name);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.MultiTaskParam.conf_name)
}

// optional string seg_name = 10;
bool MultiTaskParam::has_seg_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MultiTaskParam::set_has_seg_name() {
  _has_bits_[0] |= 0x00000004u;
}
void MultiTaskParam::clear_has_seg_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void MultiTaskParam::clear_seg_name() {
  seg_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_seg_name();
}
const ::std::string& MultiTaskParam::seg_name() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.MultiTaskParam.seg_name)
  return seg_name_.GetNoArena();
}
void MultiTaskParam::set_seg_name(const ::std::string& value) {
  set_has_seg_name();
  seg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.MultiTaskParam.seg_name)
}
#if LANG_CXX11
void MultiTaskParam::set_seg_name(::std::string&& value) {
  set_has_seg_name();
  seg_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.MultiTaskParam.seg_name)
}
#endif
void MultiTaskParam::set_seg_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_seg_name();
  seg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.MultiTaskParam.seg_name)
}
void MultiTaskParam::set_seg_name(const char* value, size_t size) {
  set_has_seg_name();
  seg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.MultiTaskParam.seg_name)
}
::std::string* MultiTaskParam::mutable_seg_name() {
  set_has_seg_name();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.MultiTaskParam.seg_name)
  return seg_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MultiTaskParam::release_seg_name() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.MultiTaskParam.seg_name)
  clear_has_seg_name();
  return seg_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MultiTaskParam::set_allocated_seg_name(::std::string* seg_name) {
  if (seg_name != NULL) {
    set_has_seg_name();
  } else {
    clear_has_seg_name();
  }
  seg_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seg_name);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.MultiTaskParam.seg_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoadlineParam::kRatioFieldNumber;
const int RoadlineParam::kIpmWidthFieldNumber;
const int RoadlineParam::kIpmHeightFieldNumber;
const int RoadlineParam::kIpmLeftFieldNumber;
const int RoadlineParam::kIpmRightFieldNumber;
const int RoadlineParam::kIpmTopFieldNumber;
const int RoadlineParam::kIpmBottomFieldNumber;
const int RoadlineParam::kIpmInterpolationFieldNumber;
const int RoadlineParam::kIpmVpPortionFieldNumber;
const int RoadlineParam::kFocalLengthXFieldNumber;
const int RoadlineParam::kFocalLengthYFieldNumber;
const int RoadlineParam::kOpticalCenterXFieldNumber;
const int RoadlineParam::kOpticalCenterYFieldNumber;
const int RoadlineParam::kCameraHeightFieldNumber;
const int RoadlineParam::kPitchFieldNumber;
const int RoadlineParam::kYawFieldNumber;
const int RoadlineParam::kLayerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoadlineParam::RoadlineParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.RoadlineParam)
}
RoadlineParam::RoadlineParam(const RoadlineParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      layer_name_(from.layer_name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ratio_, &from.ratio_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&ratio_)) + sizeof(yaw_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.RoadlineParam)
}

void RoadlineParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ratio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&ratio_)) + sizeof(yaw_));
}

RoadlineParam::~RoadlineParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.RoadlineParam)
  SharedDtor();
}

void RoadlineParam::SharedDtor() {
}

void RoadlineParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoadlineParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoadlineParam& RoadlineParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoadlineParam* RoadlineParam::New(::google::protobuf::Arena* arena) const {
  RoadlineParam* n = new RoadlineParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoadlineParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.RoadlineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  layer_name_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&ratio_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ipm_interpolation_) -
        reinterpret_cast<char*>(&ratio_)) + sizeof(ipm_interpolation_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&ipm_vp_portion_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yaw_) -
        reinterpret_cast<char*>(&ipm_vp_portion_)) + sizeof(yaw_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoadlineParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.RoadlineParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ratio = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ipm_width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_ipm_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ipm_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ipm_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_ipm_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ipm_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ipm_left = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_ipm_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ipm_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ipm_right = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_ipm_right();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ipm_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ipm_top = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_ipm_top();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ipm_top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ipm_bottom = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_ipm_bottom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ipm_bottom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ipm_interpolation = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_ipm_interpolation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ipm_interpolation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ipm_vp_portion = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_ipm_vp_portion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ipm_vp_portion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float focal_length_x = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          set_has_focal_length_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &focal_length_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float focal_length_y = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_focal_length_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &focal_length_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float optical_center_x = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          set_has_optical_center_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optical_center_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float optical_center_y = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {
          set_has_optical_center_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optical_center_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float camera_height = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {
          set_has_camera_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &camera_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pitch = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float yaw = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {
          set_has_yaw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string layer_name = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_layer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer_name(this->layer_name_size() - 1).data(),
            static_cast<int>(this->layer_name(this->layer_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.RoadlineParam.layer_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.RoadlineParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.RoadlineParam)
  return false;
#undef DO_
}

void RoadlineParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.RoadlineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ratio = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ratio(), output);
  }

  // optional float ipm_width = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->ipm_width(), output);
  }

  // optional float ipm_height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ipm_height(), output);
  }

  // optional float ipm_left = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ipm_left(), output);
  }

  // optional float ipm_right = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->ipm_right(), output);
  }

  // optional float ipm_top = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->ipm_top(), output);
  }

  // optional float ipm_bottom = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->ipm_bottom(), output);
  }

  // optional float ipm_interpolation = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->ipm_interpolation(), output);
  }

  // optional float ipm_vp_portion = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->ipm_vp_portion(), output);
  }

  // optional float focal_length_x = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->focal_length_x(), output);
  }

  // optional float focal_length_y = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->focal_length_y(), output);
  }

  // optional float optical_center_x = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->optical_center_x(), output);
  }

  // optional float optical_center_y = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->optical_center_y(), output);
  }

  // optional float camera_height = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->camera_height(), output);
  }

  // optional float pitch = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->pitch(), output);
  }

  // optional float yaw = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->yaw(), output);
  }

  // repeated string layer_name = 17;
  for (int i = 0, n = this->layer_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_name(i).data(), static_cast<int>(this->layer_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.RoadlineParam.layer_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->layer_name(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.RoadlineParam)
}

::google::protobuf::uint8* RoadlineParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.RoadlineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ratio = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ratio(), target);
  }

  // optional float ipm_width = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->ipm_width(), target);
  }

  // optional float ipm_height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ipm_height(), target);
  }

  // optional float ipm_left = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->ipm_left(), target);
  }

  // optional float ipm_right = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->ipm_right(), target);
  }

  // optional float ipm_top = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->ipm_top(), target);
  }

  // optional float ipm_bottom = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->ipm_bottom(), target);
  }

  // optional float ipm_interpolation = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->ipm_interpolation(), target);
  }

  // optional float ipm_vp_portion = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->ipm_vp_portion(), target);
  }

  // optional float focal_length_x = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->focal_length_x(), target);
  }

  // optional float focal_length_y = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->focal_length_y(), target);
  }

  // optional float optical_center_x = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->optical_center_x(), target);
  }

  // optional float optical_center_y = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->optical_center_y(), target);
  }

  // optional float camera_height = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->camera_height(), target);
  }

  // optional float pitch = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->pitch(), target);
  }

  // optional float yaw = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->yaw(), target);
  }

  // repeated string layer_name = 17;
  for (int i = 0, n = this->layer_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_name(i).data(), static_cast<int>(this->layer_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.RoadlineParam.layer_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(17, this->layer_name(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.RoadlineParam)
  return target;
}

size_t RoadlineParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.RoadlineParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string layer_name = 17;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->layer_name_size());
  for (int i = 0, n = this->layer_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->layer_name(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 ratio = 1;
    if (has_ratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ratio());
    }

    // optional float ipm_width = 2;
    if (has_ipm_width()) {
      total_size += 1 + 4;
    }

    // optional float ipm_height = 3;
    if (has_ipm_height()) {
      total_size += 1 + 4;
    }

    // optional float ipm_left = 4;
    if (has_ipm_left()) {
      total_size += 1 + 4;
    }

    // optional float ipm_right = 5;
    if (has_ipm_right()) {
      total_size += 1 + 4;
    }

    // optional float ipm_top = 6;
    if (has_ipm_top()) {
      total_size += 1 + 4;
    }

    // optional float ipm_bottom = 7;
    if (has_ipm_bottom()) {
      total_size += 1 + 4;
    }

    // optional float ipm_interpolation = 8;
    if (has_ipm_interpolation()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional float ipm_vp_portion = 9;
    if (has_ipm_vp_portion()) {
      total_size += 1 + 4;
    }

    // optional float focal_length_x = 10;
    if (has_focal_length_x()) {
      total_size += 1 + 4;
    }

    // optional float focal_length_y = 11;
    if (has_focal_length_y()) {
      total_size += 1 + 4;
    }

    // optional float optical_center_x = 12;
    if (has_optical_center_x()) {
      total_size += 1 + 4;
    }

    // optional float optical_center_y = 13;
    if (has_optical_center_y()) {
      total_size += 1 + 4;
    }

    // optional float camera_height = 14;
    if (has_camera_height()) {
      total_size += 1 + 4;
    }

    // optional float pitch = 15;
    if (has_pitch()) {
      total_size += 1 + 4;
    }

    // optional float yaw = 16;
    if (has_yaw()) {
      total_size += 2 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoadlineParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.RoadlineParam)
  GOOGLE_DCHECK_NE(&from, this);
  const RoadlineParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoadlineParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.RoadlineParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.RoadlineParam)
    MergeFrom(*source);
  }
}

void RoadlineParam::MergeFrom(const RoadlineParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.RoadlineParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  layer_name_.MergeFrom(from.layer_name_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      ratio_ = from.ratio_;
    }
    if (cached_has_bits & 0x00000002u) {
      ipm_width_ = from.ipm_width_;
    }
    if (cached_has_bits & 0x00000004u) {
      ipm_height_ = from.ipm_height_;
    }
    if (cached_has_bits & 0x00000008u) {
      ipm_left_ = from.ipm_left_;
    }
    if (cached_has_bits & 0x00000010u) {
      ipm_right_ = from.ipm_right_;
    }
    if (cached_has_bits & 0x00000020u) {
      ipm_top_ = from.ipm_top_;
    }
    if (cached_has_bits & 0x00000040u) {
      ipm_bottom_ = from.ipm_bottom_;
    }
    if (cached_has_bits & 0x00000080u) {
      ipm_interpolation_ = from.ipm_interpolation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      ipm_vp_portion_ = from.ipm_vp_portion_;
    }
    if (cached_has_bits & 0x00000200u) {
      focal_length_x_ = from.focal_length_x_;
    }
    if (cached_has_bits & 0x00000400u) {
      focal_length_y_ = from.focal_length_y_;
    }
    if (cached_has_bits & 0x00000800u) {
      optical_center_x_ = from.optical_center_x_;
    }
    if (cached_has_bits & 0x00001000u) {
      optical_center_y_ = from.optical_center_y_;
    }
    if (cached_has_bits & 0x00002000u) {
      camera_height_ = from.camera_height_;
    }
    if (cached_has_bits & 0x00004000u) {
      pitch_ = from.pitch_;
    }
    if (cached_has_bits & 0x00008000u) {
      yaw_ = from.yaw_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoadlineParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.RoadlineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoadlineParam::CopyFrom(const RoadlineParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.RoadlineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoadlineParam::IsInitialized() const {
  return true;
}

void RoadlineParam::Swap(RoadlineParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoadlineParam::InternalSwap(RoadlineParam* other) {
  using std::swap;
  layer_name_.InternalSwap(&other->layer_name_);
  swap(ratio_, other->ratio_);
  swap(ipm_width_, other->ipm_width_);
  swap(ipm_height_, other->ipm_height_);
  swap(ipm_left_, other->ipm_left_);
  swap(ipm_right_, other->ipm_right_);
  swap(ipm_top_, other->ipm_top_);
  swap(ipm_bottom_, other->ipm_bottom_);
  swap(ipm_interpolation_, other->ipm_interpolation_);
  swap(ipm_vp_portion_, other->ipm_vp_portion_);
  swap(focal_length_x_, other->focal_length_x_);
  swap(focal_length_y_, other->focal_length_y_);
  swap(optical_center_x_, other->optical_center_x_);
  swap(optical_center_y_, other->optical_center_y_);
  swap(camera_height_, other->camera_height_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoadlineParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoadlineParam

// optional int32 ratio = 1;
bool RoadlineParam::has_ratio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoadlineParam::set_has_ratio() {
  _has_bits_[0] |= 0x00000001u;
}
void RoadlineParam::clear_has_ratio() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoadlineParam::clear_ratio() {
  ratio_ = 0;
  clear_has_ratio();
}
::google::protobuf::int32 RoadlineParam::ratio() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.ratio)
  return ratio_;
}
void RoadlineParam::set_ratio(::google::protobuf::int32 value) {
  set_has_ratio();
  ratio_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.ratio)
}

// optional float ipm_width = 2;
bool RoadlineParam::has_ipm_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoadlineParam::set_has_ipm_width() {
  _has_bits_[0] |= 0x00000002u;
}
void RoadlineParam::clear_has_ipm_width() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoadlineParam::clear_ipm_width() {
  ipm_width_ = 0;
  clear_has_ipm_width();
}
float RoadlineParam::ipm_width() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.ipm_width)
  return ipm_width_;
}
void RoadlineParam::set_ipm_width(float value) {
  set_has_ipm_width();
  ipm_width_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.ipm_width)
}

// optional float ipm_height = 3;
bool RoadlineParam::has_ipm_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoadlineParam::set_has_ipm_height() {
  _has_bits_[0] |= 0x00000004u;
}
void RoadlineParam::clear_has_ipm_height() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoadlineParam::clear_ipm_height() {
  ipm_height_ = 0;
  clear_has_ipm_height();
}
float RoadlineParam::ipm_height() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.ipm_height)
  return ipm_height_;
}
void RoadlineParam::set_ipm_height(float value) {
  set_has_ipm_height();
  ipm_height_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.ipm_height)
}

// optional float ipm_left = 4;
bool RoadlineParam::has_ipm_left() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoadlineParam::set_has_ipm_left() {
  _has_bits_[0] |= 0x00000008u;
}
void RoadlineParam::clear_has_ipm_left() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoadlineParam::clear_ipm_left() {
  ipm_left_ = 0;
  clear_has_ipm_left();
}
float RoadlineParam::ipm_left() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.ipm_left)
  return ipm_left_;
}
void RoadlineParam::set_ipm_left(float value) {
  set_has_ipm_left();
  ipm_left_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.ipm_left)
}

// optional float ipm_right = 5;
bool RoadlineParam::has_ipm_right() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RoadlineParam::set_has_ipm_right() {
  _has_bits_[0] |= 0x00000010u;
}
void RoadlineParam::clear_has_ipm_right() {
  _has_bits_[0] &= ~0x00000010u;
}
void RoadlineParam::clear_ipm_right() {
  ipm_right_ = 0;
  clear_has_ipm_right();
}
float RoadlineParam::ipm_right() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.ipm_right)
  return ipm_right_;
}
void RoadlineParam::set_ipm_right(float value) {
  set_has_ipm_right();
  ipm_right_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.ipm_right)
}

// optional float ipm_top = 6;
bool RoadlineParam::has_ipm_top() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RoadlineParam::set_has_ipm_top() {
  _has_bits_[0] |= 0x00000020u;
}
void RoadlineParam::clear_has_ipm_top() {
  _has_bits_[0] &= ~0x00000020u;
}
void RoadlineParam::clear_ipm_top() {
  ipm_top_ = 0;
  clear_has_ipm_top();
}
float RoadlineParam::ipm_top() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.ipm_top)
  return ipm_top_;
}
void RoadlineParam::set_ipm_top(float value) {
  set_has_ipm_top();
  ipm_top_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.ipm_top)
}

// optional float ipm_bottom = 7;
bool RoadlineParam::has_ipm_bottom() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RoadlineParam::set_has_ipm_bottom() {
  _has_bits_[0] |= 0x00000040u;
}
void RoadlineParam::clear_has_ipm_bottom() {
  _has_bits_[0] &= ~0x00000040u;
}
void RoadlineParam::clear_ipm_bottom() {
  ipm_bottom_ = 0;
  clear_has_ipm_bottom();
}
float RoadlineParam::ipm_bottom() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.ipm_bottom)
  return ipm_bottom_;
}
void RoadlineParam::set_ipm_bottom(float value) {
  set_has_ipm_bottom();
  ipm_bottom_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.ipm_bottom)
}

// optional float ipm_interpolation = 8;
bool RoadlineParam::has_ipm_interpolation() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RoadlineParam::set_has_ipm_interpolation() {
  _has_bits_[0] |= 0x00000080u;
}
void RoadlineParam::clear_has_ipm_interpolation() {
  _has_bits_[0] &= ~0x00000080u;
}
void RoadlineParam::clear_ipm_interpolation() {
  ipm_interpolation_ = 0;
  clear_has_ipm_interpolation();
}
float RoadlineParam::ipm_interpolation() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.ipm_interpolation)
  return ipm_interpolation_;
}
void RoadlineParam::set_ipm_interpolation(float value) {
  set_has_ipm_interpolation();
  ipm_interpolation_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.ipm_interpolation)
}

// optional float ipm_vp_portion = 9;
bool RoadlineParam::has_ipm_vp_portion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RoadlineParam::set_has_ipm_vp_portion() {
  _has_bits_[0] |= 0x00000100u;
}
void RoadlineParam::clear_has_ipm_vp_portion() {
  _has_bits_[0] &= ~0x00000100u;
}
void RoadlineParam::clear_ipm_vp_portion() {
  ipm_vp_portion_ = 0;
  clear_has_ipm_vp_portion();
}
float RoadlineParam::ipm_vp_portion() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.ipm_vp_portion)
  return ipm_vp_portion_;
}
void RoadlineParam::set_ipm_vp_portion(float value) {
  set_has_ipm_vp_portion();
  ipm_vp_portion_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.ipm_vp_portion)
}

// optional float focal_length_x = 10;
bool RoadlineParam::has_focal_length_x() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RoadlineParam::set_has_focal_length_x() {
  _has_bits_[0] |= 0x00000200u;
}
void RoadlineParam::clear_has_focal_length_x() {
  _has_bits_[0] &= ~0x00000200u;
}
void RoadlineParam::clear_focal_length_x() {
  focal_length_x_ = 0;
  clear_has_focal_length_x();
}
float RoadlineParam::focal_length_x() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.focal_length_x)
  return focal_length_x_;
}
void RoadlineParam::set_focal_length_x(float value) {
  set_has_focal_length_x();
  focal_length_x_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.focal_length_x)
}

// optional float focal_length_y = 11;
bool RoadlineParam::has_focal_length_y() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void RoadlineParam::set_has_focal_length_y() {
  _has_bits_[0] |= 0x00000400u;
}
void RoadlineParam::clear_has_focal_length_y() {
  _has_bits_[0] &= ~0x00000400u;
}
void RoadlineParam::clear_focal_length_y() {
  focal_length_y_ = 0;
  clear_has_focal_length_y();
}
float RoadlineParam::focal_length_y() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.focal_length_y)
  return focal_length_y_;
}
void RoadlineParam::set_focal_length_y(float value) {
  set_has_focal_length_y();
  focal_length_y_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.focal_length_y)
}

// optional float optical_center_x = 12;
bool RoadlineParam::has_optical_center_x() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void RoadlineParam::set_has_optical_center_x() {
  _has_bits_[0] |= 0x00000800u;
}
void RoadlineParam::clear_has_optical_center_x() {
  _has_bits_[0] &= ~0x00000800u;
}
void RoadlineParam::clear_optical_center_x() {
  optical_center_x_ = 0;
  clear_has_optical_center_x();
}
float RoadlineParam::optical_center_x() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.optical_center_x)
  return optical_center_x_;
}
void RoadlineParam::set_optical_center_x(float value) {
  set_has_optical_center_x();
  optical_center_x_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.optical_center_x)
}

// optional float optical_center_y = 13;
bool RoadlineParam::has_optical_center_y() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void RoadlineParam::set_has_optical_center_y() {
  _has_bits_[0] |= 0x00001000u;
}
void RoadlineParam::clear_has_optical_center_y() {
  _has_bits_[0] &= ~0x00001000u;
}
void RoadlineParam::clear_optical_center_y() {
  optical_center_y_ = 0;
  clear_has_optical_center_y();
}
float RoadlineParam::optical_center_y() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.optical_center_y)
  return optical_center_y_;
}
void RoadlineParam::set_optical_center_y(float value) {
  set_has_optical_center_y();
  optical_center_y_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.optical_center_y)
}

// optional float camera_height = 14;
bool RoadlineParam::has_camera_height() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void RoadlineParam::set_has_camera_height() {
  _has_bits_[0] |= 0x00002000u;
}
void RoadlineParam::clear_has_camera_height() {
  _has_bits_[0] &= ~0x00002000u;
}
void RoadlineParam::clear_camera_height() {
  camera_height_ = 0;
  clear_has_camera_height();
}
float RoadlineParam::camera_height() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.camera_height)
  return camera_height_;
}
void RoadlineParam::set_camera_height(float value) {
  set_has_camera_height();
  camera_height_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.camera_height)
}

// optional float pitch = 15;
bool RoadlineParam::has_pitch() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void RoadlineParam::set_has_pitch() {
  _has_bits_[0] |= 0x00004000u;
}
void RoadlineParam::clear_has_pitch() {
  _has_bits_[0] &= ~0x00004000u;
}
void RoadlineParam::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
float RoadlineParam::pitch() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.pitch)
  return pitch_;
}
void RoadlineParam::set_pitch(float value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.pitch)
}

// optional float yaw = 16;
bool RoadlineParam::has_yaw() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void RoadlineParam::set_has_yaw() {
  _has_bits_[0] |= 0x00008000u;
}
void RoadlineParam::clear_has_yaw() {
  _has_bits_[0] &= ~0x00008000u;
}
void RoadlineParam::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
float RoadlineParam::yaw() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.yaw)
  return yaw_;
}
void RoadlineParam::set_yaw(float value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.yaw)
}

// repeated string layer_name = 17;
int RoadlineParam::layer_name_size() const {
  return layer_name_.size();
}
void RoadlineParam::clear_layer_name() {
  layer_name_.Clear();
}
const ::std::string& RoadlineParam::layer_name(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineParam.layer_name)
  return layer_name_.Get(index);
}
::std::string* RoadlineParam::mutable_layer_name(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.RoadlineParam.layer_name)
  return layer_name_.Mutable(index);
}
void RoadlineParam::set_layer_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.layer_name)
  layer_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void RoadlineParam::set_layer_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineParam.layer_name)
  layer_name_.Mutable(index)->assign(std::move(value));
}
#endif
void RoadlineParam::set_layer_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  layer_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.RoadlineParam.layer_name)
}
void RoadlineParam::set_layer_name(int index, const char* value, size_t size) {
  layer_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.RoadlineParam.layer_name)
}
::std::string* RoadlineParam::add_layer_name() {
  // @@protoc_insertion_point(field_add_mutable:vitis.ai.proto.RoadlineParam.layer_name)
  return layer_name_.Add();
}
void RoadlineParam::add_layer_name(const ::std::string& value) {
  layer_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.RoadlineParam.layer_name)
}
#if LANG_CXX11
void RoadlineParam::add_layer_name(::std::string&& value) {
  layer_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:vitis.ai.proto.RoadlineParam.layer_name)
}
#endif
void RoadlineParam::add_layer_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  layer_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:vitis.ai.proto.RoadlineParam.layer_name)
}
void RoadlineParam::add_layer_name(const char* value, size_t size) {
  layer_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:vitis.ai.proto.RoadlineParam.layer_name)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RoadlineParam::layer_name() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.RoadlineParam.layer_name)
  return layer_name_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RoadlineParam::mutable_layer_name() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.RoadlineParam.layer_name)
  return &layer_name_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoadlineDeephiParam::kResizeWFieldNumber;
const int RoadlineDeephiParam::kResizeHFieldNumber;
const int RoadlineDeephiParam::kCropXFieldNumber;
const int RoadlineDeephiParam::kCropYFieldNumber;
const int RoadlineDeephiParam::kCropWFieldNumber;
const int RoadlineDeephiParam::kCropHFieldNumber;
const int RoadlineDeephiParam::kAreaThresholdFieldNumber;
const int RoadlineDeephiParam::kEpowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoadlineDeephiParam::RoadlineDeephiParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.RoadlineDeephiParam)
}
RoadlineDeephiParam::RoadlineDeephiParam(const RoadlineDeephiParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&resize_w_, &from.resize_w_,
    static_cast<size_t>(reinterpret_cast<char*>(&epow_) -
    reinterpret_cast<char*>(&resize_w_)) + sizeof(epow_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.RoadlineDeephiParam)
}

void RoadlineDeephiParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&resize_w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epow_) -
      reinterpret_cast<char*>(&resize_w_)) + sizeof(epow_));
}

RoadlineDeephiParam::~RoadlineDeephiParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.RoadlineDeephiParam)
  SharedDtor();
}

void RoadlineDeephiParam::SharedDtor() {
}

void RoadlineDeephiParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoadlineDeephiParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoadlineDeephiParam& RoadlineDeephiParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoadlineDeephiParam* RoadlineDeephiParam::New(::google::protobuf::Arena* arena) const {
  RoadlineDeephiParam* n = new RoadlineDeephiParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoadlineDeephiParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.RoadlineDeephiParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&resize_w_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&epow_) -
        reinterpret_cast<char*>(&resize_w_)) + sizeof(epow_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoadlineDeephiParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.RoadlineDeephiParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 resize_w = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_resize_w();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resize_w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 resize_h = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_resize_h();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resize_h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 crop_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_crop_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crop_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 crop_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_crop_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crop_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 crop_w = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_crop_w();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crop_w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 crop_h = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_crop_h();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crop_h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 area_threshold = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_area_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &area_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 epow = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_epow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.RoadlineDeephiParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.RoadlineDeephiParam)
  return false;
#undef DO_
}

void RoadlineDeephiParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.RoadlineDeephiParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 resize_w = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resize_w(), output);
  }

  // optional int32 resize_h = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->resize_h(), output);
  }

  // optional int32 crop_x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->crop_x(), output);
  }

  // optional int32 crop_y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->crop_y(), output);
  }

  // optional int32 crop_w = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->crop_w(), output);
  }

  // optional int32 crop_h = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->crop_h(), output);
  }

  // optional int32 area_threshold = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->area_threshold(), output);
  }

  // optional int32 epow = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->epow(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.RoadlineDeephiParam)
}

::google::protobuf::uint8* RoadlineDeephiParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.RoadlineDeephiParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 resize_w = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resize_w(), target);
  }

  // optional int32 resize_h = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->resize_h(), target);
  }

  // optional int32 crop_x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->crop_x(), target);
  }

  // optional int32 crop_y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->crop_y(), target);
  }

  // optional int32 crop_w = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->crop_w(), target);
  }

  // optional int32 crop_h = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->crop_h(), target);
  }

  // optional int32 area_threshold = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->area_threshold(), target);
  }

  // optional int32 epow = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->epow(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.RoadlineDeephiParam)
  return target;
}

size_t RoadlineDeephiParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.RoadlineDeephiParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 resize_w = 1;
    if (has_resize_w()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->resize_w());
    }

    // optional int32 resize_h = 2;
    if (has_resize_h()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->resize_h());
    }

    // optional int32 crop_x = 3;
    if (has_crop_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crop_x());
    }

    // optional int32 crop_y = 4;
    if (has_crop_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crop_y());
    }

    // optional int32 crop_w = 5;
    if (has_crop_w()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crop_w());
    }

    // optional int32 crop_h = 6;
    if (has_crop_h()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crop_h());
    }

    // optional int32 area_threshold = 7;
    if (has_area_threshold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->area_threshold());
    }

    // optional int32 epow = 8;
    if (has_epow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->epow());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoadlineDeephiParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.RoadlineDeephiParam)
  GOOGLE_DCHECK_NE(&from, this);
  const RoadlineDeephiParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoadlineDeephiParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.RoadlineDeephiParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.RoadlineDeephiParam)
    MergeFrom(*source);
  }
}

void RoadlineDeephiParam::MergeFrom(const RoadlineDeephiParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.RoadlineDeephiParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      resize_w_ = from.resize_w_;
    }
    if (cached_has_bits & 0x00000002u) {
      resize_h_ = from.resize_h_;
    }
    if (cached_has_bits & 0x00000004u) {
      crop_x_ = from.crop_x_;
    }
    if (cached_has_bits & 0x00000008u) {
      crop_y_ = from.crop_y_;
    }
    if (cached_has_bits & 0x00000010u) {
      crop_w_ = from.crop_w_;
    }
    if (cached_has_bits & 0x00000020u) {
      crop_h_ = from.crop_h_;
    }
    if (cached_has_bits & 0x00000040u) {
      area_threshold_ = from.area_threshold_;
    }
    if (cached_has_bits & 0x00000080u) {
      epow_ = from.epow_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoadlineDeephiParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.RoadlineDeephiParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoadlineDeephiParam::CopyFrom(const RoadlineDeephiParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.RoadlineDeephiParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoadlineDeephiParam::IsInitialized() const {
  return true;
}

void RoadlineDeephiParam::Swap(RoadlineDeephiParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoadlineDeephiParam::InternalSwap(RoadlineDeephiParam* other) {
  using std::swap;
  swap(resize_w_, other->resize_w_);
  swap(resize_h_, other->resize_h_);
  swap(crop_x_, other->crop_x_);
  swap(crop_y_, other->crop_y_);
  swap(crop_w_, other->crop_w_);
  swap(crop_h_, other->crop_h_);
  swap(area_threshold_, other->area_threshold_);
  swap(epow_, other->epow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoadlineDeephiParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoadlineDeephiParam

// optional int32 resize_w = 1;
bool RoadlineDeephiParam::has_resize_w() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoadlineDeephiParam::set_has_resize_w() {
  _has_bits_[0] |= 0x00000001u;
}
void RoadlineDeephiParam::clear_has_resize_w() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoadlineDeephiParam::clear_resize_w() {
  resize_w_ = 0;
  clear_has_resize_w();
}
::google::protobuf::int32 RoadlineDeephiParam::resize_w() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineDeephiParam.resize_w)
  return resize_w_;
}
void RoadlineDeephiParam::set_resize_w(::google::protobuf::int32 value) {
  set_has_resize_w();
  resize_w_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineDeephiParam.resize_w)
}

// optional int32 resize_h = 2;
bool RoadlineDeephiParam::has_resize_h() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoadlineDeephiParam::set_has_resize_h() {
  _has_bits_[0] |= 0x00000002u;
}
void RoadlineDeephiParam::clear_has_resize_h() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoadlineDeephiParam::clear_resize_h() {
  resize_h_ = 0;
  clear_has_resize_h();
}
::google::protobuf::int32 RoadlineDeephiParam::resize_h() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineDeephiParam.resize_h)
  return resize_h_;
}
void RoadlineDeephiParam::set_resize_h(::google::protobuf::int32 value) {
  set_has_resize_h();
  resize_h_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineDeephiParam.resize_h)
}

// optional int32 crop_x = 3;
bool RoadlineDeephiParam::has_crop_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoadlineDeephiParam::set_has_crop_x() {
  _has_bits_[0] |= 0x00000004u;
}
void RoadlineDeephiParam::clear_has_crop_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoadlineDeephiParam::clear_crop_x() {
  crop_x_ = 0;
  clear_has_crop_x();
}
::google::protobuf::int32 RoadlineDeephiParam::crop_x() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineDeephiParam.crop_x)
  return crop_x_;
}
void RoadlineDeephiParam::set_crop_x(::google::protobuf::int32 value) {
  set_has_crop_x();
  crop_x_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineDeephiParam.crop_x)
}

// optional int32 crop_y = 4;
bool RoadlineDeephiParam::has_crop_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoadlineDeephiParam::set_has_crop_y() {
  _has_bits_[0] |= 0x00000008u;
}
void RoadlineDeephiParam::clear_has_crop_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoadlineDeephiParam::clear_crop_y() {
  crop_y_ = 0;
  clear_has_crop_y();
}
::google::protobuf::int32 RoadlineDeephiParam::crop_y() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineDeephiParam.crop_y)
  return crop_y_;
}
void RoadlineDeephiParam::set_crop_y(::google::protobuf::int32 value) {
  set_has_crop_y();
  crop_y_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineDeephiParam.crop_y)
}

// optional int32 crop_w = 5;
bool RoadlineDeephiParam::has_crop_w() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RoadlineDeephiParam::set_has_crop_w() {
  _has_bits_[0] |= 0x00000010u;
}
void RoadlineDeephiParam::clear_has_crop_w() {
  _has_bits_[0] &= ~0x00000010u;
}
void RoadlineDeephiParam::clear_crop_w() {
  crop_w_ = 0;
  clear_has_crop_w();
}
::google::protobuf::int32 RoadlineDeephiParam::crop_w() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineDeephiParam.crop_w)
  return crop_w_;
}
void RoadlineDeephiParam::set_crop_w(::google::protobuf::int32 value) {
  set_has_crop_w();
  crop_w_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineDeephiParam.crop_w)
}

// optional int32 crop_h = 6;
bool RoadlineDeephiParam::has_crop_h() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RoadlineDeephiParam::set_has_crop_h() {
  _has_bits_[0] |= 0x00000020u;
}
void RoadlineDeephiParam::clear_has_crop_h() {
  _has_bits_[0] &= ~0x00000020u;
}
void RoadlineDeephiParam::clear_crop_h() {
  crop_h_ = 0;
  clear_has_crop_h();
}
::google::protobuf::int32 RoadlineDeephiParam::crop_h() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineDeephiParam.crop_h)
  return crop_h_;
}
void RoadlineDeephiParam::set_crop_h(::google::protobuf::int32 value) {
  set_has_crop_h();
  crop_h_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineDeephiParam.crop_h)
}

// optional int32 area_threshold = 7;
bool RoadlineDeephiParam::has_area_threshold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RoadlineDeephiParam::set_has_area_threshold() {
  _has_bits_[0] |= 0x00000040u;
}
void RoadlineDeephiParam::clear_has_area_threshold() {
  _has_bits_[0] &= ~0x00000040u;
}
void RoadlineDeephiParam::clear_area_threshold() {
  area_threshold_ = 0;
  clear_has_area_threshold();
}
::google::protobuf::int32 RoadlineDeephiParam::area_threshold() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineDeephiParam.area_threshold)
  return area_threshold_;
}
void RoadlineDeephiParam::set_area_threshold(::google::protobuf::int32 value) {
  set_has_area_threshold();
  area_threshold_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineDeephiParam.area_threshold)
}

// optional int32 epow = 8;
bool RoadlineDeephiParam::has_epow() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RoadlineDeephiParam::set_has_epow() {
  _has_bits_[0] |= 0x00000080u;
}
void RoadlineDeephiParam::clear_has_epow() {
  _has_bits_[0] &= ~0x00000080u;
}
void RoadlineDeephiParam::clear_epow() {
  epow_ = 0;
  clear_has_epow();
}
::google::protobuf::int32 RoadlineDeephiParam::epow() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineDeephiParam.epow)
  return epow_;
}
void RoadlineDeephiParam::set_epow(::google::protobuf::int32 value) {
  set_has_epow();
  epow_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.RoadlineDeephiParam.epow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SegmentationParam::kColor1FieldNumber;
const int SegmentationParam::kColor2FieldNumber;
const int SegmentationParam::kColor3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SegmentationParam::SegmentationParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.SegmentationParam)
}
SegmentationParam::SegmentationParam(const SegmentationParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  color1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_color1()) {
    color1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color1_);
  }
  color2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_color2()) {
    color2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color2_);
  }
  color3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_color3()) {
    color3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color3_);
  }
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.SegmentationParam)
}

void SegmentationParam::SharedCtor() {
  _cached_size_ = 0;
  color1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SegmentationParam::~SegmentationParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.SegmentationParam)
  SharedDtor();
}

void SegmentationParam::SharedDtor() {
  color1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SegmentationParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SegmentationParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SegmentationParam& SegmentationParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

SegmentationParam* SegmentationParam::New(::google::protobuf::Arena* arena) const {
  SegmentationParam* n = new SegmentationParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SegmentationParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.SegmentationParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!color1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*color1_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!color2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*color2_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!color3_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*color3_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SegmentationParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.SegmentationParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string color1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->color1().data(), static_cast<int>(this->color1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.SegmentationParam.color1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string color2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->color2().data(), static_cast<int>(this->color2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.SegmentationParam.color2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string color3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->color3().data(), static_cast<int>(this->color3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.SegmentationParam.color3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.SegmentationParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.SegmentationParam)
  return false;
#undef DO_
}

void SegmentationParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.SegmentationParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string color1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color1().data(), static_cast<int>(this->color1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.SegmentationParam.color1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->color1(), output);
  }

  // optional string color2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color2().data(), static_cast<int>(this->color2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.SegmentationParam.color2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->color2(), output);
  }

  // optional string color3 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color3().data(), static_cast<int>(this->color3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.SegmentationParam.color3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->color3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.SegmentationParam)
}

::google::protobuf::uint8* SegmentationParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.SegmentationParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string color1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color1().data(), static_cast<int>(this->color1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.SegmentationParam.color1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->color1(), target);
  }

  // optional string color2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color2().data(), static_cast<int>(this->color2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.SegmentationParam.color2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->color2(), target);
  }

  // optional string color3 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color3().data(), static_cast<int>(this->color3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.SegmentationParam.color3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->color3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.SegmentationParam)
  return target;
}

size_t SegmentationParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.SegmentationParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string color1 = 1;
    if (has_color1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color1());
    }

    // optional string color2 = 2;
    if (has_color2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color2());
    }

    // optional string color3 = 3;
    if (has_color3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color3());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SegmentationParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.SegmentationParam)
  GOOGLE_DCHECK_NE(&from, this);
  const SegmentationParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SegmentationParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.SegmentationParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.SegmentationParam)
    MergeFrom(*source);
  }
}

void SegmentationParam::MergeFrom(const SegmentationParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.SegmentationParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_color1();
      color1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color1_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_color2();
      color2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color2_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_color3();
      color3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color3_);
    }
  }
}

void SegmentationParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.SegmentationParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SegmentationParam::CopyFrom(const SegmentationParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.SegmentationParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SegmentationParam::IsInitialized() const {
  return true;
}

void SegmentationParam::Swap(SegmentationParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SegmentationParam::InternalSwap(SegmentationParam* other) {
  using std::swap;
  color1_.Swap(&other->color1_);
  color2_.Swap(&other->color2_);
  color3_.Swap(&other->color3_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SegmentationParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SegmentationParam

// optional string color1 = 1;
bool SegmentationParam::has_color1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SegmentationParam::set_has_color1() {
  _has_bits_[0] |= 0x00000001u;
}
void SegmentationParam::clear_has_color1() {
  _has_bits_[0] &= ~0x00000001u;
}
void SegmentationParam::clear_color1() {
  color1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_color1();
}
const ::std::string& SegmentationParam::color1() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SegmentationParam.color1)
  return color1_.GetNoArena();
}
void SegmentationParam::set_color1(const ::std::string& value) {
  set_has_color1();
  color1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SegmentationParam.color1)
}
#if LANG_CXX11
void SegmentationParam::set_color1(::std::string&& value) {
  set_has_color1();
  color1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.SegmentationParam.color1)
}
#endif
void SegmentationParam::set_color1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_color1();
  color1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.SegmentationParam.color1)
}
void SegmentationParam::set_color1(const char* value, size_t size) {
  set_has_color1();
  color1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.SegmentationParam.color1)
}
::std::string* SegmentationParam::mutable_color1() {
  set_has_color1();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.SegmentationParam.color1)
  return color1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SegmentationParam::release_color1() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.SegmentationParam.color1)
  clear_has_color1();
  return color1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SegmentationParam::set_allocated_color1(::std::string* color1) {
  if (color1 != NULL) {
    set_has_color1();
  } else {
    clear_has_color1();
  }
  color1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color1);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.SegmentationParam.color1)
}

// optional string color2 = 2;
bool SegmentationParam::has_color2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SegmentationParam::set_has_color2() {
  _has_bits_[0] |= 0x00000002u;
}
void SegmentationParam::clear_has_color2() {
  _has_bits_[0] &= ~0x00000002u;
}
void SegmentationParam::clear_color2() {
  color2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_color2();
}
const ::std::string& SegmentationParam::color2() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SegmentationParam.color2)
  return color2_.GetNoArena();
}
void SegmentationParam::set_color2(const ::std::string& value) {
  set_has_color2();
  color2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SegmentationParam.color2)
}
#if LANG_CXX11
void SegmentationParam::set_color2(::std::string&& value) {
  set_has_color2();
  color2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.SegmentationParam.color2)
}
#endif
void SegmentationParam::set_color2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_color2();
  color2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.SegmentationParam.color2)
}
void SegmentationParam::set_color2(const char* value, size_t size) {
  set_has_color2();
  color2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.SegmentationParam.color2)
}
::std::string* SegmentationParam::mutable_color2() {
  set_has_color2();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.SegmentationParam.color2)
  return color2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SegmentationParam::release_color2() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.SegmentationParam.color2)
  clear_has_color2();
  return color2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SegmentationParam::set_allocated_color2(::std::string* color2) {
  if (color2 != NULL) {
    set_has_color2();
  } else {
    clear_has_color2();
  }
  color2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color2);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.SegmentationParam.color2)
}

// optional string color3 = 3;
bool SegmentationParam::has_color3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SegmentationParam::set_has_color3() {
  _has_bits_[0] |= 0x00000004u;
}
void SegmentationParam::clear_has_color3() {
  _has_bits_[0] &= ~0x00000004u;
}
void SegmentationParam::clear_color3() {
  color3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_color3();
}
const ::std::string& SegmentationParam::color3() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SegmentationParam.color3)
  return color3_.GetNoArena();
}
void SegmentationParam::set_color3(const ::std::string& value) {
  set_has_color3();
  color3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SegmentationParam.color3)
}
#if LANG_CXX11
void SegmentationParam::set_color3(::std::string&& value) {
  set_has_color3();
  color3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.SegmentationParam.color3)
}
#endif
void SegmentationParam::set_color3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_color3();
  color3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.SegmentationParam.color3)
}
void SegmentationParam::set_color3(const char* value, size_t size) {
  set_has_color3();
  color3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.SegmentationParam.color3)
}
::std::string* SegmentationParam::mutable_color3() {
  set_has_color3();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.SegmentationParam.color3)
  return color3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SegmentationParam::release_color3() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.SegmentationParam.color3)
  clear_has_color3();
  return color3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SegmentationParam::set_allocated_color3(::std::string* color3) {
  if (color3 != NULL) {
    set_has_color3();
  } else {
    clear_has_color3();
  }
  color3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color3);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.SegmentationParam.color3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneParam::kRoiXFieldNumber;
const int LaneParam::kRoiYFieldNumber;
const int LaneParam::kExpectHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneParam::LaneParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.LaneParam)
}
LaneParam::LaneParam(const LaneParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roi_x_, &from.roi_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&expect_height_) -
    reinterpret_cast<char*>(&roi_x_)) + sizeof(expect_height_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.LaneParam)
}

void LaneParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&roi_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expect_height_) -
      reinterpret_cast<char*>(&roi_x_)) + sizeof(expect_height_));
}

LaneParam::~LaneParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.LaneParam)
  SharedDtor();
}

void LaneParam::SharedDtor() {
}

void LaneParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaneParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LaneParam& LaneParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

LaneParam* LaneParam::New(::google::protobuf::Arena* arena) const {
  LaneParam* n = new LaneParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LaneParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.LaneParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&roi_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&expect_height_) -
        reinterpret_cast<char*>(&roi_x_)) + sizeof(expect_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LaneParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.LaneParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 roi_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roi_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roi_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 roi_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_roi_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roi_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 expect_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_expect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.LaneParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.LaneParam)
  return false;
#undef DO_
}

void LaneParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.LaneParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 roi_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roi_x(), output);
  }

  // optional int32 roi_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roi_y(), output);
  }

  // optional int32 expect_height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->expect_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.LaneParam)
}

::google::protobuf::uint8* LaneParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.LaneParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 roi_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roi_x(), target);
  }

  // optional int32 roi_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roi_y(), target);
  }

  // optional int32 expect_height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->expect_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.LaneParam)
  return target;
}

size_t LaneParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.LaneParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 roi_x = 1;
    if (has_roi_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roi_x());
    }

    // optional int32 roi_y = 2;
    if (has_roi_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roi_y());
    }

    // optional int32 expect_height = 3;
    if (has_expect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->expect_height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaneParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.LaneParam)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LaneParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.LaneParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.LaneParam)
    MergeFrom(*source);
  }
}

void LaneParam::MergeFrom(const LaneParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.LaneParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      roi_x_ = from.roi_x_;
    }
    if (cached_has_bits & 0x00000002u) {
      roi_y_ = from.roi_y_;
    }
    if (cached_has_bits & 0x00000004u) {
      expect_height_ = from.expect_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LaneParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.LaneParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneParam::CopyFrom(const LaneParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.LaneParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneParam::IsInitialized() const {
  return true;
}

void LaneParam::Swap(LaneParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneParam::InternalSwap(LaneParam* other) {
  using std::swap;
  swap(roi_x_, other->roi_x_);
  swap(roi_y_, other->roi_y_);
  swap(expect_height_, other->expect_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LaneParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LaneParam

// optional int32 roi_x = 1;
bool LaneParam::has_roi_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LaneParam::set_has_roi_x() {
  _has_bits_[0] |= 0x00000001u;
}
void LaneParam::clear_has_roi_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void LaneParam::clear_roi_x() {
  roi_x_ = 0;
  clear_has_roi_x();
}
::google::protobuf::int32 LaneParam::roi_x() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.LaneParam.roi_x)
  return roi_x_;
}
void LaneParam::set_roi_x(::google::protobuf::int32 value) {
  set_has_roi_x();
  roi_x_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.LaneParam.roi_x)
}

// optional int32 roi_y = 2;
bool LaneParam::has_roi_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LaneParam::set_has_roi_y() {
  _has_bits_[0] |= 0x00000002u;
}
void LaneParam::clear_has_roi_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void LaneParam::clear_roi_y() {
  roi_y_ = 0;
  clear_has_roi_y();
}
::google::protobuf::int32 LaneParam::roi_y() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.LaneParam.roi_y)
  return roi_y_;
}
void LaneParam::set_roi_y(::google::protobuf::int32 value) {
  set_has_roi_y();
  roi_y_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.LaneParam.roi_y)
}

// optional int32 expect_height = 3;
bool LaneParam::has_expect_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LaneParam::set_has_expect_height() {
  _has_bits_[0] |= 0x00000004u;
}
void LaneParam::clear_has_expect_height() {
  _has_bits_[0] &= ~0x00000004u;
}
void LaneParam::clear_expect_height() {
  expect_height_ = 0;
  clear_has_expect_height();
}
::google::protobuf::int32 LaneParam::expect_height() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.LaneParam.expect_height)
  return expect_height_;
}
void LaneParam::set_expect_height(::google::protobuf::int32 value) {
  set_has_expect_height();
  expect_height_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.LaneParam.expect_height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlinkerParam::kPriorBoxParamFieldNumber;
const int BlinkerParam::kNumClassesFieldNumber;
const int BlinkerParam::kNmsThresholdFieldNumber;
const int BlinkerParam::kConfThresholdFieldNumber;
const int BlinkerParam::kKeepTopKFieldNumber;
const int BlinkerParam::kTopKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlinkerParam::BlinkerParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.BlinkerParam)
}
BlinkerParam::BlinkerParam(const BlinkerParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      prior_box_param_(from.prior_box_param_),
      conf_threshold_(from.conf_threshold_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_classes_, &from.num_classes_,
    static_cast<size_t>(reinterpret_cast<char*>(&top_k_) -
    reinterpret_cast<char*>(&num_classes_)) + sizeof(top_k_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.BlinkerParam)
}

void BlinkerParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&num_classes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&top_k_) -
      reinterpret_cast<char*>(&num_classes_)) + sizeof(top_k_));
}

BlinkerParam::~BlinkerParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.BlinkerParam)
  SharedDtor();
}

void BlinkerParam::SharedDtor() {
}

void BlinkerParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlinkerParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlinkerParam& BlinkerParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlinkerParam* BlinkerParam::New(::google::protobuf::Arena* arena) const {
  BlinkerParam* n = new BlinkerParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlinkerParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.BlinkerParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prior_box_param_.Clear();
  conf_threshold_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&num_classes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&top_k_) -
        reinterpret_cast<char*>(&num_classes_)) + sizeof(top_k_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlinkerParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.BlinkerParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prior_box_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_classes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_classes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_classes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float nms_threshold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_nms_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nms_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float conf_threshold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37u, input, this->mutable_conf_threshold())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_conf_threshold())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 keep_top_k = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_keep_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keep_top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 top_k = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.BlinkerParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.BlinkerParam)
  return false;
#undef DO_
}

void BlinkerParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.BlinkerParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prior_box_param_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prior_box_param(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_classes(), output);
  }

  // optional float nms_threshold = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->nms_threshold(), output);
  }

  // repeated float conf_threshold = 4;
  for (int i = 0, n = this->conf_threshold_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->conf_threshold(i), output);
  }

  // optional int32 keep_top_k = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->keep_top_k(), output);
  }

  // optional int32 top_k = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->top_k(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.BlinkerParam)
}

::google::protobuf::uint8* BlinkerParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.BlinkerParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prior_box_param_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->prior_box_param(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_classes(), target);
  }

  // optional float nms_threshold = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->nms_threshold(), target);
  }

  // repeated float conf_threshold = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(4, this->conf_threshold_, target);

  // optional int32 keep_top_k = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->keep_top_k(), target);
  }

  // optional int32 top_k = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->top_k(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.BlinkerParam)
  return target;
}

size_t BlinkerParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.BlinkerParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->prior_box_param_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prior_box_param(static_cast<int>(i)));
    }
  }

  // repeated float conf_threshold = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->conf_threshold_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->conf_threshold_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 num_classes = 2;
    if (has_num_classes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_classes());
    }

    // optional float nms_threshold = 3;
    if (has_nms_threshold()) {
      total_size += 1 + 4;
    }

    // optional int32 keep_top_k = 5;
    if (has_keep_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keep_top_k());
    }

    // optional int32 top_k = 6;
    if (has_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_k());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlinkerParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.BlinkerParam)
  GOOGLE_DCHECK_NE(&from, this);
  const BlinkerParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlinkerParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.BlinkerParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.BlinkerParam)
    MergeFrom(*source);
  }
}

void BlinkerParam::MergeFrom(const BlinkerParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.BlinkerParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prior_box_param_.MergeFrom(from.prior_box_param_);
  conf_threshold_.MergeFrom(from.conf_threshold_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      num_classes_ = from.num_classes_;
    }
    if (cached_has_bits & 0x00000002u) {
      nms_threshold_ = from.nms_threshold_;
    }
    if (cached_has_bits & 0x00000004u) {
      keep_top_k_ = from.keep_top_k_;
    }
    if (cached_has_bits & 0x00000008u) {
      top_k_ = from.top_k_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BlinkerParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.BlinkerParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlinkerParam::CopyFrom(const BlinkerParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.BlinkerParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlinkerParam::IsInitialized() const {
  return true;
}

void BlinkerParam::Swap(BlinkerParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlinkerParam::InternalSwap(BlinkerParam* other) {
  using std::swap;
  prior_box_param_.InternalSwap(&other->prior_box_param_);
  conf_threshold_.InternalSwap(&other->conf_threshold_);
  swap(num_classes_, other->num_classes_);
  swap(nms_threshold_, other->nms_threshold_);
  swap(keep_top_k_, other->keep_top_k_);
  swap(top_k_, other->top_k_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlinkerParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlinkerParam

// repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
int BlinkerParam::prior_box_param_size() const {
  return prior_box_param_.size();
}
void BlinkerParam::clear_prior_box_param() {
  prior_box_param_.Clear();
}
const ::vitis::ai::proto::PriorBoxParam& BlinkerParam::prior_box_param(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BlinkerParam.prior_box_param)
  return prior_box_param_.Get(index);
}
::vitis::ai::proto::PriorBoxParam* BlinkerParam::mutable_prior_box_param(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.BlinkerParam.prior_box_param)
  return prior_box_param_.Mutable(index);
}
::vitis::ai::proto::PriorBoxParam* BlinkerParam::add_prior_box_param() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.BlinkerParam.prior_box_param)
  return prior_box_param_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::PriorBoxParam >*
BlinkerParam::mutable_prior_box_param() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.BlinkerParam.prior_box_param)
  return &prior_box_param_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::PriorBoxParam >&
BlinkerParam::prior_box_param() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.BlinkerParam.prior_box_param)
  return prior_box_param_;
}

// optional int32 num_classes = 2;
bool BlinkerParam::has_num_classes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BlinkerParam::set_has_num_classes() {
  _has_bits_[0] |= 0x00000001u;
}
void BlinkerParam::clear_has_num_classes() {
  _has_bits_[0] &= ~0x00000001u;
}
void BlinkerParam::clear_num_classes() {
  num_classes_ = 0;
  clear_has_num_classes();
}
::google::protobuf::int32 BlinkerParam::num_classes() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BlinkerParam.num_classes)
  return num_classes_;
}
void BlinkerParam::set_num_classes(::google::protobuf::int32 value) {
  set_has_num_classes();
  num_classes_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BlinkerParam.num_classes)
}

// optional float nms_threshold = 3;
bool BlinkerParam::has_nms_threshold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BlinkerParam::set_has_nms_threshold() {
  _has_bits_[0] |= 0x00000002u;
}
void BlinkerParam::clear_has_nms_threshold() {
  _has_bits_[0] &= ~0x00000002u;
}
void BlinkerParam::clear_nms_threshold() {
  nms_threshold_ = 0;
  clear_has_nms_threshold();
}
float BlinkerParam::nms_threshold() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BlinkerParam.nms_threshold)
  return nms_threshold_;
}
void BlinkerParam::set_nms_threshold(float value) {
  set_has_nms_threshold();
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BlinkerParam.nms_threshold)
}

// repeated float conf_threshold = 4;
int BlinkerParam::conf_threshold_size() const {
  return conf_threshold_.size();
}
void BlinkerParam::clear_conf_threshold() {
  conf_threshold_.Clear();
}
float BlinkerParam::conf_threshold(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BlinkerParam.conf_threshold)
  return conf_threshold_.Get(index);
}
void BlinkerParam::set_conf_threshold(int index, float value) {
  conf_threshold_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BlinkerParam.conf_threshold)
}
void BlinkerParam::add_conf_threshold(float value) {
  conf_threshold_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.BlinkerParam.conf_threshold)
}
const ::google::protobuf::RepeatedField< float >&
BlinkerParam::conf_threshold() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.BlinkerParam.conf_threshold)
  return conf_threshold_;
}
::google::protobuf::RepeatedField< float >*
BlinkerParam::mutable_conf_threshold() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.BlinkerParam.conf_threshold)
  return &conf_threshold_;
}

// optional int32 keep_top_k = 5;
bool BlinkerParam::has_keep_top_k() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BlinkerParam::set_has_keep_top_k() {
  _has_bits_[0] |= 0x00000004u;
}
void BlinkerParam::clear_has_keep_top_k() {
  _has_bits_[0] &= ~0x00000004u;
}
void BlinkerParam::clear_keep_top_k() {
  keep_top_k_ = 0;
  clear_has_keep_top_k();
}
::google::protobuf::int32 BlinkerParam::keep_top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BlinkerParam.keep_top_k)
  return keep_top_k_;
}
void BlinkerParam::set_keep_top_k(::google::protobuf::int32 value) {
  set_has_keep_top_k();
  keep_top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BlinkerParam.keep_top_k)
}

// optional int32 top_k = 6;
bool BlinkerParam::has_top_k() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BlinkerParam::set_has_top_k() {
  _has_bits_[0] |= 0x00000008u;
}
void BlinkerParam::clear_has_top_k() {
  _has_bits_[0] &= ~0x00000008u;
}
void BlinkerParam::clear_top_k() {
  top_k_ = 0;
  clear_has_top_k();
}
::google::protobuf::int32 BlinkerParam::top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BlinkerParam.top_k)
  return top_k_;
}
void BlinkerParam::set_top_k(::google::protobuf::int32 value) {
  set_has_top_k();
  top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BlinkerParam.top_k)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SegdetParam::kPriorBoxParamFieldNumber;
const int SegdetParam::kNumClassesFieldNumber;
const int SegdetParam::kNmsThresholdFieldNumber;
const int SegdetParam::kConfThresholdFieldNumber;
const int SegdetParam::kKeepTopKFieldNumber;
const int SegdetParam::kTopKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SegdetParam::SegdetParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.SegdetParam)
}
SegdetParam::SegdetParam(const SegdetParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      prior_box_param_(from.prior_box_param_),
      conf_threshold_(from.conf_threshold_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_classes_, &from.num_classes_,
    static_cast<size_t>(reinterpret_cast<char*>(&top_k_) -
    reinterpret_cast<char*>(&num_classes_)) + sizeof(top_k_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.SegdetParam)
}

void SegdetParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&num_classes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&top_k_) -
      reinterpret_cast<char*>(&num_classes_)) + sizeof(top_k_));
}

SegdetParam::~SegdetParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.SegdetParam)
  SharedDtor();
}

void SegdetParam::SharedDtor() {
}

void SegdetParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SegdetParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SegdetParam& SegdetParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

SegdetParam* SegdetParam::New(::google::protobuf::Arena* arena) const {
  SegdetParam* n = new SegdetParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SegdetParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.SegdetParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prior_box_param_.Clear();
  conf_threshold_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&num_classes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&top_k_) -
        reinterpret_cast<char*>(&num_classes_)) + sizeof(top_k_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SegdetParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.SegdetParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prior_box_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_classes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_classes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_classes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float nms_threshold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_nms_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nms_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float conf_threshold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37u, input, this->mutable_conf_threshold())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_conf_threshold())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 keep_top_k = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_keep_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keep_top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 top_k = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_top_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.SegdetParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.SegdetParam)
  return false;
#undef DO_
}

void SegdetParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.SegdetParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prior_box_param_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prior_box_param(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_classes(), output);
  }

  // optional float nms_threshold = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->nms_threshold(), output);
  }

  // repeated float conf_threshold = 4;
  for (int i = 0, n = this->conf_threshold_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->conf_threshold(i), output);
  }

  // optional int32 keep_top_k = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->keep_top_k(), output);
  }

  // optional int32 top_k = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->top_k(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.SegdetParam)
}

::google::protobuf::uint8* SegdetParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.SegdetParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prior_box_param_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->prior_box_param(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_classes(), target);
  }

  // optional float nms_threshold = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->nms_threshold(), target);
  }

  // repeated float conf_threshold = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(4, this->conf_threshold_, target);

  // optional int32 keep_top_k = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->keep_top_k(), target);
  }

  // optional int32 top_k = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->top_k(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.SegdetParam)
  return target;
}

size_t SegdetParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.SegdetParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->prior_box_param_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prior_box_param(static_cast<int>(i)));
    }
  }

  // repeated float conf_threshold = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->conf_threshold_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->conf_threshold_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 num_classes = 2;
    if (has_num_classes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_classes());
    }

    // optional float nms_threshold = 3;
    if (has_nms_threshold()) {
      total_size += 1 + 4;
    }

    // optional int32 keep_top_k = 5;
    if (has_keep_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keep_top_k());
    }

    // optional int32 top_k = 6;
    if (has_top_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_k());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SegdetParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.SegdetParam)
  GOOGLE_DCHECK_NE(&from, this);
  const SegdetParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SegdetParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.SegdetParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.SegdetParam)
    MergeFrom(*source);
  }
}

void SegdetParam::MergeFrom(const SegdetParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.SegdetParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prior_box_param_.MergeFrom(from.prior_box_param_);
  conf_threshold_.MergeFrom(from.conf_threshold_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      num_classes_ = from.num_classes_;
    }
    if (cached_has_bits & 0x00000002u) {
      nms_threshold_ = from.nms_threshold_;
    }
    if (cached_has_bits & 0x00000004u) {
      keep_top_k_ = from.keep_top_k_;
    }
    if (cached_has_bits & 0x00000008u) {
      top_k_ = from.top_k_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SegdetParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.SegdetParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SegdetParam::CopyFrom(const SegdetParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.SegdetParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SegdetParam::IsInitialized() const {
  return true;
}

void SegdetParam::Swap(SegdetParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SegdetParam::InternalSwap(SegdetParam* other) {
  using std::swap;
  prior_box_param_.InternalSwap(&other->prior_box_param_);
  conf_threshold_.InternalSwap(&other->conf_threshold_);
  swap(num_classes_, other->num_classes_);
  swap(nms_threshold_, other->nms_threshold_);
  swap(keep_top_k_, other->keep_top_k_);
  swap(top_k_, other->top_k_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SegdetParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SegdetParam

// repeated .vitis.ai.proto.PriorBoxParam prior_box_param = 1;
int SegdetParam::prior_box_param_size() const {
  return prior_box_param_.size();
}
void SegdetParam::clear_prior_box_param() {
  prior_box_param_.Clear();
}
const ::vitis::ai::proto::PriorBoxParam& SegdetParam::prior_box_param(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SegdetParam.prior_box_param)
  return prior_box_param_.Get(index);
}
::vitis::ai::proto::PriorBoxParam* SegdetParam::mutable_prior_box_param(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.SegdetParam.prior_box_param)
  return prior_box_param_.Mutable(index);
}
::vitis::ai::proto::PriorBoxParam* SegdetParam::add_prior_box_param() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.SegdetParam.prior_box_param)
  return prior_box_param_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::PriorBoxParam >*
SegdetParam::mutable_prior_box_param() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.SegdetParam.prior_box_param)
  return &prior_box_param_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::PriorBoxParam >&
SegdetParam::prior_box_param() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.SegdetParam.prior_box_param)
  return prior_box_param_;
}

// optional int32 num_classes = 2;
bool SegdetParam::has_num_classes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SegdetParam::set_has_num_classes() {
  _has_bits_[0] |= 0x00000001u;
}
void SegdetParam::clear_has_num_classes() {
  _has_bits_[0] &= ~0x00000001u;
}
void SegdetParam::clear_num_classes() {
  num_classes_ = 0;
  clear_has_num_classes();
}
::google::protobuf::int32 SegdetParam::num_classes() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SegdetParam.num_classes)
  return num_classes_;
}
void SegdetParam::set_num_classes(::google::protobuf::int32 value) {
  set_has_num_classes();
  num_classes_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SegdetParam.num_classes)
}

// optional float nms_threshold = 3;
bool SegdetParam::has_nms_threshold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SegdetParam::set_has_nms_threshold() {
  _has_bits_[0] |= 0x00000002u;
}
void SegdetParam::clear_has_nms_threshold() {
  _has_bits_[0] &= ~0x00000002u;
}
void SegdetParam::clear_nms_threshold() {
  nms_threshold_ = 0;
  clear_has_nms_threshold();
}
float SegdetParam::nms_threshold() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SegdetParam.nms_threshold)
  return nms_threshold_;
}
void SegdetParam::set_nms_threshold(float value) {
  set_has_nms_threshold();
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SegdetParam.nms_threshold)
}

// repeated float conf_threshold = 4;
int SegdetParam::conf_threshold_size() const {
  return conf_threshold_.size();
}
void SegdetParam::clear_conf_threshold() {
  conf_threshold_.Clear();
}
float SegdetParam::conf_threshold(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SegdetParam.conf_threshold)
  return conf_threshold_.Get(index);
}
void SegdetParam::set_conf_threshold(int index, float value) {
  conf_threshold_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SegdetParam.conf_threshold)
}
void SegdetParam::add_conf_threshold(float value) {
  conf_threshold_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.SegdetParam.conf_threshold)
}
const ::google::protobuf::RepeatedField< float >&
SegdetParam::conf_threshold() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.SegdetParam.conf_threshold)
  return conf_threshold_;
}
::google::protobuf::RepeatedField< float >*
SegdetParam::mutable_conf_threshold() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.SegdetParam.conf_threshold)
  return &conf_threshold_;
}

// optional int32 keep_top_k = 5;
bool SegdetParam::has_keep_top_k() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SegdetParam::set_has_keep_top_k() {
  _has_bits_[0] |= 0x00000004u;
}
void SegdetParam::clear_has_keep_top_k() {
  _has_bits_[0] &= ~0x00000004u;
}
void SegdetParam::clear_keep_top_k() {
  keep_top_k_ = 0;
  clear_has_keep_top_k();
}
::google::protobuf::int32 SegdetParam::keep_top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SegdetParam.keep_top_k)
  return keep_top_k_;
}
void SegdetParam::set_keep_top_k(::google::protobuf::int32 value) {
  set_has_keep_top_k();
  keep_top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SegdetParam.keep_top_k)
}

// optional int32 top_k = 6;
bool SegdetParam::has_top_k() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SegdetParam::set_has_top_k() {
  _has_bits_[0] |= 0x00000008u;
}
void SegdetParam::clear_has_top_k() {
  _has_bits_[0] &= ~0x00000008u;
}
void SegdetParam::clear_top_k() {
  top_k_ = 0;
  clear_has_top_k();
}
::google::protobuf::int32 SegdetParam::top_k() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.SegdetParam.top_k)
  return top_k_;
}
void SegdetParam::set_top_k(::google::protobuf::int32 value) {
  set_has_top_k();
  top_k_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.SegdetParam.top_k)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceQuality5ptParam::kUseDayNightModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceQuality5ptParam::FaceQuality5ptParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.FaceQuality5ptParam)
}
FaceQuality5ptParam::FaceQuality5ptParam(const FaceQuality5ptParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  use_day_night_mode_ = from.use_day_night_mode_;
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.FaceQuality5ptParam)
}

void FaceQuality5ptParam::SharedCtor() {
  _cached_size_ = 0;
  use_day_night_mode_ = false;
}

FaceQuality5ptParam::~FaceQuality5ptParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.FaceQuality5ptParam)
  SharedDtor();
}

void FaceQuality5ptParam::SharedDtor() {
}

void FaceQuality5ptParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaceQuality5ptParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceQuality5ptParam& FaceQuality5ptParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

FaceQuality5ptParam* FaceQuality5ptParam::New(::google::protobuf::Arena* arena) const {
  FaceQuality5ptParam* n = new FaceQuality5ptParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaceQuality5ptParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.FaceQuality5ptParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  use_day_night_mode_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FaceQuality5ptParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.FaceQuality5ptParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool use_day_night_mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_use_day_night_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_day_night_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.FaceQuality5ptParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.FaceQuality5ptParam)
  return false;
#undef DO_
}

void FaceQuality5ptParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.FaceQuality5ptParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool use_day_night_mode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_day_night_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.FaceQuality5ptParam)
}

::google::protobuf::uint8* FaceQuality5ptParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.FaceQuality5ptParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool use_day_night_mode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_day_night_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.FaceQuality5ptParam)
  return target;
}

size_t FaceQuality5ptParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.FaceQuality5ptParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool use_day_night_mode = 1;
  if (has_use_day_night_mode()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaceQuality5ptParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.FaceQuality5ptParam)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceQuality5ptParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceQuality5ptParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.FaceQuality5ptParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.FaceQuality5ptParam)
    MergeFrom(*source);
  }
}

void FaceQuality5ptParam::MergeFrom(const FaceQuality5ptParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.FaceQuality5ptParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_use_day_night_mode()) {
    set_use_day_night_mode(from.use_day_night_mode());
  }
}

void FaceQuality5ptParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.FaceQuality5ptParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceQuality5ptParam::CopyFrom(const FaceQuality5ptParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.FaceQuality5ptParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceQuality5ptParam::IsInitialized() const {
  return true;
}

void FaceQuality5ptParam::Swap(FaceQuality5ptParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceQuality5ptParam::InternalSwap(FaceQuality5ptParam* other) {
  using std::swap;
  swap(use_day_night_mode_, other->use_day_night_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaceQuality5ptParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FaceQuality5ptParam

// optional bool use_day_night_mode = 1;
bool FaceQuality5ptParam::has_use_day_night_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FaceQuality5ptParam::set_has_use_day_night_mode() {
  _has_bits_[0] |= 0x00000001u;
}
void FaceQuality5ptParam::clear_has_use_day_night_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
void FaceQuality5ptParam::clear_use_day_night_mode() {
  use_day_night_mode_ = false;
  clear_has_use_day_night_mode();
}
bool FaceQuality5ptParam::use_day_night_mode() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.FaceQuality5ptParam.use_day_night_mode)
  return use_day_night_mode_;
}
void FaceQuality5ptParam::set_use_day_night_mode(bool value) {
  set_has_use_day_night_mode();
  use_day_night_mode_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.FaceQuality5ptParam.use_day_night_mode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DpuKernelParam::kNameFieldNumber;
const int DpuKernelParam::kMeanFieldNumber;
const int DpuKernelParam::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DpuKernelParam::DpuKernelParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.DpuKernelParam)
}
DpuKernelParam::DpuKernelParam(const DpuKernelParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      mean_(from.mean_),
      scale_(from.scale_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.DpuKernelParam)
}

void DpuKernelParam::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DpuKernelParam::~DpuKernelParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.DpuKernelParam)
  SharedDtor();
}

void DpuKernelParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DpuKernelParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DpuKernelParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DpuKernelParam& DpuKernelParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

DpuKernelParam* DpuKernelParam::New(::google::protobuf::Arena* arena) const {
  DpuKernelParam* n = new DpuKernelParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DpuKernelParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.DpuKernelParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mean_.Clear();
  scale_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DpuKernelParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.DpuKernelParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.DpuKernelParam.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float mean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21u, input, this->mutable_mean())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_mean())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float scale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 29u, input, this->mutable_scale())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_scale())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.DpuKernelParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.DpuKernelParam)
  return false;
#undef DO_
}

void DpuKernelParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.DpuKernelParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.DpuKernelParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated float mean = 2;
  for (int i = 0, n = this->mean_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->mean(i), output);
  }

  // repeated float scale = 3;
  for (int i = 0, n = this->scale_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      3, this->scale(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.DpuKernelParam)
}

::google::protobuf::uint8* DpuKernelParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.DpuKernelParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.DpuKernelParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated float mean = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(2, this->mean_, target);

  // repeated float scale = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(3, this->scale_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.DpuKernelParam)
  return target;
}

size_t DpuKernelParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.DpuKernelParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float mean = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mean_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->mean_size());
    total_size += data_size;
  }

  // repeated float scale = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->scale_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->scale_size());
    total_size += data_size;
  }

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DpuKernelParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.DpuKernelParam)
  GOOGLE_DCHECK_NE(&from, this);
  const DpuKernelParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DpuKernelParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.DpuKernelParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.DpuKernelParam)
    MergeFrom(*source);
  }
}

void DpuKernelParam::MergeFrom(const DpuKernelParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.DpuKernelParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mean_.MergeFrom(from.mean_);
  scale_.MergeFrom(from.scale_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DpuKernelParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.DpuKernelParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DpuKernelParam::CopyFrom(const DpuKernelParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.DpuKernelParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DpuKernelParam::IsInitialized() const {
  return true;
}

void DpuKernelParam::Swap(DpuKernelParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DpuKernelParam::InternalSwap(DpuKernelParam* other) {
  using std::swap;
  mean_.InternalSwap(&other->mean_);
  scale_.InternalSwap(&other->scale_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DpuKernelParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DpuKernelParam

// optional string name = 1;
bool DpuKernelParam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DpuKernelParam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DpuKernelParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DpuKernelParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& DpuKernelParam::name() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuKernelParam.name)
  return name_.GetNoArena();
}
void DpuKernelParam::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.DpuKernelParam.name)
}
#if LANG_CXX11
void DpuKernelParam::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.DpuKernelParam.name)
}
#endif
void DpuKernelParam::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.DpuKernelParam.name)
}
void DpuKernelParam::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.DpuKernelParam.name)
}
::std::string* DpuKernelParam::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuKernelParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DpuKernelParam::release_name() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuKernelParam.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DpuKernelParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuKernelParam.name)
}

// repeated float mean = 2;
int DpuKernelParam::mean_size() const {
  return mean_.size();
}
void DpuKernelParam::clear_mean() {
  mean_.Clear();
}
float DpuKernelParam::mean(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuKernelParam.mean)
  return mean_.Get(index);
}
void DpuKernelParam::set_mean(int index, float value) {
  mean_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.DpuKernelParam.mean)
}
void DpuKernelParam::add_mean(float value) {
  mean_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.DpuKernelParam.mean)
}
const ::google::protobuf::RepeatedField< float >&
DpuKernelParam::mean() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.DpuKernelParam.mean)
  return mean_;
}
::google::protobuf::RepeatedField< float >*
DpuKernelParam::mutable_mean() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.DpuKernelParam.mean)
  return &mean_;
}

// repeated float scale = 3;
int DpuKernelParam::scale_size() const {
  return scale_.size();
}
void DpuKernelParam::clear_scale() {
  scale_.Clear();
}
float DpuKernelParam::scale(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuKernelParam.scale)
  return scale_.Get(index);
}
void DpuKernelParam::set_scale(int index, float value) {
  scale_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.DpuKernelParam.scale)
}
void DpuKernelParam::add_scale(float value) {
  scale_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.DpuKernelParam.scale)
}
const ::google::protobuf::RepeatedField< float >&
DpuKernelParam::scale() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.DpuKernelParam.scale)
  return scale_;
}
::google::protobuf::RepeatedField< float >*
DpuKernelParam::mutable_scale() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.DpuKernelParam.scale)
  return &scale_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TfssdParam_OutputInfo::kTypeFieldNumber;
const int TfssdParam_OutputInfo::kOrderFieldNumber;
const int TfssdParam_OutputInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TfssdParam_OutputInfo::TfssdParam_OutputInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.TfssdParam.OutputInfo)
}
TfssdParam_OutputInfo::TfssdParam_OutputInfo(const TfssdParam_OutputInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&order_) -
    reinterpret_cast<char*>(&type_)) + sizeof(order_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.TfssdParam.OutputInfo)
}

void TfssdParam_OutputInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order_) -
      reinterpret_cast<char*>(&type_)) + sizeof(order_));
}

TfssdParam_OutputInfo::~TfssdParam_OutputInfo() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.TfssdParam.OutputInfo)
  SharedDtor();
}

void TfssdParam_OutputInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TfssdParam_OutputInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TfssdParam_OutputInfo::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TfssdParam_OutputInfo& TfssdParam_OutputInfo::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

TfssdParam_OutputInfo* TfssdParam_OutputInfo::New(::google::protobuf::Arena* arena) const {
  TfssdParam_OutputInfo* n = new TfssdParam_OutputInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TfssdParam_OutputInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.TfssdParam.OutputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&order_) -
        reinterpret_cast<char*>(&type_)) + sizeof(order_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TfssdParam_OutputInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.TfssdParam.OutputInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .vitis.ai.proto.TfssdParam.OutputType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::vitis::ai::proto::TfssdParam_OutputType_IsValid(value)) {
            set_type(static_cast< ::vitis::ai::proto::TfssdParam_OutputType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 order = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.TfssdParam.OutputInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.TfssdParam.OutputInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.TfssdParam.OutputInfo)
  return false;
#undef DO_
}

void TfssdParam_OutputInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.TfssdParam.OutputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .vitis.ai.proto.TfssdParam.OutputType type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 order = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->order(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.TfssdParam.OutputInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.TfssdParam.OutputInfo)
}

::google::protobuf::uint8* TfssdParam_OutputInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.TfssdParam.OutputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .vitis.ai.proto.TfssdParam.OutputType type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 order = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->order(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.TfssdParam.OutputInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.TfssdParam.OutputInfo)
  return target;
}

size_t TfssdParam_OutputInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.TfssdParam.OutputInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .vitis.ai.proto.TfssdParam.OutputType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 order = 2;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TfssdParam_OutputInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.TfssdParam.OutputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TfssdParam_OutputInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TfssdParam_OutputInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.TfssdParam.OutputInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.TfssdParam.OutputInfo)
    MergeFrom(*source);
  }
}

void TfssdParam_OutputInfo::MergeFrom(const TfssdParam_OutputInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.TfssdParam.OutputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      order_ = from.order_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TfssdParam_OutputInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.TfssdParam.OutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfssdParam_OutputInfo::CopyFrom(const TfssdParam_OutputInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.TfssdParam.OutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfssdParam_OutputInfo::IsInitialized() const {
  return true;
}

void TfssdParam_OutputInfo::Swap(TfssdParam_OutputInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TfssdParam_OutputInfo::InternalSwap(TfssdParam_OutputInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(type_, other->type_);
  swap(order_, other->order_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TfssdParam_OutputInfo::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TfssdParam_OutputInfo

// optional .vitis.ai.proto.TfssdParam.OutputType type = 1;
bool TfssdParam_OutputInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TfssdParam_OutputInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void TfssdParam_OutputInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void TfssdParam_OutputInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
::vitis::ai::proto::TfssdParam_OutputType TfssdParam_OutputInfo::type() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.TfssdParam.OutputInfo.type)
  return static_cast< ::vitis::ai::proto::TfssdParam_OutputType >(type_);
}
void TfssdParam_OutputInfo::set_type(::vitis::ai::proto::TfssdParam_OutputType value) {
  assert(::vitis::ai::proto::TfssdParam_OutputType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.TfssdParam.OutputInfo.type)
}

// optional int32 order = 2;
bool TfssdParam_OutputInfo::has_order() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TfssdParam_OutputInfo::set_has_order() {
  _has_bits_[0] |= 0x00000004u;
}
void TfssdParam_OutputInfo::clear_has_order() {
  _has_bits_[0] &= ~0x00000004u;
}
void TfssdParam_OutputInfo::clear_order() {
  order_ = 0;
  clear_has_order();
}
::google::protobuf::int32 TfssdParam_OutputInfo::order() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.TfssdParam.OutputInfo.order)
  return order_;
}
void TfssdParam_OutputInfo::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.TfssdParam.OutputInfo.order)
}

// optional string name = 3;
bool TfssdParam_OutputInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TfssdParam_OutputInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void TfssdParam_OutputInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void TfssdParam_OutputInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& TfssdParam_OutputInfo::name() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.TfssdParam.OutputInfo.name)
  return name_.GetNoArena();
}
void TfssdParam_OutputInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.TfssdParam.OutputInfo.name)
}
#if LANG_CXX11
void TfssdParam_OutputInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.TfssdParam.OutputInfo.name)
}
#endif
void TfssdParam_OutputInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.TfssdParam.OutputInfo.name)
}
void TfssdParam_OutputInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.TfssdParam.OutputInfo.name)
}
::std::string* TfssdParam_OutputInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.TfssdParam.OutputInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TfssdParam_OutputInfo::release_name() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.TfssdParam.OutputInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TfssdParam_OutputInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.TfssdParam.OutputInfo.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TfssdParam::kOutputInfoFieldNumber;
const int TfssdParam::kFeatureMapListFieldNumber;
const int TfssdParam::kOfficialCfgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TfssdParam::TfssdParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.TfssdParam)
}
TfssdParam::TfssdParam(const TfssdParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      output_info_(from.output_info_),
      feature_map_list_(from.feature_map_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  official_cfg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_official_cfg()) {
    official_cfg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.official_cfg_);
  }
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.TfssdParam)
}

void TfssdParam::SharedCtor() {
  _cached_size_ = 0;
  official_cfg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TfssdParam::~TfssdParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.TfssdParam)
  SharedDtor();
}

void TfssdParam::SharedDtor() {
  official_cfg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TfssdParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TfssdParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TfssdParam& TfssdParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

TfssdParam* TfssdParam::New(::google::protobuf::Arena* arena) const {
  TfssdParam* n = new TfssdParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TfssdParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.TfssdParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_info_.Clear();
  feature_map_list_.Clear();
  if (has_official_cfg()) {
    GOOGLE_DCHECK(!official_cfg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*official_cfg_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TfssdParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.TfssdParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.TfssdParam.OutputInfo output_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_output_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 feature_map_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_feature_map_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_feature_map_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string official_cfg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_official_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->official_cfg().data(), static_cast<int>(this->official_cfg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.TfssdParam.official_cfg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.TfssdParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.TfssdParam)
  return false;
#undef DO_
}

void TfssdParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.TfssdParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.TfssdParam.OutputInfo output_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->output_info(static_cast<int>(i)), output);
  }

  // repeated int32 feature_map_list = 2;
  for (int i = 0, n = this->feature_map_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->feature_map_list(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string official_cfg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->official_cfg().data(), static_cast<int>(this->official_cfg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.TfssdParam.official_cfg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->official_cfg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.TfssdParam)
}

::google::protobuf::uint8* TfssdParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.TfssdParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.TfssdParam.OutputInfo output_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->output_info(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 feature_map_list = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->feature_map_list_, target);

  cached_has_bits = _has_bits_[0];
  // optional string official_cfg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->official_cfg().data(), static_cast<int>(this->official_cfg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.TfssdParam.official_cfg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->official_cfg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.TfssdParam)
  return target;
}

size_t TfssdParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.TfssdParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.TfssdParam.OutputInfo output_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->output_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output_info(static_cast<int>(i)));
    }
  }

  // repeated int32 feature_map_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->feature_map_list_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->feature_map_list_size());
    total_size += data_size;
  }

  // optional string official_cfg = 3;
  if (has_official_cfg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->official_cfg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TfssdParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.TfssdParam)
  GOOGLE_DCHECK_NE(&from, this);
  const TfssdParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TfssdParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.TfssdParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.TfssdParam)
    MergeFrom(*source);
  }
}

void TfssdParam::MergeFrom(const TfssdParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.TfssdParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_info_.MergeFrom(from.output_info_);
  feature_map_list_.MergeFrom(from.feature_map_list_);
  if (from.has_official_cfg()) {
    set_has_official_cfg();
    official_cfg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.official_cfg_);
  }
}

void TfssdParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.TfssdParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfssdParam::CopyFrom(const TfssdParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.TfssdParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfssdParam::IsInitialized() const {
  return true;
}

void TfssdParam::Swap(TfssdParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TfssdParam::InternalSwap(TfssdParam* other) {
  using std::swap;
  output_info_.InternalSwap(&other->output_info_);
  feature_map_list_.InternalSwap(&other->feature_map_list_);
  official_cfg_.Swap(&other->official_cfg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TfssdParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TfssdParam

// repeated .vitis.ai.proto.TfssdParam.OutputInfo output_info = 1;
int TfssdParam::output_info_size() const {
  return output_info_.size();
}
void TfssdParam::clear_output_info() {
  output_info_.Clear();
}
const ::vitis::ai::proto::TfssdParam_OutputInfo& TfssdParam::output_info(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.TfssdParam.output_info)
  return output_info_.Get(index);
}
::vitis::ai::proto::TfssdParam_OutputInfo* TfssdParam::mutable_output_info(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.TfssdParam.output_info)
  return output_info_.Mutable(index);
}
::vitis::ai::proto::TfssdParam_OutputInfo* TfssdParam::add_output_info() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.TfssdParam.output_info)
  return output_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::TfssdParam_OutputInfo >*
TfssdParam::mutable_output_info() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.TfssdParam.output_info)
  return &output_info_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::TfssdParam_OutputInfo >&
TfssdParam::output_info() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.TfssdParam.output_info)
  return output_info_;
}

// repeated int32 feature_map_list = 2;
int TfssdParam::feature_map_list_size() const {
  return feature_map_list_.size();
}
void TfssdParam::clear_feature_map_list() {
  feature_map_list_.Clear();
}
::google::protobuf::int32 TfssdParam::feature_map_list(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.TfssdParam.feature_map_list)
  return feature_map_list_.Get(index);
}
void TfssdParam::set_feature_map_list(int index, ::google::protobuf::int32 value) {
  feature_map_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.TfssdParam.feature_map_list)
}
void TfssdParam::add_feature_map_list(::google::protobuf::int32 value) {
  feature_map_list_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.TfssdParam.feature_map_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TfssdParam::feature_map_list() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.TfssdParam.feature_map_list)
  return feature_map_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TfssdParam::mutable_feature_map_list() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.TfssdParam.feature_map_list)
  return &feature_map_list_;
}

// optional string official_cfg = 3;
bool TfssdParam::has_official_cfg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TfssdParam::set_has_official_cfg() {
  _has_bits_[0] |= 0x00000001u;
}
void TfssdParam::clear_has_official_cfg() {
  _has_bits_[0] &= ~0x00000001u;
}
void TfssdParam::clear_official_cfg() {
  official_cfg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_official_cfg();
}
const ::std::string& TfssdParam::official_cfg() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.TfssdParam.official_cfg)
  return official_cfg_.GetNoArena();
}
void TfssdParam::set_official_cfg(const ::std::string& value) {
  set_has_official_cfg();
  official_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.TfssdParam.official_cfg)
}
#if LANG_CXX11
void TfssdParam::set_official_cfg(::std::string&& value) {
  set_has_official_cfg();
  official_cfg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.TfssdParam.official_cfg)
}
#endif
void TfssdParam::set_official_cfg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_official_cfg();
  official_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.TfssdParam.official_cfg)
}
void TfssdParam::set_official_cfg(const char* value, size_t size) {
  set_has_official_cfg();
  official_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.TfssdParam.official_cfg)
}
::std::string* TfssdParam::mutable_official_cfg() {
  set_has_official_cfg();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.TfssdParam.official_cfg)
  return official_cfg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TfssdParam::release_official_cfg() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.TfssdParam.official_cfg)
  clear_has_official_cfg();
  return official_cfg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TfssdParam::set_allocated_official_cfg(::std::string* official_cfg) {
  if (official_cfg != NULL) {
    set_has_official_cfg();
  } else {
    clear_has_official_cfg();
  }
  official_cfg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), official_cfg);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.TfssdParam.official_cfg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DpuModelParam::kNameFieldNumber;
const int DpuModelParam::kKernelFieldNumber;
const int DpuModelParam::kModelTypeFieldNumber;
const int DpuModelParam::kRefineDetParamFieldNumber;
const int DpuModelParam::kYoloV3ParamFieldNumber;
const int DpuModelParam::kSsdParamFieldNumber;
const int DpuModelParam::kClassificationParamFieldNumber;
const int DpuModelParam::kDenseBoxParamFieldNumber;
const int DpuModelParam::kMultiTaskParamFieldNumber;
const int DpuModelParam::kRoadlineParamFieldNumber;
const int DpuModelParam::kSegmentationParamFieldNumber;
const int DpuModelParam::kLaneParamFieldNumber;
const int DpuModelParam::kBlinkerParamFieldNumber;
const int DpuModelParam::kSegdetParamFieldNumber;
const int DpuModelParam::kRoadlineDpParamFieldNumber;
const int DpuModelParam::kIsTfFieldNumber;
const int DpuModelParam::kFaceQuality5PtParamFieldNumber;
const int DpuModelParam::kTfssdParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DpuModelParam::DpuModelParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.DpuModelParam)
}
DpuModelParam::DpuModelParam(const DpuModelParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      kernel_(from.kernel_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_refine_det_param()) {
    refine_det_param_ = new ::vitis::ai::proto::RefineDetParam(*from.refine_det_param_);
  } else {
    refine_det_param_ = NULL;
  }
  if (from.has_yolo_v3_param()) {
    yolo_v3_param_ = new ::vitis::ai::proto::YoloV3Param(*from.yolo_v3_param_);
  } else {
    yolo_v3_param_ = NULL;
  }
  if (from.has_ssd_param()) {
    ssd_param_ = new ::vitis::ai::proto::SSDParam(*from.ssd_param_);
  } else {
    ssd_param_ = NULL;
  }
  if (from.has_classification_param()) {
    classification_param_ = new ::vitis::ai::proto::ClassificationParam(*from.classification_param_);
  } else {
    classification_param_ = NULL;
  }
  if (from.has_dense_box_param()) {
    dense_box_param_ = new ::vitis::ai::proto::DenseBoxParam(*from.dense_box_param_);
  } else {
    dense_box_param_ = NULL;
  }
  if (from.has_multi_task_param()) {
    multi_task_param_ = new ::vitis::ai::proto::MultiTaskParam(*from.multi_task_param_);
  } else {
    multi_task_param_ = NULL;
  }
  if (from.has_roadline_param()) {
    roadline_param_ = new ::vitis::ai::proto::RoadlineParam(*from.roadline_param_);
  } else {
    roadline_param_ = NULL;
  }
  if (from.has_segmentation_param()) {
    segmentation_param_ = new ::vitis::ai::proto::SegmentationParam(*from.segmentation_param_);
  } else {
    segmentation_param_ = NULL;
  }
  if (from.has_lane_param()) {
    lane_param_ = new ::vitis::ai::proto::LaneParam(*from.lane_param_);
  } else {
    lane_param_ = NULL;
  }
  if (from.has_blinker_param()) {
    blinker_param_ = new ::vitis::ai::proto::BlinkerParam(*from.blinker_param_);
  } else {
    blinker_param_ = NULL;
  }
  if (from.has_segdet_param()) {
    segdet_param_ = new ::vitis::ai::proto::SegdetParam(*from.segdet_param_);
  } else {
    segdet_param_ = NULL;
  }
  if (from.has_roadline_dp_param()) {
    roadline_dp_param_ = new ::vitis::ai::proto::RoadlineDeephiParam(*from.roadline_dp_param_);
  } else {
    roadline_dp_param_ = NULL;
  }
  if (from.has_face_quality5pt_param()) {
    face_quality5pt_param_ = new ::vitis::ai::proto::FaceQuality5ptParam(*from.face_quality5pt_param_);
  } else {
    face_quality5pt_param_ = NULL;
  }
  if (from.has_tfssd_param()) {
    tfssd_param_ = new ::vitis::ai::proto::TfssdParam(*from.tfssd_param_);
  } else {
    tfssd_param_ = NULL;
  }
  ::memcpy(&model_type_, &from.model_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_tf_) -
    reinterpret_cast<char*>(&model_type_)) + sizeof(is_tf_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.DpuModelParam)
}

void DpuModelParam::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&refine_det_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_tf_) -
      reinterpret_cast<char*>(&refine_det_param_)) + sizeof(is_tf_));
}

DpuModelParam::~DpuModelParam() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.DpuModelParam)
  SharedDtor();
}

void DpuModelParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete refine_det_param_;
  if (this != internal_default_instance()) delete yolo_v3_param_;
  if (this != internal_default_instance()) delete ssd_param_;
  if (this != internal_default_instance()) delete classification_param_;
  if (this != internal_default_instance()) delete dense_box_param_;
  if (this != internal_default_instance()) delete multi_task_param_;
  if (this != internal_default_instance()) delete roadline_param_;
  if (this != internal_default_instance()) delete segmentation_param_;
  if (this != internal_default_instance()) delete lane_param_;
  if (this != internal_default_instance()) delete blinker_param_;
  if (this != internal_default_instance()) delete segdet_param_;
  if (this != internal_default_instance()) delete roadline_dp_param_;
  if (this != internal_default_instance()) delete face_quality5pt_param_;
  if (this != internal_default_instance()) delete tfssd_param_;
}

void DpuModelParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DpuModelParam::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DpuModelParam& DpuModelParam::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

DpuModelParam* DpuModelParam::New(::google::protobuf::Arena* arena) const {
  DpuModelParam* n = new DpuModelParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DpuModelParam::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.DpuModelParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kernel_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(refine_det_param_ != NULL);
      refine_det_param_->::vitis::ai::proto::RefineDetParam::Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(yolo_v3_param_ != NULL);
      yolo_v3_param_->::vitis::ai::proto::YoloV3Param::Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(ssd_param_ != NULL);
      ssd_param_->::vitis::ai::proto::SSDParam::Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(classification_param_ != NULL);
      classification_param_->::vitis::ai::proto::ClassificationParam::Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(dense_box_param_ != NULL);
      dense_box_param_->::vitis::ai::proto::DenseBoxParam::Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(multi_task_param_ != NULL);
      multi_task_param_->::vitis::ai::proto::MultiTaskParam::Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(roadline_param_ != NULL);
      roadline_param_->::vitis::ai::proto::RoadlineParam::Clear();
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(segmentation_param_ != NULL);
      segmentation_param_->::vitis::ai::proto::SegmentationParam::Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(lane_param_ != NULL);
      lane_param_->::vitis::ai::proto::LaneParam::Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(blinker_param_ != NULL);
      blinker_param_->::vitis::ai::proto::BlinkerParam::Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(segdet_param_ != NULL);
      segdet_param_->::vitis::ai::proto::SegdetParam::Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(roadline_dp_param_ != NULL);
      roadline_dp_param_->::vitis::ai::proto::RoadlineDeephiParam::Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(face_quality5pt_param_ != NULL);
      face_quality5pt_param_->::vitis::ai::proto::FaceQuality5ptParam::Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(tfssd_param_ != NULL);
      tfssd_param_->::vitis::ai::proto::TfssdParam::Clear();
    }
  }
  model_type_ = 0;
  is_tf_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DpuModelParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.DpuModelParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.DpuModelParam.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vitis.ai.proto.DpuKernelParam kernel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_kernel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.DpuModelParam.ModelType model_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::vitis::ai::proto::DpuModelParam_ModelType_IsValid(value)) {
            set_model_type(static_cast< ::vitis::ai::proto::DpuModelParam_ModelType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.RefineDetParam refine_det_param = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refine_det_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.YoloV3Param yolo_v3_param = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yolo_v3_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.SSDParam ssd_param = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ssd_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.ClassificationParam classification_param = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_classification_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.DenseBoxParam dense_box_param = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dense_box_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.MultiTaskParam multi_task_param = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_multi_task_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.RoadlineParam roadline_param = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roadline_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.SegmentationParam segmentation_param = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_segmentation_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.LaneParam lane_param = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lane_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.BlinkerParam blinker_param = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blinker_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.SegdetParam segdet_param = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_segdet_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.RoadlineDeephiParam roadline_dp_param = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roadline_dp_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_tf = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_is_tf();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_tf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.FaceQuality5ptParam face_quality5pt_param = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_face_quality5pt_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.TfssdParam tfssd_param = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tfssd_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.DpuModelParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.DpuModelParam)
  return false;
#undef DO_
}

void DpuModelParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.DpuModelParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.DpuModelParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .vitis.ai.proto.DpuKernelParam kernel = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kernel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->kernel(static_cast<int>(i)), output);
  }

  // optional .vitis.ai.proto.DpuModelParam.ModelType model_type = 3;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->model_type(), output);
  }

  // optional .vitis.ai.proto.RefineDetParam refine_det_param = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->refine_det_param_, output);
  }

  // optional .vitis.ai.proto.YoloV3Param yolo_v3_param = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->yolo_v3_param_, output);
  }

  // optional .vitis.ai.proto.SSDParam ssd_param = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->ssd_param_, output);
  }

  // optional .vitis.ai.proto.ClassificationParam classification_param = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->classification_param_, output);
  }

  // optional .vitis.ai.proto.DenseBoxParam dense_box_param = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->dense_box_param_, output);
  }

  // optional .vitis.ai.proto.MultiTaskParam multi_task_param = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->multi_task_param_, output);
  }

  // optional .vitis.ai.proto.RoadlineParam roadline_param = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->roadline_param_, output);
  }

  // optional .vitis.ai.proto.SegmentationParam segmentation_param = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->segmentation_param_, output);
  }

  // optional .vitis.ai.proto.LaneParam lane_param = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->lane_param_, output);
  }

  // optional .vitis.ai.proto.BlinkerParam blinker_param = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->blinker_param_, output);
  }

  // optional .vitis.ai.proto.SegdetParam segdet_param = 14;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->segdet_param_, output);
  }

  // optional .vitis.ai.proto.RoadlineDeephiParam roadline_dp_param = 15;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->roadline_dp_param_, output);
  }

  // optional bool is_tf = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->is_tf(), output);
  }

  // optional .vitis.ai.proto.FaceQuality5ptParam face_quality5pt_param = 17;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->face_quality5pt_param_, output);
  }

  // optional .vitis.ai.proto.TfssdParam tfssd_param = 18;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->tfssd_param_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.DpuModelParam)
}

::google::protobuf::uint8* DpuModelParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.DpuModelParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.DpuModelParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .vitis.ai.proto.DpuKernelParam kernel = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kernel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->kernel(static_cast<int>(i)), deterministic, target);
  }

  // optional .vitis.ai.proto.DpuModelParam.ModelType model_type = 3;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->model_type(), target);
  }

  // optional .vitis.ai.proto.RefineDetParam refine_det_param = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->refine_det_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.YoloV3Param yolo_v3_param = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->yolo_v3_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.SSDParam ssd_param = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->ssd_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.ClassificationParam classification_param = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->classification_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.DenseBoxParam dense_box_param = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->dense_box_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.MultiTaskParam multi_task_param = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->multi_task_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.RoadlineParam roadline_param = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->roadline_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.SegmentationParam segmentation_param = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->segmentation_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.LaneParam lane_param = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->lane_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.BlinkerParam blinker_param = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->blinker_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.SegdetParam segdet_param = 14;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->segdet_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.RoadlineDeephiParam roadline_dp_param = 15;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->roadline_dp_param_, deterministic, target);
  }

  // optional bool is_tf = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->is_tf(), target);
  }

  // optional .vitis.ai.proto.FaceQuality5ptParam face_quality5pt_param = 17;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->face_quality5pt_param_, deterministic, target);
  }

  // optional .vitis.ai.proto.TfssdParam tfssd_param = 18;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->tfssd_param_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.DpuModelParam)
  return target;
}

size_t DpuModelParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.DpuModelParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.DpuKernelParam kernel = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->kernel_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->kernel(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .vitis.ai.proto.RefineDetParam refine_det_param = 4;
    if (has_refine_det_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->refine_det_param_);
    }

    // optional .vitis.ai.proto.YoloV3Param yolo_v3_param = 5;
    if (has_yolo_v3_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->yolo_v3_param_);
    }

    // optional .vitis.ai.proto.SSDParam ssd_param = 6;
    if (has_ssd_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ssd_param_);
    }

    // optional .vitis.ai.proto.ClassificationParam classification_param = 7;
    if (has_classification_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->classification_param_);
    }

    // optional .vitis.ai.proto.DenseBoxParam dense_box_param = 8;
    if (has_dense_box_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->dense_box_param_);
    }

    // optional .vitis.ai.proto.MultiTaskParam multi_task_param = 9;
    if (has_multi_task_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->multi_task_param_);
    }

    // optional .vitis.ai.proto.RoadlineParam roadline_param = 10;
    if (has_roadline_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->roadline_param_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .vitis.ai.proto.SegmentationParam segmentation_param = 11;
    if (has_segmentation_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->segmentation_param_);
    }

    // optional .vitis.ai.proto.LaneParam lane_param = 12;
    if (has_lane_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lane_param_);
    }

    // optional .vitis.ai.proto.BlinkerParam blinker_param = 13;
    if (has_blinker_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->blinker_param_);
    }

    // optional .vitis.ai.proto.SegdetParam segdet_param = 14;
    if (has_segdet_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->segdet_param_);
    }

    // optional .vitis.ai.proto.RoadlineDeephiParam roadline_dp_param = 15;
    if (has_roadline_dp_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->roadline_dp_param_);
    }

    // optional .vitis.ai.proto.FaceQuality5ptParam face_quality5pt_param = 17;
    if (has_face_quality5pt_param()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->face_quality5pt_param_);
    }

    // optional .vitis.ai.proto.TfssdParam tfssd_param = 18;
    if (has_tfssd_param()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->tfssd_param_);
    }

    // optional .vitis.ai.proto.DpuModelParam.ModelType model_type = 3;
    if (has_model_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->model_type());
    }

  }
  // optional bool is_tf = 16;
  if (has_is_tf()) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DpuModelParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.DpuModelParam)
  GOOGLE_DCHECK_NE(&from, this);
  const DpuModelParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DpuModelParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.DpuModelParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.DpuModelParam)
    MergeFrom(*source);
  }
}

void DpuModelParam::MergeFrom(const DpuModelParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.DpuModelParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kernel_.MergeFrom(from.kernel_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_refine_det_param()->::vitis::ai::proto::RefineDetParam::MergeFrom(from.refine_det_param());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_yolo_v3_param()->::vitis::ai::proto::YoloV3Param::MergeFrom(from.yolo_v3_param());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_ssd_param()->::vitis::ai::proto::SSDParam::MergeFrom(from.ssd_param());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_classification_param()->::vitis::ai::proto::ClassificationParam::MergeFrom(from.classification_param());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_dense_box_param()->::vitis::ai::proto::DenseBoxParam::MergeFrom(from.dense_box_param());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_multi_task_param()->::vitis::ai::proto::MultiTaskParam::MergeFrom(from.multi_task_param());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_roadline_param()->::vitis::ai::proto::RoadlineParam::MergeFrom(from.roadline_param());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_segmentation_param()->::vitis::ai::proto::SegmentationParam::MergeFrom(from.segmentation_param());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_lane_param()->::vitis::ai::proto::LaneParam::MergeFrom(from.lane_param());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_blinker_param()->::vitis::ai::proto::BlinkerParam::MergeFrom(from.blinker_param());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_segdet_param()->::vitis::ai::proto::SegdetParam::MergeFrom(from.segdet_param());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_roadline_dp_param()->::vitis::ai::proto::RoadlineDeephiParam::MergeFrom(from.roadline_dp_param());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_face_quality5pt_param()->::vitis::ai::proto::FaceQuality5ptParam::MergeFrom(from.face_quality5pt_param());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_tfssd_param()->::vitis::ai::proto::TfssdParam::MergeFrom(from.tfssd_param());
    }
    if (cached_has_bits & 0x00008000u) {
      model_type_ = from.model_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_is_tf(from.is_tf());
  }
}

void DpuModelParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.DpuModelParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DpuModelParam::CopyFrom(const DpuModelParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.DpuModelParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DpuModelParam::IsInitialized() const {
  return true;
}

void DpuModelParam::Swap(DpuModelParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DpuModelParam::InternalSwap(DpuModelParam* other) {
  using std::swap;
  kernel_.InternalSwap(&other->kernel_);
  name_.Swap(&other->name_);
  swap(refine_det_param_, other->refine_det_param_);
  swap(yolo_v3_param_, other->yolo_v3_param_);
  swap(ssd_param_, other->ssd_param_);
  swap(classification_param_, other->classification_param_);
  swap(dense_box_param_, other->dense_box_param_);
  swap(multi_task_param_, other->multi_task_param_);
  swap(roadline_param_, other->roadline_param_);
  swap(segmentation_param_, other->segmentation_param_);
  swap(lane_param_, other->lane_param_);
  swap(blinker_param_, other->blinker_param_);
  swap(segdet_param_, other->segdet_param_);
  swap(roadline_dp_param_, other->roadline_dp_param_);
  swap(face_quality5pt_param_, other->face_quality5pt_param_);
  swap(tfssd_param_, other->tfssd_param_);
  swap(model_type_, other->model_type_);
  swap(is_tf_, other->is_tf_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DpuModelParam::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DpuModelParam

// optional string name = 1;
bool DpuModelParam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DpuModelParam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DpuModelParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DpuModelParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& DpuModelParam::name() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.name)
  return name_.GetNoArena();
}
void DpuModelParam::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.DpuModelParam.name)
}
#if LANG_CXX11
void DpuModelParam::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.DpuModelParam.name)
}
#endif
void DpuModelParam::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.DpuModelParam.name)
}
void DpuModelParam::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.DpuModelParam.name)
}
::std::string* DpuModelParam::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DpuModelParam::release_name() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DpuModelParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.name)
}

// repeated .vitis.ai.proto.DpuKernelParam kernel = 2;
int DpuModelParam::kernel_size() const {
  return kernel_.size();
}
void DpuModelParam::clear_kernel() {
  kernel_.Clear();
}
const ::vitis::ai::proto::DpuKernelParam& DpuModelParam::kernel(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.kernel)
  return kernel_.Get(index);
}
::vitis::ai::proto::DpuKernelParam* DpuModelParam::mutable_kernel(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.kernel)
  return kernel_.Mutable(index);
}
::vitis::ai::proto::DpuKernelParam* DpuModelParam::add_kernel() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.DpuModelParam.kernel)
  return kernel_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::DpuKernelParam >*
DpuModelParam::mutable_kernel() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.DpuModelParam.kernel)
  return &kernel_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::DpuKernelParam >&
DpuModelParam::kernel() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.DpuModelParam.kernel)
  return kernel_;
}

// optional .vitis.ai.proto.DpuModelParam.ModelType model_type = 3;
bool DpuModelParam::has_model_type() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void DpuModelParam::set_has_model_type() {
  _has_bits_[0] |= 0x00008000u;
}
void DpuModelParam::clear_has_model_type() {
  _has_bits_[0] &= ~0x00008000u;
}
void DpuModelParam::clear_model_type() {
  model_type_ = 0;
  clear_has_model_type();
}
::vitis::ai::proto::DpuModelParam_ModelType DpuModelParam::model_type() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.model_type)
  return static_cast< ::vitis::ai::proto::DpuModelParam_ModelType >(model_type_);
}
void DpuModelParam::set_model_type(::vitis::ai::proto::DpuModelParam_ModelType value) {
  assert(::vitis::ai::proto::DpuModelParam_ModelType_IsValid(value));
  set_has_model_type();
  model_type_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.DpuModelParam.model_type)
}

// optional .vitis.ai.proto.RefineDetParam refine_det_param = 4;
bool DpuModelParam::has_refine_det_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DpuModelParam::set_has_refine_det_param() {
  _has_bits_[0] |= 0x00000002u;
}
void DpuModelParam::clear_has_refine_det_param() {
  _has_bits_[0] &= ~0x00000002u;
}
void DpuModelParam::clear_refine_det_param() {
  if (refine_det_param_ != NULL) refine_det_param_->::vitis::ai::proto::RefineDetParam::Clear();
  clear_has_refine_det_param();
}
const ::vitis::ai::proto::RefineDetParam& DpuModelParam::refine_det_param() const {
  const ::vitis::ai::proto::RefineDetParam* p = refine_det_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.refine_det_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::RefineDetParam*>(
      &::vitis::ai::proto::_RefineDetParam_default_instance_);
}
::vitis::ai::proto::RefineDetParam* DpuModelParam::mutable_refine_det_param() {
  set_has_refine_det_param();
  if (refine_det_param_ == NULL) {
    refine_det_param_ = new ::vitis::ai::proto::RefineDetParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.refine_det_param)
  return refine_det_param_;
}
::vitis::ai::proto::RefineDetParam* DpuModelParam::release_refine_det_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.refine_det_param)
  clear_has_refine_det_param();
  ::vitis::ai::proto::RefineDetParam* temp = refine_det_param_;
  refine_det_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_refine_det_param(::vitis::ai::proto::RefineDetParam* refine_det_param) {
  delete refine_det_param_;
  refine_det_param_ = refine_det_param;
  if (refine_det_param) {
    set_has_refine_det_param();
  } else {
    clear_has_refine_det_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.refine_det_param)
}

// optional .vitis.ai.proto.YoloV3Param yolo_v3_param = 5;
bool DpuModelParam::has_yolo_v3_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DpuModelParam::set_has_yolo_v3_param() {
  _has_bits_[0] |= 0x00000004u;
}
void DpuModelParam::clear_has_yolo_v3_param() {
  _has_bits_[0] &= ~0x00000004u;
}
void DpuModelParam::clear_yolo_v3_param() {
  if (yolo_v3_param_ != NULL) yolo_v3_param_->::vitis::ai::proto::YoloV3Param::Clear();
  clear_has_yolo_v3_param();
}
const ::vitis::ai::proto::YoloV3Param& DpuModelParam::yolo_v3_param() const {
  const ::vitis::ai::proto::YoloV3Param* p = yolo_v3_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.yolo_v3_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::YoloV3Param*>(
      &::vitis::ai::proto::_YoloV3Param_default_instance_);
}
::vitis::ai::proto::YoloV3Param* DpuModelParam::mutable_yolo_v3_param() {
  set_has_yolo_v3_param();
  if (yolo_v3_param_ == NULL) {
    yolo_v3_param_ = new ::vitis::ai::proto::YoloV3Param;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.yolo_v3_param)
  return yolo_v3_param_;
}
::vitis::ai::proto::YoloV3Param* DpuModelParam::release_yolo_v3_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.yolo_v3_param)
  clear_has_yolo_v3_param();
  ::vitis::ai::proto::YoloV3Param* temp = yolo_v3_param_;
  yolo_v3_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_yolo_v3_param(::vitis::ai::proto::YoloV3Param* yolo_v3_param) {
  delete yolo_v3_param_;
  yolo_v3_param_ = yolo_v3_param;
  if (yolo_v3_param) {
    set_has_yolo_v3_param();
  } else {
    clear_has_yolo_v3_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.yolo_v3_param)
}

// optional .vitis.ai.proto.SSDParam ssd_param = 6;
bool DpuModelParam::has_ssd_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DpuModelParam::set_has_ssd_param() {
  _has_bits_[0] |= 0x00000008u;
}
void DpuModelParam::clear_has_ssd_param() {
  _has_bits_[0] &= ~0x00000008u;
}
void DpuModelParam::clear_ssd_param() {
  if (ssd_param_ != NULL) ssd_param_->::vitis::ai::proto::SSDParam::Clear();
  clear_has_ssd_param();
}
const ::vitis::ai::proto::SSDParam& DpuModelParam::ssd_param() const {
  const ::vitis::ai::proto::SSDParam* p = ssd_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.ssd_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::SSDParam*>(
      &::vitis::ai::proto::_SSDParam_default_instance_);
}
::vitis::ai::proto::SSDParam* DpuModelParam::mutable_ssd_param() {
  set_has_ssd_param();
  if (ssd_param_ == NULL) {
    ssd_param_ = new ::vitis::ai::proto::SSDParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.ssd_param)
  return ssd_param_;
}
::vitis::ai::proto::SSDParam* DpuModelParam::release_ssd_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.ssd_param)
  clear_has_ssd_param();
  ::vitis::ai::proto::SSDParam* temp = ssd_param_;
  ssd_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_ssd_param(::vitis::ai::proto::SSDParam* ssd_param) {
  delete ssd_param_;
  ssd_param_ = ssd_param;
  if (ssd_param) {
    set_has_ssd_param();
  } else {
    clear_has_ssd_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.ssd_param)
}

// optional .vitis.ai.proto.ClassificationParam classification_param = 7;
bool DpuModelParam::has_classification_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DpuModelParam::set_has_classification_param() {
  _has_bits_[0] |= 0x00000010u;
}
void DpuModelParam::clear_has_classification_param() {
  _has_bits_[0] &= ~0x00000010u;
}
void DpuModelParam::clear_classification_param() {
  if (classification_param_ != NULL) classification_param_->::vitis::ai::proto::ClassificationParam::Clear();
  clear_has_classification_param();
}
const ::vitis::ai::proto::ClassificationParam& DpuModelParam::classification_param() const {
  const ::vitis::ai::proto::ClassificationParam* p = classification_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.classification_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::ClassificationParam*>(
      &::vitis::ai::proto::_ClassificationParam_default_instance_);
}
::vitis::ai::proto::ClassificationParam* DpuModelParam::mutable_classification_param() {
  set_has_classification_param();
  if (classification_param_ == NULL) {
    classification_param_ = new ::vitis::ai::proto::ClassificationParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.classification_param)
  return classification_param_;
}
::vitis::ai::proto::ClassificationParam* DpuModelParam::release_classification_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.classification_param)
  clear_has_classification_param();
  ::vitis::ai::proto::ClassificationParam* temp = classification_param_;
  classification_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_classification_param(::vitis::ai::proto::ClassificationParam* classification_param) {
  delete classification_param_;
  classification_param_ = classification_param;
  if (classification_param) {
    set_has_classification_param();
  } else {
    clear_has_classification_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.classification_param)
}

// optional .vitis.ai.proto.DenseBoxParam dense_box_param = 8;
bool DpuModelParam::has_dense_box_param() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DpuModelParam::set_has_dense_box_param() {
  _has_bits_[0] |= 0x00000020u;
}
void DpuModelParam::clear_has_dense_box_param() {
  _has_bits_[0] &= ~0x00000020u;
}
void DpuModelParam::clear_dense_box_param() {
  if (dense_box_param_ != NULL) dense_box_param_->::vitis::ai::proto::DenseBoxParam::Clear();
  clear_has_dense_box_param();
}
const ::vitis::ai::proto::DenseBoxParam& DpuModelParam::dense_box_param() const {
  const ::vitis::ai::proto::DenseBoxParam* p = dense_box_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.dense_box_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::DenseBoxParam*>(
      &::vitis::ai::proto::_DenseBoxParam_default_instance_);
}
::vitis::ai::proto::DenseBoxParam* DpuModelParam::mutable_dense_box_param() {
  set_has_dense_box_param();
  if (dense_box_param_ == NULL) {
    dense_box_param_ = new ::vitis::ai::proto::DenseBoxParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.dense_box_param)
  return dense_box_param_;
}
::vitis::ai::proto::DenseBoxParam* DpuModelParam::release_dense_box_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.dense_box_param)
  clear_has_dense_box_param();
  ::vitis::ai::proto::DenseBoxParam* temp = dense_box_param_;
  dense_box_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_dense_box_param(::vitis::ai::proto::DenseBoxParam* dense_box_param) {
  delete dense_box_param_;
  dense_box_param_ = dense_box_param;
  if (dense_box_param) {
    set_has_dense_box_param();
  } else {
    clear_has_dense_box_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.dense_box_param)
}

// optional .vitis.ai.proto.MultiTaskParam multi_task_param = 9;
bool DpuModelParam::has_multi_task_param() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DpuModelParam::set_has_multi_task_param() {
  _has_bits_[0] |= 0x00000040u;
}
void DpuModelParam::clear_has_multi_task_param() {
  _has_bits_[0] &= ~0x00000040u;
}
void DpuModelParam::clear_multi_task_param() {
  if (multi_task_param_ != NULL) multi_task_param_->::vitis::ai::proto::MultiTaskParam::Clear();
  clear_has_multi_task_param();
}
const ::vitis::ai::proto::MultiTaskParam& DpuModelParam::multi_task_param() const {
  const ::vitis::ai::proto::MultiTaskParam* p = multi_task_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.multi_task_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::MultiTaskParam*>(
      &::vitis::ai::proto::_MultiTaskParam_default_instance_);
}
::vitis::ai::proto::MultiTaskParam* DpuModelParam::mutable_multi_task_param() {
  set_has_multi_task_param();
  if (multi_task_param_ == NULL) {
    multi_task_param_ = new ::vitis::ai::proto::MultiTaskParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.multi_task_param)
  return multi_task_param_;
}
::vitis::ai::proto::MultiTaskParam* DpuModelParam::release_multi_task_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.multi_task_param)
  clear_has_multi_task_param();
  ::vitis::ai::proto::MultiTaskParam* temp = multi_task_param_;
  multi_task_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_multi_task_param(::vitis::ai::proto::MultiTaskParam* multi_task_param) {
  delete multi_task_param_;
  multi_task_param_ = multi_task_param;
  if (multi_task_param) {
    set_has_multi_task_param();
  } else {
    clear_has_multi_task_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.multi_task_param)
}

// optional .vitis.ai.proto.RoadlineParam roadline_param = 10;
bool DpuModelParam::has_roadline_param() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DpuModelParam::set_has_roadline_param() {
  _has_bits_[0] |= 0x00000080u;
}
void DpuModelParam::clear_has_roadline_param() {
  _has_bits_[0] &= ~0x00000080u;
}
void DpuModelParam::clear_roadline_param() {
  if (roadline_param_ != NULL) roadline_param_->::vitis::ai::proto::RoadlineParam::Clear();
  clear_has_roadline_param();
}
const ::vitis::ai::proto::RoadlineParam& DpuModelParam::roadline_param() const {
  const ::vitis::ai::proto::RoadlineParam* p = roadline_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.roadline_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::RoadlineParam*>(
      &::vitis::ai::proto::_RoadlineParam_default_instance_);
}
::vitis::ai::proto::RoadlineParam* DpuModelParam::mutable_roadline_param() {
  set_has_roadline_param();
  if (roadline_param_ == NULL) {
    roadline_param_ = new ::vitis::ai::proto::RoadlineParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.roadline_param)
  return roadline_param_;
}
::vitis::ai::proto::RoadlineParam* DpuModelParam::release_roadline_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.roadline_param)
  clear_has_roadline_param();
  ::vitis::ai::proto::RoadlineParam* temp = roadline_param_;
  roadline_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_roadline_param(::vitis::ai::proto::RoadlineParam* roadline_param) {
  delete roadline_param_;
  roadline_param_ = roadline_param;
  if (roadline_param) {
    set_has_roadline_param();
  } else {
    clear_has_roadline_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.roadline_param)
}

// optional .vitis.ai.proto.SegmentationParam segmentation_param = 11;
bool DpuModelParam::has_segmentation_param() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DpuModelParam::set_has_segmentation_param() {
  _has_bits_[0] |= 0x00000100u;
}
void DpuModelParam::clear_has_segmentation_param() {
  _has_bits_[0] &= ~0x00000100u;
}
void DpuModelParam::clear_segmentation_param() {
  if (segmentation_param_ != NULL) segmentation_param_->::vitis::ai::proto::SegmentationParam::Clear();
  clear_has_segmentation_param();
}
const ::vitis::ai::proto::SegmentationParam& DpuModelParam::segmentation_param() const {
  const ::vitis::ai::proto::SegmentationParam* p = segmentation_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.segmentation_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::SegmentationParam*>(
      &::vitis::ai::proto::_SegmentationParam_default_instance_);
}
::vitis::ai::proto::SegmentationParam* DpuModelParam::mutable_segmentation_param() {
  set_has_segmentation_param();
  if (segmentation_param_ == NULL) {
    segmentation_param_ = new ::vitis::ai::proto::SegmentationParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.segmentation_param)
  return segmentation_param_;
}
::vitis::ai::proto::SegmentationParam* DpuModelParam::release_segmentation_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.segmentation_param)
  clear_has_segmentation_param();
  ::vitis::ai::proto::SegmentationParam* temp = segmentation_param_;
  segmentation_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_segmentation_param(::vitis::ai::proto::SegmentationParam* segmentation_param) {
  delete segmentation_param_;
  segmentation_param_ = segmentation_param;
  if (segmentation_param) {
    set_has_segmentation_param();
  } else {
    clear_has_segmentation_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.segmentation_param)
}

// optional .vitis.ai.proto.LaneParam lane_param = 12;
bool DpuModelParam::has_lane_param() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void DpuModelParam::set_has_lane_param() {
  _has_bits_[0] |= 0x00000200u;
}
void DpuModelParam::clear_has_lane_param() {
  _has_bits_[0] &= ~0x00000200u;
}
void DpuModelParam::clear_lane_param() {
  if (lane_param_ != NULL) lane_param_->::vitis::ai::proto::LaneParam::Clear();
  clear_has_lane_param();
}
const ::vitis::ai::proto::LaneParam& DpuModelParam::lane_param() const {
  const ::vitis::ai::proto::LaneParam* p = lane_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.lane_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::LaneParam*>(
      &::vitis::ai::proto::_LaneParam_default_instance_);
}
::vitis::ai::proto::LaneParam* DpuModelParam::mutable_lane_param() {
  set_has_lane_param();
  if (lane_param_ == NULL) {
    lane_param_ = new ::vitis::ai::proto::LaneParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.lane_param)
  return lane_param_;
}
::vitis::ai::proto::LaneParam* DpuModelParam::release_lane_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.lane_param)
  clear_has_lane_param();
  ::vitis::ai::proto::LaneParam* temp = lane_param_;
  lane_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_lane_param(::vitis::ai::proto::LaneParam* lane_param) {
  delete lane_param_;
  lane_param_ = lane_param;
  if (lane_param) {
    set_has_lane_param();
  } else {
    clear_has_lane_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.lane_param)
}

// optional .vitis.ai.proto.BlinkerParam blinker_param = 13;
bool DpuModelParam::has_blinker_param() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void DpuModelParam::set_has_blinker_param() {
  _has_bits_[0] |= 0x00000400u;
}
void DpuModelParam::clear_has_blinker_param() {
  _has_bits_[0] &= ~0x00000400u;
}
void DpuModelParam::clear_blinker_param() {
  if (blinker_param_ != NULL) blinker_param_->::vitis::ai::proto::BlinkerParam::Clear();
  clear_has_blinker_param();
}
const ::vitis::ai::proto::BlinkerParam& DpuModelParam::blinker_param() const {
  const ::vitis::ai::proto::BlinkerParam* p = blinker_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.blinker_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::BlinkerParam*>(
      &::vitis::ai::proto::_BlinkerParam_default_instance_);
}
::vitis::ai::proto::BlinkerParam* DpuModelParam::mutable_blinker_param() {
  set_has_blinker_param();
  if (blinker_param_ == NULL) {
    blinker_param_ = new ::vitis::ai::proto::BlinkerParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.blinker_param)
  return blinker_param_;
}
::vitis::ai::proto::BlinkerParam* DpuModelParam::release_blinker_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.blinker_param)
  clear_has_blinker_param();
  ::vitis::ai::proto::BlinkerParam* temp = blinker_param_;
  blinker_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_blinker_param(::vitis::ai::proto::BlinkerParam* blinker_param) {
  delete blinker_param_;
  blinker_param_ = blinker_param;
  if (blinker_param) {
    set_has_blinker_param();
  } else {
    clear_has_blinker_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.blinker_param)
}

// optional .vitis.ai.proto.SegdetParam segdet_param = 14;
bool DpuModelParam::has_segdet_param() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void DpuModelParam::set_has_segdet_param() {
  _has_bits_[0] |= 0x00000800u;
}
void DpuModelParam::clear_has_segdet_param() {
  _has_bits_[0] &= ~0x00000800u;
}
void DpuModelParam::clear_segdet_param() {
  if (segdet_param_ != NULL) segdet_param_->::vitis::ai::proto::SegdetParam::Clear();
  clear_has_segdet_param();
}
const ::vitis::ai::proto::SegdetParam& DpuModelParam::segdet_param() const {
  const ::vitis::ai::proto::SegdetParam* p = segdet_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.segdet_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::SegdetParam*>(
      &::vitis::ai::proto::_SegdetParam_default_instance_);
}
::vitis::ai::proto::SegdetParam* DpuModelParam::mutable_segdet_param() {
  set_has_segdet_param();
  if (segdet_param_ == NULL) {
    segdet_param_ = new ::vitis::ai::proto::SegdetParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.segdet_param)
  return segdet_param_;
}
::vitis::ai::proto::SegdetParam* DpuModelParam::release_segdet_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.segdet_param)
  clear_has_segdet_param();
  ::vitis::ai::proto::SegdetParam* temp = segdet_param_;
  segdet_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_segdet_param(::vitis::ai::proto::SegdetParam* segdet_param) {
  delete segdet_param_;
  segdet_param_ = segdet_param;
  if (segdet_param) {
    set_has_segdet_param();
  } else {
    clear_has_segdet_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.segdet_param)
}

// optional .vitis.ai.proto.RoadlineDeephiParam roadline_dp_param = 15;
bool DpuModelParam::has_roadline_dp_param() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void DpuModelParam::set_has_roadline_dp_param() {
  _has_bits_[0] |= 0x00001000u;
}
void DpuModelParam::clear_has_roadline_dp_param() {
  _has_bits_[0] &= ~0x00001000u;
}
void DpuModelParam::clear_roadline_dp_param() {
  if (roadline_dp_param_ != NULL) roadline_dp_param_->::vitis::ai::proto::RoadlineDeephiParam::Clear();
  clear_has_roadline_dp_param();
}
const ::vitis::ai::proto::RoadlineDeephiParam& DpuModelParam::roadline_dp_param() const {
  const ::vitis::ai::proto::RoadlineDeephiParam* p = roadline_dp_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.roadline_dp_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::RoadlineDeephiParam*>(
      &::vitis::ai::proto::_RoadlineDeephiParam_default_instance_);
}
::vitis::ai::proto::RoadlineDeephiParam* DpuModelParam::mutable_roadline_dp_param() {
  set_has_roadline_dp_param();
  if (roadline_dp_param_ == NULL) {
    roadline_dp_param_ = new ::vitis::ai::proto::RoadlineDeephiParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.roadline_dp_param)
  return roadline_dp_param_;
}
::vitis::ai::proto::RoadlineDeephiParam* DpuModelParam::release_roadline_dp_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.roadline_dp_param)
  clear_has_roadline_dp_param();
  ::vitis::ai::proto::RoadlineDeephiParam* temp = roadline_dp_param_;
  roadline_dp_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_roadline_dp_param(::vitis::ai::proto::RoadlineDeephiParam* roadline_dp_param) {
  delete roadline_dp_param_;
  roadline_dp_param_ = roadline_dp_param;
  if (roadline_dp_param) {
    set_has_roadline_dp_param();
  } else {
    clear_has_roadline_dp_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.roadline_dp_param)
}

// optional bool is_tf = 16;
bool DpuModelParam::has_is_tf() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void DpuModelParam::set_has_is_tf() {
  _has_bits_[0] |= 0x00010000u;
}
void DpuModelParam::clear_has_is_tf() {
  _has_bits_[0] &= ~0x00010000u;
}
void DpuModelParam::clear_is_tf() {
  is_tf_ = false;
  clear_has_is_tf();
}
bool DpuModelParam::is_tf() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.is_tf)
  return is_tf_;
}
void DpuModelParam::set_is_tf(bool value) {
  set_has_is_tf();
  is_tf_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.DpuModelParam.is_tf)
}

// optional .vitis.ai.proto.FaceQuality5ptParam face_quality5pt_param = 17;
bool DpuModelParam::has_face_quality5pt_param() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void DpuModelParam::set_has_face_quality5pt_param() {
  _has_bits_[0] |= 0x00002000u;
}
void DpuModelParam::clear_has_face_quality5pt_param() {
  _has_bits_[0] &= ~0x00002000u;
}
void DpuModelParam::clear_face_quality5pt_param() {
  if (face_quality5pt_param_ != NULL) face_quality5pt_param_->::vitis::ai::proto::FaceQuality5ptParam::Clear();
  clear_has_face_quality5pt_param();
}
const ::vitis::ai::proto::FaceQuality5ptParam& DpuModelParam::face_quality5pt_param() const {
  const ::vitis::ai::proto::FaceQuality5ptParam* p = face_quality5pt_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.face_quality5pt_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::FaceQuality5ptParam*>(
      &::vitis::ai::proto::_FaceQuality5ptParam_default_instance_);
}
::vitis::ai::proto::FaceQuality5ptParam* DpuModelParam::mutable_face_quality5pt_param() {
  set_has_face_quality5pt_param();
  if (face_quality5pt_param_ == NULL) {
    face_quality5pt_param_ = new ::vitis::ai::proto::FaceQuality5ptParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.face_quality5pt_param)
  return face_quality5pt_param_;
}
::vitis::ai::proto::FaceQuality5ptParam* DpuModelParam::release_face_quality5pt_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.face_quality5pt_param)
  clear_has_face_quality5pt_param();
  ::vitis::ai::proto::FaceQuality5ptParam* temp = face_quality5pt_param_;
  face_quality5pt_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_face_quality5pt_param(::vitis::ai::proto::FaceQuality5ptParam* face_quality5pt_param) {
  delete face_quality5pt_param_;
  face_quality5pt_param_ = face_quality5pt_param;
  if (face_quality5pt_param) {
    set_has_face_quality5pt_param();
  } else {
    clear_has_face_quality5pt_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.face_quality5pt_param)
}

// optional .vitis.ai.proto.TfssdParam tfssd_param = 18;
bool DpuModelParam::has_tfssd_param() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void DpuModelParam::set_has_tfssd_param() {
  _has_bits_[0] |= 0x00004000u;
}
void DpuModelParam::clear_has_tfssd_param() {
  _has_bits_[0] &= ~0x00004000u;
}
void DpuModelParam::clear_tfssd_param() {
  if (tfssd_param_ != NULL) tfssd_param_->::vitis::ai::proto::TfssdParam::Clear();
  clear_has_tfssd_param();
}
const ::vitis::ai::proto::TfssdParam& DpuModelParam::tfssd_param() const {
  const ::vitis::ai::proto::TfssdParam* p = tfssd_param_;
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParam.tfssd_param)
  return p != NULL ? *p : *reinterpret_cast<const ::vitis::ai::proto::TfssdParam*>(
      &::vitis::ai::proto::_TfssdParam_default_instance_);
}
::vitis::ai::proto::TfssdParam* DpuModelParam::mutable_tfssd_param() {
  set_has_tfssd_param();
  if (tfssd_param_ == NULL) {
    tfssd_param_ = new ::vitis::ai::proto::TfssdParam;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParam.tfssd_param)
  return tfssd_param_;
}
::vitis::ai::proto::TfssdParam* DpuModelParam::release_tfssd_param() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelParam.tfssd_param)
  clear_has_tfssd_param();
  ::vitis::ai::proto::TfssdParam* temp = tfssd_param_;
  tfssd_param_ = NULL;
  return temp;
}
void DpuModelParam::set_allocated_tfssd_param(::vitis::ai::proto::TfssdParam* tfssd_param) {
  delete tfssd_param_;
  tfssd_param_ = tfssd_param;
  if (tfssd_param) {
    set_has_tfssd_param();
  } else {
    clear_has_tfssd_param();
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelParam.tfssd_param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DpuModelParamList::kModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DpuModelParamList::DpuModelParamList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.DpuModelParamList)
}
DpuModelParamList::DpuModelParamList(const DpuModelParamList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      model_(from.model_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.DpuModelParamList)
}

void DpuModelParamList::SharedCtor() {
  _cached_size_ = 0;
}

DpuModelParamList::~DpuModelParamList() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.DpuModelParamList)
  SharedDtor();
}

void DpuModelParamList::SharedDtor() {
}

void DpuModelParamList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DpuModelParamList::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DpuModelParamList& DpuModelParamList::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

DpuModelParamList* DpuModelParamList::New(::google::protobuf::Arena* arena) const {
  DpuModelParamList* n = new DpuModelParamList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DpuModelParamList::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.DpuModelParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DpuModelParamList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.DpuModelParamList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.DpuModelParam model = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.DpuModelParamList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.DpuModelParamList)
  return false;
#undef DO_
}

void DpuModelParamList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.DpuModelParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.DpuModelParam model = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->model_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->model(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.DpuModelParamList)
}

::google::protobuf::uint8* DpuModelParamList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.DpuModelParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.DpuModelParam model = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->model_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->model(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.DpuModelParamList)
  return target;
}

size_t DpuModelParamList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.DpuModelParamList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.DpuModelParam model = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->model_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->model(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DpuModelParamList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.DpuModelParamList)
  GOOGLE_DCHECK_NE(&from, this);
  const DpuModelParamList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DpuModelParamList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.DpuModelParamList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.DpuModelParamList)
    MergeFrom(*source);
  }
}

void DpuModelParamList::MergeFrom(const DpuModelParamList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.DpuModelParamList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  model_.MergeFrom(from.model_);
}

void DpuModelParamList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.DpuModelParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DpuModelParamList::CopyFrom(const DpuModelParamList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.DpuModelParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DpuModelParamList::IsInitialized() const {
  return true;
}

void DpuModelParamList::Swap(DpuModelParamList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DpuModelParamList::InternalSwap(DpuModelParamList* other) {
  using std::swap;
  model_.InternalSwap(&other->model_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DpuModelParamList::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DpuModelParamList

// repeated .vitis.ai.proto.DpuModelParam model = 1;
int DpuModelParamList::model_size() const {
  return model_.size();
}
void DpuModelParamList::clear_model() {
  model_.Clear();
}
const ::vitis::ai::proto::DpuModelParam& DpuModelParamList::model(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelParamList.model)
  return model_.Get(index);
}
::vitis::ai::proto::DpuModelParam* DpuModelParamList::mutable_model(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelParamList.model)
  return model_.Mutable(index);
}
::vitis::ai::proto::DpuModelParam* DpuModelParamList::add_model() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.DpuModelParamList.model)
  return model_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::DpuModelParam >*
DpuModelParamList::mutable_model() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.DpuModelParamList.model)
  return &model_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::DpuModelParam >&
DpuModelParamList::model() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.DpuModelParamList.model)
  return model_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceFixFeature::kFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceFixFeature::FaceFixFeature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.FaceFixFeature)
}
FaceFixFeature::FaceFixFeature(const FaceFixFeature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      feature_(from.feature_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.FaceFixFeature)
}

void FaceFixFeature::SharedCtor() {
  _cached_size_ = 0;
}

FaceFixFeature::~FaceFixFeature() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.FaceFixFeature)
  SharedDtor();
}

void FaceFixFeature::SharedDtor() {
}

void FaceFixFeature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaceFixFeature::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceFixFeature& FaceFixFeature::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

FaceFixFeature* FaceFixFeature::New(::google::protobuf::Arena* arena) const {
  FaceFixFeature* n = new FaceFixFeature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaceFixFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.FaceFixFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  feature_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FaceFixFeature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.FaceFixFeature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 feature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_feature())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_feature())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.FaceFixFeature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.FaceFixFeature)
  return false;
#undef DO_
}

void FaceFixFeature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.FaceFixFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 feature = 1;
  for (int i = 0, n = this->feature_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->feature(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.FaceFixFeature)
}

::google::protobuf::uint8* FaceFixFeature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.FaceFixFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 feature = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->feature_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.FaceFixFeature)
  return target;
}

size_t FaceFixFeature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.FaceFixFeature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 feature = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->feature_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->feature_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaceFixFeature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.FaceFixFeature)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceFixFeature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceFixFeature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.FaceFixFeature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.FaceFixFeature)
    MergeFrom(*source);
  }
}

void FaceFixFeature::MergeFrom(const FaceFixFeature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.FaceFixFeature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  feature_.MergeFrom(from.feature_);
}

void FaceFixFeature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.FaceFixFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceFixFeature::CopyFrom(const FaceFixFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.FaceFixFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceFixFeature::IsInitialized() const {
  return true;
}

void FaceFixFeature::Swap(FaceFixFeature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceFixFeature::InternalSwap(FaceFixFeature* other) {
  using std::swap;
  feature_.InternalSwap(&other->feature_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaceFixFeature::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FaceFixFeature

// repeated int32 feature = 1;
int FaceFixFeature::feature_size() const {
  return feature_.size();
}
void FaceFixFeature::clear_feature() {
  feature_.Clear();
}
::google::protobuf::int32 FaceFixFeature::feature(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.FaceFixFeature.feature)
  return feature_.Get(index);
}
void FaceFixFeature::set_feature(int index, ::google::protobuf::int32 value) {
  feature_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.FaceFixFeature.feature)
}
void FaceFixFeature::add_feature(::google::protobuf::int32 value) {
  feature_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.FaceFixFeature.feature)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FaceFixFeature::feature() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.FaceFixFeature.feature)
  return feature_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FaceFixFeature::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.FaceFixFeature.feature)
  return &feature_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceFloatFeature::kFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceFloatFeature::FaceFloatFeature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.FaceFloatFeature)
}
FaceFloatFeature::FaceFloatFeature(const FaceFloatFeature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      feature_(from.feature_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.FaceFloatFeature)
}

void FaceFloatFeature::SharedCtor() {
  _cached_size_ = 0;
}

FaceFloatFeature::~FaceFloatFeature() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.FaceFloatFeature)
  SharedDtor();
}

void FaceFloatFeature::SharedDtor() {
}

void FaceFloatFeature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaceFloatFeature::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceFloatFeature& FaceFloatFeature::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

FaceFloatFeature* FaceFloatFeature::New(::google::protobuf::Arena* arena) const {
  FaceFloatFeature* n = new FaceFloatFeature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaceFloatFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.FaceFloatFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  feature_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FaceFloatFeature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.FaceFloatFeature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float feature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_feature())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_feature())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.FaceFloatFeature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.FaceFloatFeature)
  return false;
#undef DO_
}

void FaceFloatFeature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.FaceFloatFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float feature = 1;
  for (int i = 0, n = this->feature_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->feature(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.FaceFloatFeature)
}

::google::protobuf::uint8* FaceFloatFeature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.FaceFloatFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float feature = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->feature_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.FaceFloatFeature)
  return target;
}

size_t FaceFloatFeature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.FaceFloatFeature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float feature = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->feature_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->feature_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaceFloatFeature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.FaceFloatFeature)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceFloatFeature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceFloatFeature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.FaceFloatFeature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.FaceFloatFeature)
    MergeFrom(*source);
  }
}

void FaceFloatFeature::MergeFrom(const FaceFloatFeature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.FaceFloatFeature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  feature_.MergeFrom(from.feature_);
}

void FaceFloatFeature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.FaceFloatFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceFloatFeature::CopyFrom(const FaceFloatFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.FaceFloatFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceFloatFeature::IsInitialized() const {
  return true;
}

void FaceFloatFeature::Swap(FaceFloatFeature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceFloatFeature::InternalSwap(FaceFloatFeature* other) {
  using std::swap;
  feature_.InternalSwap(&other->feature_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaceFloatFeature::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FaceFloatFeature

// repeated float feature = 1;
int FaceFloatFeature::feature_size() const {
  return feature_.size();
}
void FaceFloatFeature::clear_feature() {
  feature_.Clear();
}
float FaceFloatFeature::feature(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.FaceFloatFeature.feature)
  return feature_.Get(index);
}
void FaceFloatFeature::set_feature(int index, float value) {
  feature_.Set(index, value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.FaceFloatFeature.feature)
}
void FaceFloatFeature::add_feature(float value) {
  feature_.Add(value);
  // @@protoc_insertion_point(field_add:vitis.ai.proto.FaceFloatFeature.feature)
}
const ::google::protobuf::RepeatedField< float >&
FaceFloatFeature::feature() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.FaceFloatFeature.feature)
  return feature_;
}
::google::protobuf::RepeatedField< float >*
FaceFloatFeature::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.FaceFloatFeature.feature)
  return &feature_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attribute::kLabelFieldNumber;
const int Attribute::kValueFieldNumber;
const int Attribute::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attribute::Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.Attribute)
}
Attribute::Attribute(const Attribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&value_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.Attribute)
}

void Attribute::SharedCtor() {
  _cached_size_ = 0;
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&value_)) + sizeof(score_));
}

Attribute::~Attribute() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.Attribute)
  SharedDtor();
}

void Attribute::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Attribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Attribute::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Attribute& Attribute::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

Attribute* Attribute::New(::google::protobuf::Arena* arena) const {
  Attribute* n = new Attribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_label()) {
    GOOGLE_DCHECK(!label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*label_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&score_) -
        reinterpret_cast<char*>(&value_)) + sizeof(score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.Attribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vitis.ai.proto.Attribute.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.Attribute)
  return false;
#undef DO_
}

void Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.Attribute.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional uint32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  // optional float score = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.Attribute)
}

::google::protobuf::uint8* Attribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vitis.ai.proto.Attribute.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional uint32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  // optional float score = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.Attribute)
  return target;
}

size_t Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.Attribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional uint32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

    // optional float score = 3;
    if (has_score()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  const Attribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Attribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.Attribute)
    MergeFrom(*source);
  }
}

void Attribute::MergeFrom(const Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000004u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attribute::CopyFrom(const Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attribute::IsInitialized() const {
  return true;
}

void Attribute::Swap(Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Attribute::InternalSwap(Attribute* other) {
  using std::swap;
  label_.Swap(&other->label_);
  swap(value_, other->value_);
  swap(score_, other->score_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Attribute::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Attribute

// optional string label = 1;
bool Attribute::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Attribute::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
void Attribute::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
void Attribute::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
const ::std::string& Attribute::label() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.Attribute.label)
  return label_.GetNoArena();
}
void Attribute::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vitis.ai.proto.Attribute.label)
}
#if LANG_CXX11
void Attribute::set_label(::std::string&& value) {
  set_has_label();
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vitis.ai.proto.Attribute.label)
}
#endif
void Attribute::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vitis.ai.proto.Attribute.label)
}
void Attribute::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vitis.ai.proto.Attribute.label)
}
::std::string* Attribute::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.Attribute.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Attribute::release_label() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.Attribute.label)
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Attribute::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.Attribute.label)
}

// optional uint32 value = 2;
bool Attribute::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Attribute::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void Attribute::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void Attribute::clear_value() {
  value_ = 0u;
  clear_has_value();
}
::google::protobuf::uint32 Attribute::value() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.Attribute.value)
  return value_;
}
void Attribute::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.Attribute.value)
}

// optional float score = 3;
bool Attribute::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Attribute::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
void Attribute::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
void Attribute::clear_score() {
  score_ = 0;
  clear_has_score();
}
float Attribute::score() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.Attribute.score)
  return score_;
}
void Attribute::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.Attribute.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.Point)
}

void Point::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.Point)
  SharedDtor();
}

void Point::SharedDtor() {
}

void Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point& Point::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

Point* Point::New(::google::protobuf::Arena* arena) const {
  Point* n = new Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.Point)
  return target;
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point

// optional float x = 1;
bool Point::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Point::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Point::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Point::clear_x() {
  x_ = 0;
  clear_has_x();
}
float Point::x() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.Point.x)
  return x_;
}
void Point::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.Point.x)
}

// optional float y = 2;
bool Point::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Point::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Point::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Point::clear_y() {
  y_ = 0;
  clear_has_y();
}
float Point::y() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.Point.y)
  return y_;
}
void Point::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.Point.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoundingBox::kLabelFieldNumber;
const int BoundingBox::kScoreFieldNumber;
const int BoundingBox::kXFieldNumber;
const int BoundingBox::kYFieldNumber;
const int BoundingBox::kWidthFieldNumber;
const int BoundingBox::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoundingBox::BoundingBox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.BoundingBox)
}
BoundingBox::BoundingBox(const BoundingBox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&label_, &from.label_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&label_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.BoundingBox)
}

void BoundingBox::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&label_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&label_)) + sizeof(height_));
}

BoundingBox::~BoundingBox() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.BoundingBox)
  SharedDtor();
}

void BoundingBox::SharedDtor() {
}

void BoundingBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoundingBox::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoundingBox& BoundingBox::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

BoundingBox* BoundingBox::New(::google::protobuf::Arena* arena) const {
  BoundingBox* n = new BoundingBox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BoundingBox::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&label_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&label_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BoundingBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.BoundingBox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_label();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &label_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.BoundingBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.BoundingBox)
  return false;
#undef DO_
}

void BoundingBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->label(), output);
  }

  // optional float score = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  // optional float x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->x(), output);
  }

  // optional float y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->y(), output);
  }

  // optional float width = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->width(), output);
  }

  // optional float height = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.BoundingBox)
}

::google::protobuf::uint8* BoundingBox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 label = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->label(), target);
  }

  // optional float score = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  // optional float x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->x(), target);
  }

  // optional float y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->y(), target);
  }

  // optional float width = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->width(), target);
  }

  // optional float height = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.BoundingBox)
  return target;
}

size_t BoundingBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.BoundingBox)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->label());
    }

    // optional float score = 2;
    if (has_score()) {
      total_size += 1 + 4;
    }

    // optional float x = 3;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 4;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float width = 5;
    if (has_width()) {
      total_size += 1 + 4;
    }

    // optional float height = 6;
    if (has_height()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoundingBox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.BoundingBox)
  GOOGLE_DCHECK_NE(&from, this);
  const BoundingBox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoundingBox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.BoundingBox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.BoundingBox)
    MergeFrom(*source);
  }
}

void BoundingBox::MergeFrom(const BoundingBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.BoundingBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      label_ = from.label_;
    }
    if (cached_has_bits & 0x00000002u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000010u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000020u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BoundingBox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.BoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoundingBox::CopyFrom(const BoundingBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.BoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoundingBox::IsInitialized() const {
  return true;
}

void BoundingBox::Swap(BoundingBox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoundingBox::InternalSwap(BoundingBox* other) {
  using std::swap;
  swap(label_, other->label_);
  swap(score_, other->score_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BoundingBox::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BoundingBox

// optional uint32 label = 1;
bool BoundingBox::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BoundingBox::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
void BoundingBox::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
void BoundingBox::clear_label() {
  label_ = 0u;
  clear_has_label();
}
::google::protobuf::uint32 BoundingBox::label() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BoundingBox.label)
  return label_;
}
void BoundingBox::set_label(::google::protobuf::uint32 value) {
  set_has_label();
  label_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BoundingBox.label)
}

// optional float score = 2;
bool BoundingBox::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BoundingBox::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
void BoundingBox::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
void BoundingBox::clear_score() {
  score_ = 0;
  clear_has_score();
}
float BoundingBox::score() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BoundingBox.score)
  return score_;
}
void BoundingBox::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BoundingBox.score)
}

// optional float x = 3;
bool BoundingBox::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BoundingBox::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
void BoundingBox::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void BoundingBox::clear_x() {
  x_ = 0;
  clear_has_x();
}
float BoundingBox::x() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BoundingBox.x)
  return x_;
}
void BoundingBox::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BoundingBox.x)
}

// optional float y = 4;
bool BoundingBox::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BoundingBox::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
void BoundingBox::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void BoundingBox::clear_y() {
  y_ = 0;
  clear_has_y();
}
float BoundingBox::y() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BoundingBox.y)
  return y_;
}
void BoundingBox::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BoundingBox.y)
}

// optional float width = 5;
bool BoundingBox::has_width() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BoundingBox::set_has_width() {
  _has_bits_[0] |= 0x00000010u;
}
void BoundingBox::clear_has_width() {
  _has_bits_[0] &= ~0x00000010u;
}
void BoundingBox::clear_width() {
  width_ = 0;
  clear_has_width();
}
float BoundingBox::width() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BoundingBox.width)
  return width_;
}
void BoundingBox::set_width(float value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BoundingBox.width)
}

// optional float height = 6;
bool BoundingBox::has_height() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BoundingBox::set_has_height() {
  _has_bits_[0] |= 0x00000020u;
}
void BoundingBox::clear_has_height() {
  _has_bits_[0] &= ~0x00000020u;
}
void BoundingBox::clear_height() {
  height_ = 0;
  clear_has_height();
}
float BoundingBox::height() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.BoundingBox.height)
  return height_;
}
void BoundingBox::set_height(float value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.BoundingBox.height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeResult::kAttributeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeResult::AttributeResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.AttributeResult)
}
AttributeResult::AttributeResult(const AttributeResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      attribute_(from.attribute_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.AttributeResult)
}

void AttributeResult::SharedCtor() {
  _cached_size_ = 0;
}

AttributeResult::~AttributeResult() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.AttributeResult)
  SharedDtor();
}

void AttributeResult::SharedDtor() {
}

void AttributeResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeResult::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttributeResult& AttributeResult::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

AttributeResult* AttributeResult::New(::google::protobuf::Arena* arena) const {
  AttributeResult* n = new AttributeResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttributeResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.AttributeResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AttributeResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.AttributeResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.Attribute attribute = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.AttributeResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.AttributeResult)
  return false;
#undef DO_
}

void AttributeResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.AttributeResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.Attribute attribute = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribute_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attribute(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.AttributeResult)
}

::google::protobuf::uint8* AttributeResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.AttributeResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.Attribute attribute = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribute_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->attribute(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.AttributeResult)
  return target;
}

size_t AttributeResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.AttributeResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.Attribute attribute = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->attribute_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attribute(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.AttributeResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.AttributeResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.AttributeResult)
    MergeFrom(*source);
  }
}

void AttributeResult::MergeFrom(const AttributeResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.AttributeResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribute_.MergeFrom(from.attribute_);
}

void AttributeResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.AttributeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeResult::CopyFrom(const AttributeResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.AttributeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeResult::IsInitialized() const {
  return true;
}

void AttributeResult::Swap(AttributeResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttributeResult::InternalSwap(AttributeResult* other) {
  using std::swap;
  attribute_.InternalSwap(&other->attribute_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeResult::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttributeResult

// repeated .vitis.ai.proto.Attribute attribute = 1;
int AttributeResult::attribute_size() const {
  return attribute_.size();
}
void AttributeResult::clear_attribute() {
  attribute_.Clear();
}
const ::vitis::ai::proto::Attribute& AttributeResult::attribute(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.AttributeResult.attribute)
  return attribute_.Get(index);
}
::vitis::ai::proto::Attribute* AttributeResult::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.AttributeResult.attribute)
  return attribute_.Mutable(index);
}
::vitis::ai::proto::Attribute* AttributeResult::add_attribute() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.AttributeResult.attribute)
  return attribute_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::Attribute >*
AttributeResult::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.AttributeResult.attribute)
  return &attribute_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::Attribute >&
AttributeResult::attribute() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.AttributeResult.attribute)
  return attribute_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LandmarkResult::kScoreFieldNumber;
const int LandmarkResult::kPointFieldNumber;
const int LandmarkResult::kGenderFieldNumber;
const int LandmarkResult::kAgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LandmarkResult::LandmarkResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.LandmarkResult)
}
LandmarkResult::LandmarkResult(const LandmarkResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      point_(from.point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&age_) -
    reinterpret_cast<char*>(&score_)) + sizeof(age_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.LandmarkResult)
}

void LandmarkResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&age_) -
      reinterpret_cast<char*>(&score_)) + sizeof(age_));
}

LandmarkResult::~LandmarkResult() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.LandmarkResult)
  SharedDtor();
}

void LandmarkResult::SharedDtor() {
}

void LandmarkResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LandmarkResult::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LandmarkResult& LandmarkResult::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

LandmarkResult* LandmarkResult::New(::google::protobuf::Arena* arena) const {
  LandmarkResult* n = new LandmarkResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LandmarkResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.LandmarkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&score_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&age_) -
        reinterpret_cast<char*>(&score_)) + sizeof(age_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LandmarkResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.LandmarkResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vitis.ai.proto.Point point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gender = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_gender();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 age = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.LandmarkResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.LandmarkResult)
  return false;
#undef DO_
}

void LandmarkResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.LandmarkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float score = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->score(), output);
  }

  // repeated .vitis.ai.proto.Point point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->point(static_cast<int>(i)), output);
  }

  // optional uint32 gender = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gender(), output);
  }

  // optional uint32 age = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->age(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.LandmarkResult)
}

::google::protobuf::uint8* LandmarkResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.LandmarkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float score = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->score(), target);
  }

  // repeated .vitis.ai.proto.Point point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->point(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 gender = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gender(), target);
  }

  // optional uint32 age = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->age(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.LandmarkResult)
  return target;
}

size_t LandmarkResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.LandmarkResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.Point point = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional float score = 1;
    if (has_score()) {
      total_size += 1 + 4;
    }

    // optional uint32 gender = 3;
    if (has_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gender());
    }

    // optional uint32 age = 4;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->age());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LandmarkResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.LandmarkResult)
  GOOGLE_DCHECK_NE(&from, this);
  const LandmarkResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LandmarkResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.LandmarkResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.LandmarkResult)
    MergeFrom(*source);
  }
}

void LandmarkResult::MergeFrom(const LandmarkResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.LandmarkResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000002u) {
      gender_ = from.gender_;
    }
    if (cached_has_bits & 0x00000004u) {
      age_ = from.age_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LandmarkResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.LandmarkResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LandmarkResult::CopyFrom(const LandmarkResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.LandmarkResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LandmarkResult::IsInitialized() const {
  return true;
}

void LandmarkResult::Swap(LandmarkResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LandmarkResult::InternalSwap(LandmarkResult* other) {
  using std::swap;
  point_.InternalSwap(&other->point_);
  swap(score_, other->score_);
  swap(gender_, other->gender_);
  swap(age_, other->age_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LandmarkResult::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LandmarkResult

// optional float score = 1;
bool LandmarkResult::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LandmarkResult::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
void LandmarkResult::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
void LandmarkResult::clear_score() {
  score_ = 0;
  clear_has_score();
}
float LandmarkResult::score() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.LandmarkResult.score)
  return score_;
}
void LandmarkResult::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.LandmarkResult.score)
}

// repeated .vitis.ai.proto.Point point = 2;
int LandmarkResult::point_size() const {
  return point_.size();
}
void LandmarkResult::clear_point() {
  point_.Clear();
}
const ::vitis::ai::proto::Point& LandmarkResult::point(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.LandmarkResult.point)
  return point_.Get(index);
}
::vitis::ai::proto::Point* LandmarkResult::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.LandmarkResult.point)
  return point_.Mutable(index);
}
::vitis::ai::proto::Point* LandmarkResult::add_point() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.LandmarkResult.point)
  return point_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::Point >*
LandmarkResult::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.LandmarkResult.point)
  return &point_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::Point >&
LandmarkResult::point() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.LandmarkResult.point)
  return point_;
}

// optional uint32 gender = 3;
bool LandmarkResult::has_gender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LandmarkResult::set_has_gender() {
  _has_bits_[0] |= 0x00000002u;
}
void LandmarkResult::clear_has_gender() {
  _has_bits_[0] &= ~0x00000002u;
}
void LandmarkResult::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
::google::protobuf::uint32 LandmarkResult::gender() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.LandmarkResult.gender)
  return gender_;
}
void LandmarkResult::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.LandmarkResult.gender)
}

// optional uint32 age = 4;
bool LandmarkResult::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LandmarkResult::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
void LandmarkResult::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
void LandmarkResult::clear_age() {
  age_ = 0u;
  clear_has_age();
}
::google::protobuf::uint32 LandmarkResult::age() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.LandmarkResult.age)
  return age_;
}
void LandmarkResult::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.LandmarkResult.age)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectResult::kBoundingBoxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectResult::DetectResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.DetectResult)
}
DetectResult::DetectResult(const DetectResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      bounding_box_(from.bounding_box_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.DetectResult)
}

void DetectResult::SharedCtor() {
  _cached_size_ = 0;
}

DetectResult::~DetectResult() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.DetectResult)
  SharedDtor();
}

void DetectResult::SharedDtor() {
}

void DetectResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectResult::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectResult& DetectResult::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

DetectResult* DetectResult::New(::google::protobuf::Arena* arena) const {
  DetectResult* n = new DetectResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.DetectResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bounding_box_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DetectResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.DetectResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.BoundingBox bounding_box = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.DetectResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.DetectResult)
  return false;
#undef DO_
}

void DetectResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.DetectResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.BoundingBox bounding_box = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bounding_box_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bounding_box(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.DetectResult)
}

::google::protobuf::uint8* DetectResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.DetectResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.BoundingBox bounding_box = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bounding_box_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->bounding_box(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.DetectResult)
  return target;
}

size_t DetectResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.DetectResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.BoundingBox bounding_box = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bounding_box_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bounding_box(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.DetectResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.DetectResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.DetectResult)
    MergeFrom(*source);
  }
}

void DetectResult::MergeFrom(const DetectResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.DetectResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bounding_box_.MergeFrom(from.bounding_box_);
}

void DetectResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.DetectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectResult::CopyFrom(const DetectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.DetectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectResult::IsInitialized() const {
  return true;
}

void DetectResult::Swap(DetectResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectResult::InternalSwap(DetectResult* other) {
  using std::swap;
  bounding_box_.InternalSwap(&other->bounding_box_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectResult::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DetectResult

// repeated .vitis.ai.proto.BoundingBox bounding_box = 1;
int DetectResult::bounding_box_size() const {
  return bounding_box_.size();
}
void DetectResult::clear_bounding_box() {
  bounding_box_.Clear();
}
const ::vitis::ai::proto::BoundingBox& DetectResult::bounding_box(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DetectResult.bounding_box)
  return bounding_box_.Get(index);
}
::vitis::ai::proto::BoundingBox* DetectResult::mutable_bounding_box(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DetectResult.bounding_box)
  return bounding_box_.Mutable(index);
}
::vitis::ai::proto::BoundingBox* DetectResult::add_bounding_box() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.DetectResult.bounding_box)
  return bounding_box_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::BoundingBox >*
DetectResult::mutable_bounding_box() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.DetectResult.bounding_box)
  return &bounding_box_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::BoundingBox >&
DetectResult::bounding_box() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.DetectResult.bounding_box)
  return bounding_box_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefineDetResult::kBoundingBoxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefineDetResult::RefineDetResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.RefineDetResult)
}
RefineDetResult::RefineDetResult(const RefineDetResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      bounding_box_(from.bounding_box_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.RefineDetResult)
}

void RefineDetResult::SharedCtor() {
  _cached_size_ = 0;
}

RefineDetResult::~RefineDetResult() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.RefineDetResult)
  SharedDtor();
}

void RefineDetResult::SharedDtor() {
}

void RefineDetResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefineDetResult::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefineDetResult& RefineDetResult::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

RefineDetResult* RefineDetResult::New(::google::protobuf::Arena* arena) const {
  RefineDetResult* n = new RefineDetResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefineDetResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.RefineDetResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bounding_box_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RefineDetResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.RefineDetResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.BoundingBox bounding_box = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.RefineDetResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.RefineDetResult)
  return false;
#undef DO_
}

void RefineDetResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.RefineDetResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.BoundingBox bounding_box = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bounding_box_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bounding_box(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.RefineDetResult)
}

::google::protobuf::uint8* RefineDetResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.RefineDetResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.BoundingBox bounding_box = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bounding_box_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->bounding_box(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.RefineDetResult)
  return target;
}

size_t RefineDetResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.RefineDetResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.BoundingBox bounding_box = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bounding_box_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bounding_box(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefineDetResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.RefineDetResult)
  GOOGLE_DCHECK_NE(&from, this);
  const RefineDetResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefineDetResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.RefineDetResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.RefineDetResult)
    MergeFrom(*source);
  }
}

void RefineDetResult::MergeFrom(const RefineDetResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.RefineDetResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bounding_box_.MergeFrom(from.bounding_box_);
}

void RefineDetResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.RefineDetResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefineDetResult::CopyFrom(const RefineDetResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.RefineDetResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefineDetResult::IsInitialized() const {
  return true;
}

void RefineDetResult::Swap(RefineDetResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefineDetResult::InternalSwap(RefineDetResult* other) {
  using std::swap;
  bounding_box_.InternalSwap(&other->bounding_box_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefineDetResult::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefineDetResult

// repeated .vitis.ai.proto.BoundingBox bounding_box = 1;
int RefineDetResult::bounding_box_size() const {
  return bounding_box_.size();
}
void RefineDetResult::clear_bounding_box() {
  bounding_box_.Clear();
}
const ::vitis::ai::proto::BoundingBox& RefineDetResult::bounding_box(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RefineDetResult.bounding_box)
  return bounding_box_.Get(index);
}
::vitis::ai::proto::BoundingBox* RefineDetResult::mutable_bounding_box(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.RefineDetResult.bounding_box)
  return bounding_box_.Mutable(index);
}
::vitis::ai::proto::BoundingBox* RefineDetResult::add_bounding_box() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.RefineDetResult.bounding_box)
  return bounding_box_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::BoundingBox >*
RefineDetResult::mutable_bounding_box() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.RefineDetResult.bounding_box)
  return &bounding_box_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::BoundingBox >&
RefineDetResult::bounding_box() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.RefineDetResult.bounding_box)
  return bounding_box_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineAtt::kTypeFieldNumber;
const int LineAtt::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineAtt::LineAtt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.LineAtt)
}
LineAtt::LineAtt(const LineAtt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      point_(from.point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.LineAtt)
}

void LineAtt::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
}

LineAtt::~LineAtt() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.LineAtt)
  SharedDtor();
}

void LineAtt::SharedDtor() {
}

void LineAtt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LineAtt::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LineAtt& LineAtt::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

LineAtt* LineAtt::New(::google::protobuf::Arena* arena) const {
  LineAtt* n = new LineAtt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LineAtt::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.LineAtt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LineAtt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.LineAtt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vitis.ai.proto.Point point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.LineAtt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.LineAtt)
  return false;
#undef DO_
}

void LineAtt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.LineAtt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // repeated .vitis.ai.proto.Point point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->point(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.LineAtt)
}

::google::protobuf::uint8* LineAtt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.LineAtt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // repeated .vitis.ai.proto.Point point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.LineAtt)
  return target;
}

size_t LineAtt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.LineAtt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.Point point = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point(static_cast<int>(i)));
    }
  }

  // optional uint32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LineAtt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.LineAtt)
  GOOGLE_DCHECK_NE(&from, this);
  const LineAtt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LineAtt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.LineAtt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.LineAtt)
    MergeFrom(*source);
  }
}

void LineAtt::MergeFrom(const LineAtt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.LineAtt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
  if (from.has_type()) {
    set_type(from.type());
  }
}

void LineAtt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.LineAtt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineAtt::CopyFrom(const LineAtt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.LineAtt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineAtt::IsInitialized() const {
  return true;
}

void LineAtt::Swap(LineAtt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineAtt::InternalSwap(LineAtt* other) {
  using std::swap;
  point_.InternalSwap(&other->point_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LineAtt::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LineAtt

// optional uint32 type = 1;
bool LineAtt::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LineAtt::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void LineAtt::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void LineAtt::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 LineAtt::type() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.LineAtt.type)
  return type_;
}
void LineAtt::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.LineAtt.type)
}

// repeated .vitis.ai.proto.Point point = 2;
int LineAtt::point_size() const {
  return point_.size();
}
void LineAtt::clear_point() {
  point_.Clear();
}
const ::vitis::ai::proto::Point& LineAtt::point(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.LineAtt.point)
  return point_.Get(index);
}
::vitis::ai::proto::Point* LineAtt::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.LineAtt.point)
  return point_.Mutable(index);
}
::vitis::ai::proto::Point* LineAtt::add_point() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.LineAtt.point)
  return point_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::Point >*
LineAtt::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.LineAtt.point)
  return &point_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::Point >&
LineAtt::point() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.LineAtt.point)
  return point_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoadlineResult::kLineAttFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoadlineResult::RoadlineResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.RoadlineResult)
}
RoadlineResult::RoadlineResult(const RoadlineResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      line_att_(from.line_att_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.RoadlineResult)
}

void RoadlineResult::SharedCtor() {
  _cached_size_ = 0;
}

RoadlineResult::~RoadlineResult() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.RoadlineResult)
  SharedDtor();
}

void RoadlineResult::SharedDtor() {
}

void RoadlineResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoadlineResult::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoadlineResult& RoadlineResult::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoadlineResult* RoadlineResult::New(::google::protobuf::Arena* arena) const {
  RoadlineResult* n = new RoadlineResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoadlineResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.RoadlineResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_att_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoadlineResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.RoadlineResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.LineAtt line_att = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_line_att()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.RoadlineResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.RoadlineResult)
  return false;
#undef DO_
}

void RoadlineResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.RoadlineResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.LineAtt line_att = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_att_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->line_att(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.RoadlineResult)
}

::google::protobuf::uint8* RoadlineResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.RoadlineResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.LineAtt line_att = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_att_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->line_att(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.RoadlineResult)
  return target;
}

size_t RoadlineResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.RoadlineResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.LineAtt line_att = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->line_att_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->line_att(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoadlineResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.RoadlineResult)
  GOOGLE_DCHECK_NE(&from, this);
  const RoadlineResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoadlineResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.RoadlineResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.RoadlineResult)
    MergeFrom(*source);
  }
}

void RoadlineResult::MergeFrom(const RoadlineResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.RoadlineResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_att_.MergeFrom(from.line_att_);
}

void RoadlineResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.RoadlineResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoadlineResult::CopyFrom(const RoadlineResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.RoadlineResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoadlineResult::IsInitialized() const {
  return true;
}

void RoadlineResult::Swap(RoadlineResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoadlineResult::InternalSwap(RoadlineResult* other) {
  using std::swap;
  line_att_.InternalSwap(&other->line_att_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoadlineResult::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoadlineResult

// repeated .vitis.ai.proto.LineAtt line_att = 1;
int RoadlineResult::line_att_size() const {
  return line_att_.size();
}
void RoadlineResult::clear_line_att() {
  line_att_.Clear();
}
const ::vitis::ai::proto::LineAtt& RoadlineResult::line_att(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.RoadlineResult.line_att)
  return line_att_.Get(index);
}
::vitis::ai::proto::LineAtt* RoadlineResult::mutable_line_att(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.RoadlineResult.line_att)
  return line_att_.Mutable(index);
}
::vitis::ai::proto::LineAtt* RoadlineResult::add_line_att() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.RoadlineResult.line_att)
  return line_att_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::LineAtt >*
RoadlineResult::mutable_line_att() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.RoadlineResult.line_att)
  return &line_att_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::LineAtt >&
RoadlineResult::line_att() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.RoadlineResult.line_att)
  return line_att_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Score::kIndexFieldNumber;
const int Score::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Score::Score()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.Score)
}
Score::Score(const Score& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&index_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.Score)
}

void Score::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&index_)) + sizeof(score_));
}

Score::~Score() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.Score)
  SharedDtor();
}

void Score::SharedDtor() {
}

void Score::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Score::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Score& Score::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

Score* Score::New(::google::protobuf::Arena* arena) const {
  Score* n = new Score;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Score::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.Score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&score_) -
        reinterpret_cast<char*>(&index_)) + sizeof(score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Score::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.Score)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.Score)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.Score)
  return false;
#undef DO_
}

void Score::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.Score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional float score = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.Score)
}

::google::protobuf::uint8* Score::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.Score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional float score = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.Score)
  return target;
}

size_t Score::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.Score)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional float score = 2;
    if (has_score()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Score::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.Score)
  GOOGLE_DCHECK_NE(&from, this);
  const Score* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Score>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.Score)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.Score)
    MergeFrom(*source);
  }
}

void Score::MergeFrom(const Score& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.Score)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Score::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.Score)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Score::CopyFrom(const Score& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.Score)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Score::IsInitialized() const {
  return true;
}

void Score::Swap(Score* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Score::InternalSwap(Score* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(score_, other->score_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Score::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Score

// optional int32 index = 1;
bool Score::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Score::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void Score::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void Score::clear_index() {
  index_ = 0;
  clear_has_index();
}
::google::protobuf::int32 Score::index() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.Score.index)
  return index_;
}
void Score::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.Score.index)
}

// optional float score = 2;
bool Score::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Score::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
void Score::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
void Score::clear_score() {
  score_ = 0;
  clear_has_score();
}
float Score::score() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.Score.score)
  return score_;
}
void Score::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:vitis.ai.proto.Score.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassificationResult::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassificationResult::ClassificationResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.ClassificationResult)
}
ClassificationResult::ClassificationResult(const ClassificationResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      score_(from.score_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.ClassificationResult)
}

void ClassificationResult::SharedCtor() {
  _cached_size_ = 0;
}

ClassificationResult::~ClassificationResult() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.ClassificationResult)
  SharedDtor();
}

void ClassificationResult::SharedDtor() {
}

void ClassificationResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassificationResult::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassificationResult& ClassificationResult::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClassificationResult* ClassificationResult::New(::google::protobuf::Arena* arena) const {
  ClassificationResult* n = new ClassificationResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassificationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.ClassificationResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClassificationResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.ClassificationResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vitis.ai.proto.Score score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_score()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.ClassificationResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.ClassificationResult)
  return false;
#undef DO_
}

void ClassificationResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.ClassificationResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.Score score = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->score_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->score(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.ClassificationResult)
}

::google::protobuf::uint8* ClassificationResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.ClassificationResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vitis.ai.proto.Score score = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->score_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->score(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.ClassificationResult)
  return target;
}

size_t ClassificationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.ClassificationResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .vitis.ai.proto.Score score = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->score_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->score(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassificationResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.ClassificationResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassificationResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassificationResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.ClassificationResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.ClassificationResult)
    MergeFrom(*source);
  }
}

void ClassificationResult::MergeFrom(const ClassificationResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.ClassificationResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  score_.MergeFrom(from.score_);
}

void ClassificationResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.ClassificationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassificationResult::CopyFrom(const ClassificationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.ClassificationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassificationResult::IsInitialized() const {
  return true;
}

void ClassificationResult::Swap(ClassificationResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassificationResult::InternalSwap(ClassificationResult* other) {
  using std::swap;
  score_.InternalSwap(&other->score_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassificationResult::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClassificationResult

// repeated .vitis.ai.proto.Score score = 1;
int ClassificationResult::score_size() const {
  return score_.size();
}
void ClassificationResult::clear_score() {
  score_.Clear();
}
const ::vitis::ai::proto::Score& ClassificationResult::score(int index) const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.ClassificationResult.score)
  return score_.Get(index);
}
::vitis::ai::proto::Score* ClassificationResult::mutable_score(int index) {
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.ClassificationResult.score)
  return score_.Mutable(index);
}
::vitis::ai::proto::Score* ClassificationResult::add_score() {
  // @@protoc_insertion_point(field_add:vitis.ai.proto.ClassificationResult.score)
  return score_.Add();
}
::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::Score >*
ClassificationResult::mutable_score() {
  // @@protoc_insertion_point(field_mutable_list:vitis.ai.proto.ClassificationResult.score)
  return &score_;
}
const ::google::protobuf::RepeatedPtrField< ::vitis::ai::proto::Score >&
ClassificationResult::score() const {
  // @@protoc_insertion_point(field_list:vitis.ai.proto.ClassificationResult.score)
  return score_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DpuModelResult::kLandmarkResultFieldNumber;
const int DpuModelResult::kDetectResultFieldNumber;
const int DpuModelResult::kAttributeResultFieldNumber;
const int DpuModelResult::kRefineDetResultFieldNumber;
const int DpuModelResult::kClassificationResultFieldNumber;
const int DpuModelResult::kRoadlineResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DpuModelResult::DpuModelResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vitis.ai.proto.DpuModelResult)
}
DpuModelResult::DpuModelResult(const DpuModelResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_dpu_model_result();
  switch (from.dpu_model_result_case()) {
    case kLandmarkResult: {
      mutable_landmark_result()->::vitis::ai::proto::LandmarkResult::MergeFrom(from.landmark_result());
      break;
    }
    case kDetectResult: {
      mutable_detect_result()->::vitis::ai::proto::DetectResult::MergeFrom(from.detect_result());
      break;
    }
    case kAttributeResult: {
      mutable_attribute_result()->::vitis::ai::proto::AttributeResult::MergeFrom(from.attribute_result());
      break;
    }
    case kRefineDetResult: {
      mutable_refine_det_result()->::vitis::ai::proto::RefineDetResult::MergeFrom(from.refine_det_result());
      break;
    }
    case kClassificationResult: {
      mutable_classification_result()->::vitis::ai::proto::ClassificationResult::MergeFrom(from.classification_result());
      break;
    }
    case kRoadlineResult: {
      mutable_roadline_result()->::vitis::ai::proto::RoadlineResult::MergeFrom(from.roadline_result());
      break;
    }
    case DPU_MODEL_RESULT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vitis.ai.proto.DpuModelResult)
}

void DpuModelResult::SharedCtor() {
  _cached_size_ = 0;
  clear_has_dpu_model_result();
}

DpuModelResult::~DpuModelResult() {
  // @@protoc_insertion_point(destructor:vitis.ai.proto.DpuModelResult)
  SharedDtor();
}

void DpuModelResult::SharedDtor() {
  if (has_dpu_model_result()) {
    clear_dpu_model_result();
  }
}

void DpuModelResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DpuModelResult::descriptor() {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DpuModelResult& DpuModelResult::default_instance() {
  protobuf_dpu_5fmodel_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

DpuModelResult* DpuModelResult::New(::google::protobuf::Arena* arena) const {
  DpuModelResult* n = new DpuModelResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DpuModelResult::clear_dpu_model_result() {
// @@protoc_insertion_point(one_of_clear_start:vitis.ai.proto.DpuModelResult)
  switch (dpu_model_result_case()) {
    case kLandmarkResult: {
      delete dpu_model_result_.landmark_result_;
      break;
    }
    case kDetectResult: {
      delete dpu_model_result_.detect_result_;
      break;
    }
    case kAttributeResult: {
      delete dpu_model_result_.attribute_result_;
      break;
    }
    case kRefineDetResult: {
      delete dpu_model_result_.refine_det_result_;
      break;
    }
    case kClassificationResult: {
      delete dpu_model_result_.classification_result_;
      break;
    }
    case kRoadlineResult: {
      delete dpu_model_result_.roadline_result_;
      break;
    }
    case DPU_MODEL_RESULT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DPU_MODEL_RESULT_NOT_SET;
}


void DpuModelResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vitis.ai.proto.DpuModelResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_dpu_model_result();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DpuModelResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vitis.ai.proto.DpuModelResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .vitis.ai.proto.LandmarkResult landmark_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_landmark_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.DetectResult detect_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detect_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.AttributeResult attribute_result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attribute_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.RefineDetResult refine_det_result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refine_det_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.ClassificationResult classification_result = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_classification_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .vitis.ai.proto.RoadlineResult roadline_result = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roadline_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vitis.ai.proto.DpuModelResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vitis.ai.proto.DpuModelResult)
  return false;
#undef DO_
}

void DpuModelResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vitis.ai.proto.DpuModelResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (dpu_model_result_case()) {
    case kLandmarkResult:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *dpu_model_result_.landmark_result_, output);
      break;
    case kDetectResult:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, *dpu_model_result_.detect_result_, output);
      break;
    case kAttributeResult:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, *dpu_model_result_.attribute_result_, output);
      break;
    case kRefineDetResult:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, *dpu_model_result_.refine_det_result_, output);
      break;
    case kClassificationResult:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, *dpu_model_result_.classification_result_, output);
      break;
    case kRoadlineResult:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, *dpu_model_result_.roadline_result_, output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vitis.ai.proto.DpuModelResult)
}

::google::protobuf::uint8* DpuModelResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vitis.ai.proto.DpuModelResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (dpu_model_result_case()) {
    case kLandmarkResult:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          1, *dpu_model_result_.landmark_result_, deterministic, target);
      break;
    case kDetectResult:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          2, *dpu_model_result_.detect_result_, deterministic, target);
      break;
    case kAttributeResult:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          3, *dpu_model_result_.attribute_result_, deterministic, target);
      break;
    case kRefineDetResult:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          4, *dpu_model_result_.refine_det_result_, deterministic, target);
      break;
    case kClassificationResult:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          5, *dpu_model_result_.classification_result_, deterministic, target);
      break;
    case kRoadlineResult:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          6, *dpu_model_result_.roadline_result_, deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vitis.ai.proto.DpuModelResult)
  return target;
}

size_t DpuModelResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vitis.ai.proto.DpuModelResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (dpu_model_result_case()) {
    // optional .vitis.ai.proto.LandmarkResult landmark_result = 1;
    case kLandmarkResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dpu_model_result_.landmark_result_);
      break;
    }
    // optional .vitis.ai.proto.DetectResult detect_result = 2;
    case kDetectResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dpu_model_result_.detect_result_);
      break;
    }
    // optional .vitis.ai.proto.AttributeResult attribute_result = 3;
    case kAttributeResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dpu_model_result_.attribute_result_);
      break;
    }
    // optional .vitis.ai.proto.RefineDetResult refine_det_result = 4;
    case kRefineDetResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dpu_model_result_.refine_det_result_);
      break;
    }
    // optional .vitis.ai.proto.ClassificationResult classification_result = 5;
    case kClassificationResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dpu_model_result_.classification_result_);
      break;
    }
    // optional .vitis.ai.proto.RoadlineResult roadline_result = 6;
    case kRoadlineResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dpu_model_result_.roadline_result_);
      break;
    }
    case DPU_MODEL_RESULT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DpuModelResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vitis.ai.proto.DpuModelResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DpuModelResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DpuModelResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vitis.ai.proto.DpuModelResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vitis.ai.proto.DpuModelResult)
    MergeFrom(*source);
  }
}

void DpuModelResult::MergeFrom(const DpuModelResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vitis.ai.proto.DpuModelResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.dpu_model_result_case()) {
    case kLandmarkResult: {
      mutable_landmark_result()->::vitis::ai::proto::LandmarkResult::MergeFrom(from.landmark_result());
      break;
    }
    case kDetectResult: {
      mutable_detect_result()->::vitis::ai::proto::DetectResult::MergeFrom(from.detect_result());
      break;
    }
    case kAttributeResult: {
      mutable_attribute_result()->::vitis::ai::proto::AttributeResult::MergeFrom(from.attribute_result());
      break;
    }
    case kRefineDetResult: {
      mutable_refine_det_result()->::vitis::ai::proto::RefineDetResult::MergeFrom(from.refine_det_result());
      break;
    }
    case kClassificationResult: {
      mutable_classification_result()->::vitis::ai::proto::ClassificationResult::MergeFrom(from.classification_result());
      break;
    }
    case kRoadlineResult: {
      mutable_roadline_result()->::vitis::ai::proto::RoadlineResult::MergeFrom(from.roadline_result());
      break;
    }
    case DPU_MODEL_RESULT_NOT_SET: {
      break;
    }
  }
}

void DpuModelResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vitis.ai.proto.DpuModelResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DpuModelResult::CopyFrom(const DpuModelResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vitis.ai.proto.DpuModelResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DpuModelResult::IsInitialized() const {
  return true;
}

void DpuModelResult::Swap(DpuModelResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DpuModelResult::InternalSwap(DpuModelResult* other) {
  using std::swap;
  swap(dpu_model_result_, other->dpu_model_result_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DpuModelResult::GetMetadata() const {
  protobuf_dpu_5fmodel_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dpu_5fmodel_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DpuModelResult

// optional .vitis.ai.proto.LandmarkResult landmark_result = 1;
bool DpuModelResult::has_landmark_result() const {
  return dpu_model_result_case() == kLandmarkResult;
}
void DpuModelResult::set_has_landmark_result() {
  _oneof_case_[0] = kLandmarkResult;
}
void DpuModelResult::clear_landmark_result() {
  if (has_landmark_result()) {
    delete dpu_model_result_.landmark_result_;
    clear_has_dpu_model_result();
  }
}
 const ::vitis::ai::proto::LandmarkResult& DpuModelResult::landmark_result() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelResult.landmark_result)
  return has_landmark_result()
      ? *dpu_model_result_.landmark_result_
      : ::vitis::ai::proto::LandmarkResult::default_instance();
}
::vitis::ai::proto::LandmarkResult* DpuModelResult::mutable_landmark_result() {
  if (!has_landmark_result()) {
    clear_dpu_model_result();
    set_has_landmark_result();
    dpu_model_result_.landmark_result_ = new ::vitis::ai::proto::LandmarkResult;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelResult.landmark_result)
  return dpu_model_result_.landmark_result_;
}
::vitis::ai::proto::LandmarkResult* DpuModelResult::release_landmark_result() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelResult.landmark_result)
  if (has_landmark_result()) {
    clear_has_dpu_model_result();
    ::vitis::ai::proto::LandmarkResult* temp = dpu_model_result_.landmark_result_;
    dpu_model_result_.landmark_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void DpuModelResult::set_allocated_landmark_result(::vitis::ai::proto::LandmarkResult* landmark_result) {
  clear_dpu_model_result();
  if (landmark_result) {
    set_has_landmark_result();
    dpu_model_result_.landmark_result_ = landmark_result;
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelResult.landmark_result)
}

// optional .vitis.ai.proto.DetectResult detect_result = 2;
bool DpuModelResult::has_detect_result() const {
  return dpu_model_result_case() == kDetectResult;
}
void DpuModelResult::set_has_detect_result() {
  _oneof_case_[0] = kDetectResult;
}
void DpuModelResult::clear_detect_result() {
  if (has_detect_result()) {
    delete dpu_model_result_.detect_result_;
    clear_has_dpu_model_result();
  }
}
 const ::vitis::ai::proto::DetectResult& DpuModelResult::detect_result() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelResult.detect_result)
  return has_detect_result()
      ? *dpu_model_result_.detect_result_
      : ::vitis::ai::proto::DetectResult::default_instance();
}
::vitis::ai::proto::DetectResult* DpuModelResult::mutable_detect_result() {
  if (!has_detect_result()) {
    clear_dpu_model_result();
    set_has_detect_result();
    dpu_model_result_.detect_result_ = new ::vitis::ai::proto::DetectResult;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelResult.detect_result)
  return dpu_model_result_.detect_result_;
}
::vitis::ai::proto::DetectResult* DpuModelResult::release_detect_result() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelResult.detect_result)
  if (has_detect_result()) {
    clear_has_dpu_model_result();
    ::vitis::ai::proto::DetectResult* temp = dpu_model_result_.detect_result_;
    dpu_model_result_.detect_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void DpuModelResult::set_allocated_detect_result(::vitis::ai::proto::DetectResult* detect_result) {
  clear_dpu_model_result();
  if (detect_result) {
    set_has_detect_result();
    dpu_model_result_.detect_result_ = detect_result;
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelResult.detect_result)
}

// optional .vitis.ai.proto.AttributeResult attribute_result = 3;
bool DpuModelResult::has_attribute_result() const {
  return dpu_model_result_case() == kAttributeResult;
}
void DpuModelResult::set_has_attribute_result() {
  _oneof_case_[0] = kAttributeResult;
}
void DpuModelResult::clear_attribute_result() {
  if (has_attribute_result()) {
    delete dpu_model_result_.attribute_result_;
    clear_has_dpu_model_result();
  }
}
 const ::vitis::ai::proto::AttributeResult& DpuModelResult::attribute_result() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelResult.attribute_result)
  return has_attribute_result()
      ? *dpu_model_result_.attribute_result_
      : ::vitis::ai::proto::AttributeResult::default_instance();
}
::vitis::ai::proto::AttributeResult* DpuModelResult::mutable_attribute_result() {
  if (!has_attribute_result()) {
    clear_dpu_model_result();
    set_has_attribute_result();
    dpu_model_result_.attribute_result_ = new ::vitis::ai::proto::AttributeResult;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelResult.attribute_result)
  return dpu_model_result_.attribute_result_;
}
::vitis::ai::proto::AttributeResult* DpuModelResult::release_attribute_result() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelResult.attribute_result)
  if (has_attribute_result()) {
    clear_has_dpu_model_result();
    ::vitis::ai::proto::AttributeResult* temp = dpu_model_result_.attribute_result_;
    dpu_model_result_.attribute_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void DpuModelResult::set_allocated_attribute_result(::vitis::ai::proto::AttributeResult* attribute_result) {
  clear_dpu_model_result();
  if (attribute_result) {
    set_has_attribute_result();
    dpu_model_result_.attribute_result_ = attribute_result;
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelResult.attribute_result)
}

// optional .vitis.ai.proto.RefineDetResult refine_det_result = 4;
bool DpuModelResult::has_refine_det_result() const {
  return dpu_model_result_case() == kRefineDetResult;
}
void DpuModelResult::set_has_refine_det_result() {
  _oneof_case_[0] = kRefineDetResult;
}
void DpuModelResult::clear_refine_det_result() {
  if (has_refine_det_result()) {
    delete dpu_model_result_.refine_det_result_;
    clear_has_dpu_model_result();
  }
}
 const ::vitis::ai::proto::RefineDetResult& DpuModelResult::refine_det_result() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelResult.refine_det_result)
  return has_refine_det_result()
      ? *dpu_model_result_.refine_det_result_
      : ::vitis::ai::proto::RefineDetResult::default_instance();
}
::vitis::ai::proto::RefineDetResult* DpuModelResult::mutable_refine_det_result() {
  if (!has_refine_det_result()) {
    clear_dpu_model_result();
    set_has_refine_det_result();
    dpu_model_result_.refine_det_result_ = new ::vitis::ai::proto::RefineDetResult;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelResult.refine_det_result)
  return dpu_model_result_.refine_det_result_;
}
::vitis::ai::proto::RefineDetResult* DpuModelResult::release_refine_det_result() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelResult.refine_det_result)
  if (has_refine_det_result()) {
    clear_has_dpu_model_result();
    ::vitis::ai::proto::RefineDetResult* temp = dpu_model_result_.refine_det_result_;
    dpu_model_result_.refine_det_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void DpuModelResult::set_allocated_refine_det_result(::vitis::ai::proto::RefineDetResult* refine_det_result) {
  clear_dpu_model_result();
  if (refine_det_result) {
    set_has_refine_det_result();
    dpu_model_result_.refine_det_result_ = refine_det_result;
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelResult.refine_det_result)
}

// optional .vitis.ai.proto.ClassificationResult classification_result = 5;
bool DpuModelResult::has_classification_result() const {
  return dpu_model_result_case() == kClassificationResult;
}
void DpuModelResult::set_has_classification_result() {
  _oneof_case_[0] = kClassificationResult;
}
void DpuModelResult::clear_classification_result() {
  if (has_classification_result()) {
    delete dpu_model_result_.classification_result_;
    clear_has_dpu_model_result();
  }
}
 const ::vitis::ai::proto::ClassificationResult& DpuModelResult::classification_result() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelResult.classification_result)
  return has_classification_result()
      ? *dpu_model_result_.classification_result_
      : ::vitis::ai::proto::ClassificationResult::default_instance();
}
::vitis::ai::proto::ClassificationResult* DpuModelResult::mutable_classification_result() {
  if (!has_classification_result()) {
    clear_dpu_model_result();
    set_has_classification_result();
    dpu_model_result_.classification_result_ = new ::vitis::ai::proto::ClassificationResult;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelResult.classification_result)
  return dpu_model_result_.classification_result_;
}
::vitis::ai::proto::ClassificationResult* DpuModelResult::release_classification_result() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelResult.classification_result)
  if (has_classification_result()) {
    clear_has_dpu_model_result();
    ::vitis::ai::proto::ClassificationResult* temp = dpu_model_result_.classification_result_;
    dpu_model_result_.classification_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void DpuModelResult::set_allocated_classification_result(::vitis::ai::proto::ClassificationResult* classification_result) {
  clear_dpu_model_result();
  if (classification_result) {
    set_has_classification_result();
    dpu_model_result_.classification_result_ = classification_result;
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelResult.classification_result)
}

// optional .vitis.ai.proto.RoadlineResult roadline_result = 6;
bool DpuModelResult::has_roadline_result() const {
  return dpu_model_result_case() == kRoadlineResult;
}
void DpuModelResult::set_has_roadline_result() {
  _oneof_case_[0] = kRoadlineResult;
}
void DpuModelResult::clear_roadline_result() {
  if (has_roadline_result()) {
    delete dpu_model_result_.roadline_result_;
    clear_has_dpu_model_result();
  }
}
 const ::vitis::ai::proto::RoadlineResult& DpuModelResult::roadline_result() const {
  // @@protoc_insertion_point(field_get:vitis.ai.proto.DpuModelResult.roadline_result)
  return has_roadline_result()
      ? *dpu_model_result_.roadline_result_
      : ::vitis::ai::proto::RoadlineResult::default_instance();
}
::vitis::ai::proto::RoadlineResult* DpuModelResult::mutable_roadline_result() {
  if (!has_roadline_result()) {
    clear_dpu_model_result();
    set_has_roadline_result();
    dpu_model_result_.roadline_result_ = new ::vitis::ai::proto::RoadlineResult;
  }
  // @@protoc_insertion_point(field_mutable:vitis.ai.proto.DpuModelResult.roadline_result)
  return dpu_model_result_.roadline_result_;
}
::vitis::ai::proto::RoadlineResult* DpuModelResult::release_roadline_result() {
  // @@protoc_insertion_point(field_release:vitis.ai.proto.DpuModelResult.roadline_result)
  if (has_roadline_result()) {
    clear_has_dpu_model_result();
    ::vitis::ai::proto::RoadlineResult* temp = dpu_model_result_.roadline_result_;
    dpu_model_result_.roadline_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void DpuModelResult::set_allocated_roadline_result(::vitis::ai::proto::RoadlineResult* roadline_result) {
  clear_dpu_model_result();
  if (roadline_result) {
    set_has_roadline_result();
    dpu_model_result_.roadline_result_ = roadline_result;
  }
  // @@protoc_insertion_point(field_set_allocated:vitis.ai.proto.DpuModelResult.roadline_result)
}

bool DpuModelResult::has_dpu_model_result() const {
  return dpu_model_result_case() != DPU_MODEL_RESULT_NOT_SET;
}
void DpuModelResult::clear_has_dpu_model_result() {
  _oneof_case_[0] = DPU_MODEL_RESULT_NOT_SET;
}
DpuModelResult::DpuModelResultCase DpuModelResult::dpu_model_result_case() const {
  return DpuModelResult::DpuModelResultCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace ai
}  // namespace vitis

// @@protoc_insertion_point(global_scope)
